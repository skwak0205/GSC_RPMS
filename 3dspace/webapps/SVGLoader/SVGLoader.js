define("DS/SVGLoader/SVGLineMaterial",["DS/Visualization/ThreeJS_DS","DS/Shaders/AdvancedHighlightShader","DS/Shaders/AdvancedHighlightShaderSinglePass","DS/Shaders/DeferredShaders"],function(e,t,i,n){var a=e.LineDSMaterial.prototype.deferrable,r={scale:{type:"f",value:1},totalSize:{type:"f",value:0},halfWidth:{type:"f",value:.5},miterLimit:{type:"f",value:4},pixelSize:{type:"v2",value:new e.Vector2(.01,.01)},dashPattern:{type:"fv1",value:new Float32Array(2)},patternOffset:{type:"f",value:0}},o={lines2D_pars_vertex:["#define LINE_DS_VERTEX","   uniform vec2 pixelSize;","   float computeWorldSizeToPixel() {","      return abs(projectionMatrix[0][0]/gl_Position.w)/pixelSize.x;","   }","   varying vec2 vPointCurr;","varying float fadeAway;","#ifdef USE_DASHEDLINE","   varying vec2 vLineDistance;","   #ifdef USE_WIDELINE","       varying vec2 vPointNext;","       varying vec2 vPointPrec;","       varying float vLineDistanceAlt;","       varying float resetSecondDist;","       varying vec2 vConstantNext;","       varying vec2 vConstantPrec;","   #endif","#endif","#ifdef USE_WIDELINE",e.ShaderChunk.PDSFX_halfWidth_pars_vertex_fragment,"   uniform float miterLimit;","   varying vec2 vConstantCurr;","   bool isNull(float x) {","       return abs(x) < 1e-6;","   }","   vec2 cNormalize(in vec2 v) {","       float len = length(v);","       if (!isNull(len)) {","           return v/len;","       }","       return vec2(0.0);","   }","   vec3 cNormalize(in vec3 v) {","       float len = length(v);","       if (!isNull(len)) {","           return v/len;","       }","       return vec3(0.0);","   }","   vec4 cNormalize(in vec4 v) {","       float len = length(v);","       if (!isNull(len)) {","           return v/len;","       }","       return vec4(0.0);","   }","","#endif","#ifdef USE_ROUNDCAP","   varying vec2 infos;","   varying vec2 centerLeft;","   varying vec2 centerCap;","   varying vec2 centerRight;","#endif","#ifdef USE_ROUNDJOIN","   varying vec4 centerJoin;","   varying vec4 centerRightJoin;","   varying vec4 centerLeftJoin;","#endif"].join("\n"),lines2D_vertex:["#ifdef USE_DASHEDLINE","   float modelMatrixScaleX = length(modelMatrix[0]);","#ifdef FIXED_SIZE","modelMatrixScaleX *= simpleNodeData.fixedSizeScale;","#endif","   vLineDistance = modelMatrixScaleX* lineDistance;","#endif","   vPointCurr = position.xy;","#ifdef USE_WIDELINE","   vec2 eps = vec2(1e-6);","   bool bPrecCurr = !all(lessThan(abs(position.xy - previousPos.xy), eps));","   bool bCurrNext = !all(lessThan(abs(followingPos.xy - position.xy), eps));","   float offset = halfWidth;","   vec2 pos, posPrecCurr, posCurrNext;","   vec2 dirPrecCurr, dirCurrNext;","   float orientation = sign(sideExtrusion);","   bool parity = mod(sideExtrusion,2.0) < 0.5;","   vConstantCurr = position.xy;","   float worldSizeToPixel = computeWorldSizeToPixel();","   float pixelToWorld = 1.0/worldSizeToPixel;","   float distValue = (0.5*pixelToWorld - halfWidth)/(0.5*pixelToWorld);","   if (distValue > 0.0) {","       offset = 0.5*pixelToWorld;","   }","   fadeAway = 1.0-smoothstep(0.65,1.0,distValue);","   if (bPrecCurr){","       dirPrecCurr = position.xy - previousPos.xy;","       dirPrecCurr = cNormalize(dirPrecCurr);","       posPrecCurr = position.xy + offset * orientation * vec2(-dirPrecCurr.y, dirPrecCurr.x);","   } else if (bCurrNext) {","       dirPrecCurr = position.xy - followingPos.xy;","       dirPrecCurr = cNormalize(dirPrecCurr);","       posPrecCurr = position.xy + offset * dirPrecCurr.xy;","   }","","   if (bCurrNext){","       dirCurrNext = followingPos.xy - position.xy;","       dirCurrNext = cNormalize(dirCurrNext);","       posCurrNext = position.xy + offset * orientation * vec2(-dirCurrNext.y, dirCurrNext.x);","   } else if (bPrecCurr) {","       dirCurrNext = position.xy - previousPos.xy;","       dirCurrNext = cNormalize(dirCurrNext);","       posCurrNext = position.xy + offset * dirCurrNext.xy;","   }","","   vec2 dir = cNormalize(dirCurrNext - dirPrecCurr);","   vec2 nDir = vec2(-dir.y, dir.x);","   if ( bPrecCurr && bCurrNext){","       if (isNull(length(dir))){","           dir = vec2(-dirCurrNext.y, dirCurrNext.x);","           nDir = vec2(-dir.y, dir.x);","       }","       float sinAlpha = dir.y * dirPrecCurr.x - dir.x * dirPrecCurr.y;","       float alpha = asin(abs(sinAlpha));","       #ifdef USE_ROUNDJOIN","           bool angleTest = alpha < radians(45.0);","       #else","           bool angleTest = true;","       #endif","       if (sign(sinAlpha) == -orientation) {","           if (angleTest) {","               float axisCorrection = 1.0 / abs(cos(alpha));","           #if defined(USE_BEVELJOIN)","               if (parity){","                   pos = position.xy - sign(sinAlpha) * offset*axisCorrection * nDir;","               } else {","                   pos = position.xy + sign(sinAlpha) *offset*axisCorrection * nDir;","               }","           #elif defined(USE_MITERJOIN)","               float ratio = 1.0/abs(sinAlpha);","               if (miterLimit < 1.0 || ratio < miterLimit) {","                   pos = position.xy - offset * ratio * dir;","               } else {","                   if (parity){","                       pos = position.xy - sign(sinAlpha) * offset*axisCorrection * nDir;","                   } else {","                       pos = position.xy + sign(sinAlpha) *offset*axisCorrection * nDir;","                   }","               }","           #elif defined(USE_MITERCLIPJOIN)","               float ratio = 1.0/abs(sinAlpha);","               if (miterLimit < 1.0 || ratio < miterLimit) {","                   pos = position.xy - offset * ratio * dir;","               } else {","                   float dist = offset * miterLimit;","                   if (parity){","                      pos = position.xy - sign(sinAlpha) * offset*axisCorrection * nDir;","                      pos -= dist * dirCurrNext;","                   } else {","                      pos = position.xy + sign(sinAlpha) *offset*axisCorrection * nDir;","                      pos += dist * dirPrecCurr;","                   }","               }","           #elif defined(USE_ROUNDJOIN)","               if (parity){","                   pos = position.xy - sign(sinAlpha) * offset * vec2(-dirCurrNext.y,dirCurrNext.x);","                   pos -= offset * dirCurrNext;","               } else {","                   pos = position.xy - sign(sinAlpha) *offset * vec2(-dirPrecCurr.y,dirPrecCurr.x);","                   pos += offset * dirPrecCurr;","               }","           #endif","           } else {","               float dist = offset/ sinAlpha;","               pos = position.xy - dir * abs(dist) ;","           }","       } else {","           float distPoints = min(distance(position.xy, previousPos.xy), distance(position.xy, followingPos.xy)) + offset;","           float dist = offset/ sinAlpha;","           if (max(distPoints, offset) < abs(dist)){","               dist = max(distPoints - offset, offset)*sign(sinAlpha);","               if (alpha < radians(22.5)){","                   if (parity){","                       pos = posCurrNext + dist * dirCurrNext*orientation;","                   } else {","                       pos = posPrecCurr - dist * dirPrecCurr *orientation;","                   }","               } else {","                   pos = position.xy + dir * max(distPoints, offset);","               }","           } else {","               pos = position.xy + dir * abs(dist) ;","           }","       }","   } else if(bPrecCurr || bCurrNext) {","       #if defined(USE_BUTTCAP)","           pos = position.xy + offset * vec2(-dirCurrNext.y, dirCurrNext.x)*orientation;","       #else","           pos = (posCurrNext - position.xy)  + posPrecCurr;","       #endif","   } else {","       pos = position.xy + offset;","   }","vPointCurr = pos.xy;","#ifdef USE_ROUNDCAP","   if (!bPrecCurr) {","       centerLeft = position.xy;","       centerCap = position.xy;","       centerRight = followingPos.xy;","       infos.x = -halfWidth;","       infos.y = 1.0;","   } else if (!bCurrNext) {","       centerLeft = previousPos.xy;","       centerCap = previousPos.xy;","       centerRight = position.xy;","       infos.x = length(position.xy-previousPos.xy) + halfWidth;","       infos.y = 1.0;","   } else {","       infos.y = 0.0;","       centerLeft = previousPos.xy;","       centerCap = position.xy;","       centerRight = followingPos.xy;","       if (parity) {","           infos.x = dot(pos.xy - position.xy, dirCurrNext);","       } else {","           infos.x = length(position.xy - previousPos.xy) + dot(pos.xy - position.xy, dirPrecCurr);","       }","   }","#endif","#ifdef USE_ROUNDJOIN","   centerLeftJoin = vec4(0.0);","   centerRightJoin = vec4(0.0);","   centerJoin = vec4(0.0);","   if (!bPrecCurr) {","       centerLeftJoin.xy = followingPos.xy;","       centerJoin.xy = position.xy;","       centerRightJoin.xy = followingPos.xy;","       centerRightJoin.zw = dirCurrNext;","   } else if (!bCurrNext) {","       centerLeftJoin.xy = previousPos.xy;","       centerJoin.xy = position.xy;","       centerRightJoin.xy = previousPos.xy;","       centerLeftJoin.zw = -dirPrecCurr;","   } else {","       if (parity) {","           centerLeftJoin.xy = position.xy;","           centerJoin.xy = position.xy;","           centerRightJoin.xy = followingPos.xy;","           centerLeftJoin.zw = -dirCurrNext;","           centerRightJoin.zw = dirCurrNext;","           centerJoin.zw = -dir;","       } else {","           centerLeftJoin.xy = previousPos.xy;","           centerJoin.xy = position.xy;","           centerRightJoin.xy = position.xy;","           centerLeftJoin.zw = -dirPrecCurr;","           centerRightJoin.zw = dirPrecCurr;","           centerJoin.zw = -dir;","       }","   }","#endif","   #ifdef USE_DASHEDLINE","       vLineDistanceAlt = vLineDistance.x;","       vConstantNext = followingPos.xy;","       vConstantPrec = previousPos.xy;","       resetSecondDist = 0.0;","       if (!parity){","          vLineDistanceAlt = vLineDistance.y;","          vPointPrec = previousPos.xy;","          vPointNext = position.xy;","          vLineDistance.x = lineDistance.x* modelMatrixScaleX;","          vLineDistance.y = lineDistance.y* modelMatrixScaleX;","       } else {","          vLineDistanceAlt = vLineDistance.x;","          vPointPrec = position.xy;","          vPointNext = followingPos.xy;","          vLineDistance.x = lineDistance.x* modelMatrixScaleX;","          vLineDistance.y = lineDistance.y* modelMatrixScaleX;","          if (abs(lineDistance.x - lineDistance.y) < 1e-6) {","               resetSecondDist = 1.0;","          }","       }","   #endif",e._DefaultShaderChunk.getModelViewTransformationChunk("vec4 _mvPos","vec4(pos.xy,position.z,1.0)"),"   gl_Position = projectionMatrix * _mvPos;","#endif"].join("\n"),lines2D_pars_fragment:[e.ShaderChunk.PDSFX_albedo_pars_fragment,"   varying vec2 vPointCurr;","uniform float opacity;","varying float fadeAway;","#ifdef USE_WIDELINE",e.ShaderChunk.PDSFX_halfWidth_pars_vertex_fragment,"   varying vec2 vConstantCurr;","#endif","#ifdef USE_DASHEDLINE","   uniform float dashSize;","   uniform float scale;","   uniform float totalSize;","   uniform float patternOffset;","   #ifdef PATTERN_LENGTH","       uniform float dashPattern[PATTERN_LENGTH];","   #endif","   varying vec2 vLineDistance;","   #ifdef USE_WIDELINE","       varying vec2 vPointNext;","       varying vec2 vPointPrec;","       varying float vLineDistanceAlt;","       varying float resetSecondDist;","       varying vec2 vConstantNext;","       varying vec2 vConstantPrec;","   #endif","   float getDistance(in vec2 next, in vec2 prev) {","       float res = 0.0;","       vec2 direction = next-prev;","       res = dot(vPointCurr - prev, normalize(direction));","       return res;","   }","   float getDistance(in vec2 next, in vec2 prev, in vec2 origin) {","       float res = 0.0;","       vec2 direction = next-prev;","       res = dot(vPointCurr - origin, normalize(direction));","       return res;","   }","   #ifdef PATTERN_LENGTH","       vec3 getPatternInfo(in float dist) {","           int index = 0;","           float prec = 0.0, cur = 0.0;","           for (int i = 0; i < PATTERN_LENGTH; i++) {","               cur = max(scale,1e-6)*dashPattern[i];","               if (cur > dist) {","                   break;","               }","               prec = cur;","               index++;","           }","           return vec3(float(index),prec,cur);","       }","       float getPatternAlpha(in float dist) {","           #if defined(USE_ROUNDCAP) || defined(USE_SQUARECAP)","               float mDist = mod( dist + halfWidth , max(scale,1e-6) *totalSize );","           #else","               float mDist = mod( dist, max(scale,1e-6) * totalSize );","           #endif","           vec3 patternInfo = getPatternInfo(mDist);","\t\t\t#ifdef DASHEDLINE_INVERTED","           \tif (abs(mod(patternInfo.x,2.0)) < 0.5) {","               \treturn 1.0;","           \t}","\t\t\t\treturn 0.0;","\t\t\t#else","           \tif (abs(mod(patternInfo.x,2.0)) < 0.5) {","               \treturn 0.0;","           \t}","\t\t\t\treturn 1.0;","\t\t\t#endif","       }","   #endif","#endif","#ifdef USE_ROUNDCAP","   varying vec2 infos;","   varying vec2 centerLeft;","   varying vec2 centerCap;","   varying vec2 centerRight;","   bool doLeftCap(in bool leftSide) {","       bool leftCap = leftSide && infos.x < 0.0;","       if (!leftCap) {","           return false;","       }","       float distanceL = length(vPointCurr.xy - centerLeft) / halfWidth;","       if (distanceL > 1.0) {","           discard;","       }","       return true;","   }","   bool doRightCap(in bool rightSide) {","       bool rightCap = rightSide && infos.x > length(centerRight - centerCap);","       if (!rightCap) {","           return false;","       }","       float distanceR = length(vPointCurr.xy - centerRight) / halfWidth;","       if (distanceR > 1.0) {","           discard;","       }","       return true;","   }","   void doRoundCap() {","       bool centerSide = abs(length(fwidth(centerCap))) < 1e-3;","       bool capToCap = abs(fwidth(infos.y)) < 1e-3 && infos.y > 0.0;","       bool leftSide = abs(length(fwidth(centerLeft))) < 1e-3 ;","       bool rightSide = abs(length(fwidth(centerRight))) < 1e-3 ;","       bool toTreat = ! (leftSide && rightSide && centerSide) || capToCap;","       if (!toTreat) {","           return;","       }","       bool leftCap = doLeftCap(leftSide);","       bool rightCap = doRightCap(rightSide && centerSide);","   }","#endif","#ifdef USE_ROUNDJOIN","   varying vec4 centerJoin;","   varying vec4 centerRightJoin;","   varying vec4 centerLeftJoin;","   void doCentralJoin() {","       float distanceJoin = 0.0;","       float varJoinC = 0.0;","       if (dot(vPointCurr.xy - centerJoin.xy, centerJoin.zw) <= 0.0) {","           return;","       }","       distanceJoin = length(vPointCurr.xy - centerJoin.xy) / halfWidth;","       if (distanceJoin > 1.0) {","           discard;","       }","   }","   void doSideJoins() {","       bool rightJoin = abs(length(fwidth(centerRightJoin))) < 1e-3 && dot(vPointCurr.xy - centerRightJoin.xy, centerRightJoin.zw) > 0.0;","       bool leftJoin =  abs(length(fwidth(centerLeftJoin))) < 1e-3 && dot(vPointCurr.xy - centerLeftJoin.xy, centerLeftJoin.zw) > 0.0;","       float distanceRight = 0.0;","       float distanceLeft = 0.0;","       float varJoinR = 0.0;","       float varJoinL = 0.0;","       if (rightJoin) {","           distanceRight = length(vPointCurr.xy - centerRightJoin.xy) / halfWidth;","           if (distanceRight > 1.0) {","               discard;","           }","       }","       if (leftJoin) {","           distanceLeft = length(vPointCurr.xy - centerLeftJoin.xy) / halfWidth;","           if (distanceLeft > 1.0) {","               discard;","           }","       }","   }","   void doRoundJoins() {","       bool isOnJoin = abs(length(fwidth(centerJoin))) < 1e-3;","       if (isOnJoin) {","           doCentralJoin();","           return;","       }","       doSideJoins();","    }","#endif"].join("\n"),lines2D_fragment:["#ifdef USE_WIDELINE","       bool isConnection = length(fwidth(vConstantCurr)) < 1e-6;","#endif","#ifdef USE_DASHEDLINE","       float dist = vLineDistance.x;","       float dist2 = 0.0;","   #ifdef USE_WIDELINE","       bool resetDist2 = fwidth(resetSecondDist) > 1e-6;","       if (!isConnection){","           dist += getDistance(vPointNext,vPointPrec);","       } else  {","           dist = vLineDistanceAlt + getDistance(vConstantCurr,vConstantPrec, vConstantCurr);","           dist2 = getDistance(vConstantNext,vConstantCurr, vConstantCurr);","           dist2 += resetDist2 ? 0.0 : vLineDistanceAlt;","       }","   #endif","   #ifdef PATTERN_LENGTH","       float patternAlpha = getPatternAlpha(dist + patternOffset);","       #ifdef PDSFX","           ProcessLinePattern(patternAlpha, dist + patternOffset);","       #endif","       if (abs(dist2) > 1e-6) {","           float patternAlpha2 = getPatternAlpha(dist2 + patternOffset);","           #ifdef PDSFX","               ProcessLinePattern(patternAlpha2, dist2 + patternOffset);","           #endif","           patternAlpha = min(patternAlpha, patternAlpha2);","       }","       if (patternAlpha > 0.5) {","           discard;","       }","   #endif","#endif","#ifdef USE_ROUNDCAP","   doRoundCap();","#endif","#ifdef USE_ROUNDJOIN","   doRoundJoins();","#endif",a?"":"#if !defined(PICKING_MATERIAL) && !defined(PICKING_INSTANCING_MATERIAL)","   gl_FragColor.a *= fadeAway;",a?"":"#else","if (fadeAway < 1e-2) {","discard;","}",a?"":"#endif"].join("\n")},s="",l="",d="",c="",f="\n\t\t#ifdef HIGHLIGHT_MATERIAL\n\t\t  #if HIGHLIGHT_POLITE == 1\n\t\t\t#ifdef PDSFX\n\t\t\t  DS_clipPosition = _DSclipPosition;\n\t\t\t#endif\n\t\t\t#ifdef MOBILE_HIGHLIGHT_MODE\n\t\t\t\tgl_FragColor = vec4( iHighlightColor.xyz, getDepthValue() > 0.5 ?  iHighlightIntensity.y : iHighlightIntensity.x);\n\t\t\t\tgl_FragColor.a = min(gl_FragColor.a, 1.0);\n\t\t\t#else\n\t\t      gl_FragColor = vec4( highlightID / 255.0, 1.0, getDepthValue() , 1.0 / 255.0 );\n\t\t\t#endif\n\t\t  #else\n\t\t\t#ifdef MOBILE_HIGHLIGHT_MODE\n\t\t\t\tgl_FragColor = vec4( iHighlightColor.xyz, 0.8 * iHighlightIntensity.x );\n\t\t\t\tgl_FragColor.a = min(gl_FragColor.a, 1.0);\n\t\t\t#else\n\t\t\t  gl_FragColor = vec4( highlightID / 255.0, 1.0 , 0.0, 1.0 / 255.0 );\n\t\t\t#endif\n\t\t  #endif\n\t\t#endif\n\t  ";a&&(s=[e.DeferredShaderChunk.depth_pars_vertex,e.DeferredShaderChunk.picking_pars_vertex,e.DeferredShaderChunk.picking_instancing_pars_vertex,e.DeferredShaderChunk.highlight_pars_vertex].join("\n"),d=[e.DeferredShaderChunk.depth_vertex,e.DeferredShaderChunk.picking_vertex,e.DeferredShaderChunk.picking_instancing_vertex,e.DeferredShaderChunk.highlight_vertex].join("\n"),l=[e.DeferredShaderChunk.picking_pars_fragment,e.DeferredShaderChunk.picking_instancing_pars_fragment,e.DeferredShaderChunk.depth_pars_fragment,e.DeferredShaderChunk.highlight_pars_fragment].join("\n"),c=[e.DeferredShaderChunk.picking_fragment,e.DeferredShaderChunk.picking_instancing_fragment,e.DeferredShaderChunk.depth_fragment,e.DeferredShaderChunk.lineic_normal_fragment,f].join("\n")),e.ShaderLib.line2D={uniforms:e.UniformsUtils.merge([e.UniformsLib.common,e.UniformsLib.clipPlanes,r,a?e.UniformsLib.deferred:{}]),vertexShader:["#define SVGLINE",e.ShaderChunk.clip_pars_vertex,e.ShaderChunk.map_pars_vertex,e.ShaderChunk.color_pars_vertex,e.ShaderChunk.morphtarget_pars_vertex,e.ShaderChunk.skinning_pars_vertex,o.lines2D_pars_vertex,e.ShaderChunk.fog_pars_vertex,e.DeferredShaderChunk.oit_pars_vertex,s,"void main() {",e.ShaderChunk.PDSFX_start_vertex,"#ifdef PDSFX",e.ShaderChunk.PDSFX_halfWidth_fragment_vertex,"#endif",e.ShaderChunk.map_vertex,e.ShaderChunk.color_vertex,e.ShaderChunk.skinbase_vertex,e.ShaderChunk.morphtarget_vertex,e.ShaderChunk.skinning_vertex,e.ShaderChunk.default_vertex,e.ShaderChunk.clip_vertex,e.ShaderChunk.fog_vertex,e.ShaderChunk.worldpos_vertex,o.lines2D_vertex,e.DeferredShaderChunk.oit_vertex,d,e.ShaderChunk.PDSFX_end_vertex,"}"].join("\n"),fragmentShader:["#define SVGLINE","#if defined( NEEDS_UVTOUSE ) || defined(PDSFX_USE_MAP)","vec2 uvToUse;","#endif",o.lines2D_pars_fragment,e.ShaderChunk.clip_pars_fragment,e.ShaderChunk.color_pars_fragment,e.ShaderChunk.map_pars_fragment,e.ShaderChunk.fog_pars_fragment,e.DeferredShaderChunk.oit_pars_fragment,l,"void main() {","#ifdef PDSFX",e.ShaderChunk.PDSFX_map_fragment,e.ShaderChunk.PDSFX_mapping_fragment,"ComputeCommonValues();",e.ShaderChunk.PDSFX_discard_fragment,e.ShaderChunk.PDSFX_albedo_fragment,e.ShaderChunk.PDSFX_halfWidth_fragment_vertex,"#endif","#if defined(SELECTION_MATERIAL)","gl_FragColor = vec4( diffuse, 1.0 );","#else","gl_FragColor = vec4( diffuse, opacity );","#endif",o.lines2D_fragment,"#if defined( NEEDS_UVTOUSE ) || defined(PDSFX_USE_MAP)","uvToUse=vUv;","#endif",e.ShaderChunk.clip_fragment,e.ShaderChunk.uvmapping_fragment,e.ShaderChunk.map_fragment,e.ShaderChunk.alphatest_fragment,e.ShaderChunk.color_fragment,e.ShaderChunk.linear_to_gamma_fragment,e.ShaderChunk.PDSFX_end_fragment,e.ShaderChunk.fog_fragment,e.ShaderChunk.backgroundviewmode_lowlight_fragment,e.DeferredShaderChunk.oit_fragment,c,"}"].join("\n")},e.SVGLineMaterial=function(t){t=t||{};var i={};Object.assign(i,t),i.linecap||(i.linecap="butt"),i.scale||(i.scale=1),i.miterLimit||(i.miterLimit=4),e.LineDSMaterial.call(this,i),this.miterLimit=i.miterLimit,this.transparent=!0,this.miterLimit<1&&(this.miterLimit=1),this.is2DLine=!0,this.isCPUPattern=!1},e.SVGLineMaterial.prototype=Object.create(e.LineDSMaterial.prototype),e.SVGLineMaterial.prototype.clone=function(){var t=new e.SVGLineMaterial;return e.LineDSMaterial.prototype.clone.call(this,t),t.miterLimit=this.miterLimit>1?this.miterLimit:1,t},e.SVGLineMaterial.prototype._shaderID="line2D",e.SVGLineMaterial.prototype.getType=function(){return"SVGLine"},e.SVGLineMaterial.prototype.loadUniforms=function(t,i,n,a,r,o){e.LineDSMaterial.prototype.loadUniforms.call(this,t,i,n,a,r,o),n.halfWidth&&i.uniform1f(n.halfWidth,this.lineWidth?this.lineWidth/2:.5),n.miterLimit&&i.uniform1f(n.miterLimit,this.miterLimit?this.miterLimit:4),n.scale&&i.uniform1f(n.scale,this.scale?this.scale:1)},e.SVGLineMaterial.prototype.setLineWidth=function(e){Math.abs(this.lineWidth-e)>1e-6&&(this.lineWidth=e,this.needsUpdate=!0,this.updateDeferredMaterials())}}),define("DS/SVGLoader/SVGLoaderUtils",["DS/Visualization/ThreeJS_DS"],function(e){"use strict";var t={parseCommands:function(e,t){var i,n,a,r=e.split(" "),o=[],s=[];for(i=0;i<r.length;i++)if(n=r[i])if(a=parseFloat(n),isNaN(a)){if(t.indexOf(n)<0)throw new Error("unknown command '"+n+"'");s.length&&o.push(s),s=[n]}else{if(!s.length)throw new Error("missing command");s.push(a)}return s.length&&o.push(s),o},parseTransformation:function(a){if(0===a.indexOf("rotate")){var r=a.indexOf("("),o=a.indexOf(")"),s=a.substring(r+1,o),l=(s=i(s=n(s,","," "))).split(" "),d=parseFloat(l[0]);t.lastAngle=d;var c=new e.Vector2;l.length>1&&(c.x=parseFloat(l[1]),c.y=parseFloat(l[2]));var f=new e.Matrix3;f.set(1,0,c.x,0,1,c.y,0,0,1);var u=new e.Matrix3;u.set(1,0,-c.x,0,1,-c.y,0,0,1);var h=new e.Matrix3,p=Math.PI*d/180;h.set(Math.cos(p),-Math.sin(p),0,Math.sin(p),Math.cos(p),0,0,0,1);var g=u;return g.multiplyMatrices(h,u),g.multiplyMatrices(f,g),{matrix:g,angle:p}}throw new Error("Unknown transformation")},parseColor:function(t){var i=n(t," ","");return new e.Color(i)},parseDashArray:function(e){var t,a=i(n(e,","," ")),r=a.split(" "),o={key:a,value:[]};for(t=0;t<r.length;t++)o.value.push(parseFloat(r[t]));return o}};function i(e){return e.replace(/\s+/g," ").replace(/^\s+|\s+$/,"")}function n(e,t,i){return e.replace(new RegExp(t,"g"),i)}return t}),define("DS/SVGLoader/SVGNode_abstract",["UWA/Class"],function(e){"use strict";return e.extend({init:function(e){this.node=e,this.children=[]},fillRenderableBank:function(e,t){var i,n=t.buildChildGas(this.node),a=this.children.length;for(i=0;i<a;i++)this.children[i].fillRenderableBank(e,n);return[]}})}),define("DS/SVGLoader/SVGRenderable",["UWA/Class"],function(e){"use strict";return e.extend({init:function(e,t){this.isAsync=!!e,this.context=t},createNode3D:function(e){}})}),define("DS/SVGLoader/MultiIndexTable",["DS/Visualization/ThreeJS_DS"],function(e){"use strict";var t=function(e,t){var i;for(this.data={},this.attributesNames=e,this.mainAttributesNames=t,this.secondaryAttributesNames=[],i=0;i<this.attributesNames.length;i++)this.mainAttributesNames.indexOf(this.attributesNames[i])<0&&this.secondaryAttributesNames.push(this.attributesNames[i])};return t.prototype.getElement=function(t,i){var n,a,r,o,s=this.data;for(n=0;n<this.mainAttributesNames.length;n++)(o=t[a=this.mainAttributesNames[n]])instanceof e.Color&&(o=o.getHexString()),(r=s[o])||(r=n===this.mainAttributesNames.length-1?[]:{},s[o]=r),s=r;var l,d,c,f=null;for(n=0;n<s.length&&!f;n++){for(d=s[n].attributes,c=!0,l=0;l<this.secondaryAttributesNames.length&&c;l++)d[a=this.secondaryAttributesNames[l]]&&d[a].equals?t[a]&&d[a].equals(t[a])||(c=!1):d[a]!==t[a]&&(c=!1);c&&(f=s[n].element)}return f||(f=i(),s.push({attributes:t,element:f})),f},t.prototype.exportToArray=function(){var e=[];return function e(t,i){var n;if(t instanceof Array)for(n=0;n<t.length;n++)i.push(t[n].element);else for(n in t)e(t[n],i)}(this.data,e),e},t}),define("DS/SVGLoader/InstancedArcsUtils",["DS/Visualization/ThreeJS_R57","DS/Mesh/MeshUtils"],function(e,t){"use strict";return{computeArcBBox:function(t,i,n,a,r,o,s){var l=.5*s,d=a+r,c=Math.cos(a),f=Math.sin(a),u=Math.cos(d),h=Math.sin(d),p=Math.sqrt(c*c/(i*i)+f*f/(n*n)),g=Math.sqrt(u*u/(i*i)+h*h/(n*n)),S=new e.Vector2(l*c/(i*p),l*f/(n*p)),v=new e.Vector2(l*u/(i*g),l*h/(n*g)),m=.5*Math.PI,x=(Math.PI,Math.PI,new e.Vector3(1/0,1/0,-1)),A=new e.Vector3(-1/0,-1/0,1),C=new e.Vector2(i*c-S.x,n*f-S.y),D=new e.Vector2(i*u-v.x,n*h-v.y),y=new e.Vector2(i*c+S.x,n*f+S.y),b=new e.Vector2(i*u+v.x,n*h+v.y),_=[C.x,D.x,y.x,b.x],P=[C.y,D.y,y.y,b.y],V=[Math.floor(a/m),Math.floor(d/m)];.5>=V[0]&&.5<=V[1]&&P.push(n+l),1.5>=V[0]&&1.5<=V[1]&&_.push(-i-l),2.5>=V[0]&&2.5<=V[1]&&P.push(-n-l),3.5>=V[0]&&3.5<=V[1]&&_.push(i+l),4.5>=V[0]&&4.5<=V[1]&&P.push(n+l),5.5>=V[0]&&5.5<=V[1]&&_.push(-i-l),6.5>=V[0]&&6.5<=V[1]&&P.push(-n-l);for(var w=0;w<_.length;w++)x.x=Math.min(x.x,_[w]),A.x=Math.max(A.x,_[w]);for(w=0;w<P.length;w++)x.y=Math.min(x.y,P[w]),A.y=Math.max(A.y,P[w]);var N=new e.Matrix4;return N.rotateZ(o),N.setPosition(new e.Vector3(t.x,t.y,t.z)),new e.Box3(x,A).applyMatrix4(N)},computeArcFillBBox:function(t,i,n,a,r,o){var s=a+r,l=Math.cos(a),d=Math.sin(a),c=Math.cos(s),f=Math.sin(s),u=.5*Math.PI,h=(Math.PI,Math.PI,new e.Vector3(1/0,1/0,-1)),p=new e.Vector3(-1/0,-1/0,1),g=new e.Vector2(0,0),S=new e.Vector2(i*l,n*d),v=new e.Vector2(i*c,n*f),m=[g.x,S.x,v.x],x=[g.y,S.y,v.y],A=[Math.floor(a/u),Math.floor(s/u)];.5>=A[0]&&.5<=A[1]&&x.push(n),1.5>=A[0]&&1.5<=A[1]&&m.push(-i),2.5>=A[0]&&2.5<=A[1]&&x.push(-n),3.5>=A[0]&&3.5<=A[1]&&m.push(i),4.5>=A[0]&&4.5<=A[1]&&x.push(n),5.5>=A[0]&&5.5<=A[1]&&m.push(-i),6.5>=A[0]&&6.5<=A[1]&&x.push(-n);for(var C=0;C<m.length;C++)h.x=Math.min(h.x,m[C]),p.x=Math.max(p.x,m[C]);for(C=0;C<x.length;C++)h.y=Math.min(h.y,x[C]),p.y=Math.max(p.y,x[C]);var D=new e.Matrix4;return D.rotateZ(o),D.setPosition(new e.Vector3(t.x,t.y,t.z)),new e.Box3(h,p).applyMatrix4(D)},createArcLoopMesh:function(i){var n=[],a=new e.BufferGeometryDS;a.drawingGroups=[];var r=new t.DrawingGroup(i,i,4,0,36);r.geometry=a,a.drawingGroups.push(r);for(var o,s=new Float32Array(42),l=0,d=0,c=0;c<7;c++)o=c/6,s[l++]=-1,s[l++]=o,s[l++]=1,s[l++]=1,s[l++]=o,s[l++]=0;a.vertexPositionArray=s;var f=new Uint16Array(36);d=0;for(c=0;c<6;c++)f[d++]=2*c,f[d++]=2*c+1,f[d++]=2*c+3,f[d++]=2*c,f[d++]=2*c+3,f[d++]=2*c+2;a.vertexIndexArray=f,n.push(a);var u=new e.Mesh(n,i);return u.matrixAutoUpdate=!1,u},createArcFillMesh:function(i){var n=[],a=new e.BufferGeometryDS;a.drawingGroups=[];var r=new t.DrawingGroup(i,i,4,0,18);r.geometry=a,a.drawingGroups.push(r);var o,s=new Float32Array(24),l=0,d=0;s[l++]=-1,s[l++]=0,s[l++]=0;for(var c=0;c<7;c++)o=c/6,s[l++]=1,s[l++]=o,s[l++]=0;a.vertexPositionArray=s;var f=new Uint16Array(18);d=0;for(c=0;c<6;c++)f[d++]=0,f[d++]=c+1,f[d++]=c+2;a.vertexIndexArray=f,n.push(a);var u=new e.Mesh(n,i);return u.matrixAutoUpdate=!1,u},createMaterial:function(t,i,n){var a=new e.MeshBasicMaterial({force:!0});a.activatePDSFX();var r=t.get_pdsfx_uniforms();n&&(r.patternArray.value=n,r.patternArray.length=n.length),a.setPDSFXUniforms(r);var o=t.get_pdsfx_varyings();a.setPDSFXVaryings(o);var s=["",i?"#define CONSIDE_ARC":"",n?"#define PATTERN_SIZE "+n.length:"",n?"#define ARC_PATTERN":"",""].join("\n");return a.setPDSFXGlobalShaderCode(s+t.VS_global,s+t.FS_global),a.setPDSFXOverridableFunctions(t.VS_ov,t.FS_ov),a.refreshPDSFXUniforms=function(){a.updatePDSFXUniform("cst",.5*e.glStates.currentHeight*e.getDevicePixelRatio())},a.transparent=!0,a}}}),define("SVGLoader/InstancedArcsUtils",["DS/SVGLoader/InstancedArcsUtils","DS/DSMigration/DSMigration"],function(e,t){return t.deprecateModule("SVGLoader/InstancedArcsUtils"),e}),define("DS/SVGLoader/SVGMeshMaterial",["DS/Visualization/ThreeJS_DS"],function(e){"use strict";var t=function(t){var i={viewBox:{type:"v4",value:new e.Vector4(-1/0,1/0,-1/0,1/0)}},n={side:e.FrontSide};e.MeshBasicMaterial.call(this,n),this.activatePDSFX(),this.setPDSFXUniforms(i),this.setPDSFXVaryings({pos2d:{type:"v2"}}),this.setPDSFXOverridableFunctions({ComputeVaryingValues:"void ComputeVaryingValues() { pos2d = vec2(modelMatrix * vec4( vGetAttribPosition(), 1.0 ));}"},{ComputeDiscard:"bool ComputeDiscard() { return (pos2d.x < viewBox.x || pos2d.x > viewBox.y || pos2d.y < viewBox.z || pos2d.y > viewBox.w);}"}),this.setValues(t)};return(t.prototype=Object.create(e.MeshBasicMaterial.prototype)).clone=function(){var i=new t;return e.MeshBasicMaterial.prototype.clone.call(this,i),i},t.prototype.getType=function(){return"SVGBasic"},t}),define("DS/SVGLoader/SVGRenderableContext",["UWA/Class"],function(e){"use strict";return e.extend({init:function(){this._lastUsedGas=null,this._currentZIndex=0},computeZIndex:function(e){return this._lastUsedGas&&e&&e.isZCompatibleWithGas(this._lastUsedGas)||(this._currentZIndex++,this._lastUsedGas=e),this._currentZIndex},forceNewZ:function(){this._lastUsedGas=null},getZFromZIndex:function(e){return-this._currentZIndex+e-1},getBgZ:function(e){return-this._currentZIndex-2}})}),define("DS/SVGLoader/InstancedArcsShaders",["DS/Visualization/ThreeJS_R57"],function(e){"use strict";var t=["float tolerance = max(0.1*nbPixels, 1.0)/ratio;"].join("\n"),i=["float computeClampedAngle(in float _cos, in float _sin) {","float currAngle;","float _asin = asin(_sin);","if (_sin >= 0.0) currAngle = acos(_cos);","else {","if (_cos >=0.0) currAngle = _asin + PI2;","else currAngle = -_asin + PI;","}","currAngle = clamp(currAngle, 0.0, PI2);","return currAngle;","}"].join("\n"),n=["toDiscard = false;","#ifdef NO_DISCARD","float delta = fwidth(value);","alpha = 1.0 - smoothstep(1.0 - delta , 1.0 + delta , value);","#else","if (value > 1.0) toDiscard = true;","#endif"].join("\n"),a={compute_ellipse_vertices:["void _computeVertices(inout vec2 firstPoint, inout vec2 secondPoint, in vec2 firstNormal, in vec2 secondNormal) {","vec2 A = firstPoint;","vec2 B = secondPoint;","vec2 nA = firstNormal;","vec2 nB = secondNormal;","float a = instanceRadiiAndWidth.x;","float b = instanceRadiiAndWidth.y;","float a2 = a*a;","float b2 = b*b;","vec2 M0_1, M0_2;","vec2 AB = B-A;","float alpha = AB.y;","float beta = AB.x;","float alpha2 = alpha*alpha;","float beta2 = beta*beta;","float a2alpha2 = a2*alpha2;","float b2beta2 = b2*beta2;","float L_alpha_beta = sqrt(alpha2 + beta2);","float gamma = 0.5*(alpha*(A.x + B.x) - beta*(A.y + B.y));","vec2 nAB = vec2(-alpha, beta)/L_alpha_beta;","if (alpha == 0.0) {","M0_1.x = 0.0;","M0_1.y = -abs(b);","M0_2.x = 0.0;","M0_2.y = -M0_1.y;","} else if (beta == 0.0) {","M0_1.y = 0.0;","M0_1.x = -abs(a);","M0_2.y = 0.0;","M0_2.x = -M0_1.x;","} else {","float denom = a2alpha2 + b2beta2;","M0_1.x = -sqrt((a2*a2alpha2)/denom);","M0_1.y = -b2*beta*M0_1.x/(a2*alpha);","M0_2.x = -M0_1.x;","M0_2.y = -M0_1.y;","}","float d1 =  abs(-alpha*M0_1.x + beta*M0_1.y + gamma)/L_alpha_beta;","float d2 =  abs(-alpha*M0_2.x + beta*M0_2.y + gamma)/L_alpha_beta;","float distM0_AB = min(d1,d2);","float intEllipse = b2beta2 - gamma*gamma + a2alpha2 >= 0.0 ? 1.0 : -1.0;","float totalDist = intEllipse*distM0_AB + halfWidth;","float dotA = abs(dot(nA, nAB));","float newExtA = totalDist/dotA;","firstPoint = A + newExtA*nA;","float dotB = abs(dot(nB, nAB));","float newExtB = totalDist/dotB;","secondPoint = B + newExtB*nB;","}","void computeImpostorVertices(in vec2 precExtruded, inout vec2 currExtruded, in vec2 nextExtruded, in vec2 precNormal, in vec2 currNormal, in vec2 nextNormal) {","vec2 currSolution0 = currExtruded;","vec2 prec0 = precExtruded;","_computeVertices(prec0, currSolution0, precNormal, currNormal);","vec2 currSolution1 = currExtruded;","vec2 next1 = nextExtruded;","_computeVertices(currSolution1, next1, currNormal, nextNormal);","currExtruded = length(currSolution0 - currExtruded) > length(currSolution1 - currExtruded) ? currSolution0 : currSolution1;","}"].join("\n"),distance_to_arc_ellipse:["vec3 debug;","#define PI 3.1415926535897932384","#define PI2 6.283185307179586","#define PI_2 1.5707963267948966",i,"vec2 ClosestPointOnEllipse(vec2 p, vec2 ab)","{","float c = ab.x > ab.y ? sqrt(ab.x*ab.x - ab.y*ab.y) : sqrt(ab.y*ab.y - ab.x*ab.x);","float t = 0.;","if (ab.y < ab.x && abs(p.x) < c)","{","\tt = p.y > 0. ? 0. * PI : -PI_2;","}","else if (ab.x < ab.y && abs(p.y) < c)","{","\tt = p.x > 0. ? 0. : -PI;","}","else","{","\tt = atan(ab.x*p.y,ab.y*p.x);","}","float aa_bb = ab.x * ab.x - ab.y * ab.y;","vec2 pab = p*ab;","for (int i=0; i<4; i++)","{","\tfloat sint = sin(t);","\tfloat cost = cos(t);","\tfloat ft = aa_bb * cost * sint - pab.x * sint + pab.y * cost;","\tfloat dft = aa_bb * (cost * cost - sint * sint) - pab.x * cost - pab.y * sint;","\tt = t - ft/dft;","}","return vec2(cos(t),sin(t))*ab;","}","vec3 distanceToEllipse(in float iStartAngle, in float iEndAngle, in float iA, in float iB, in vec2 p, in float h)","{","vec2 ab = abs(vec2(iA,iB));","vec2 origp = p;","p = -abs(p);","vec2 closest = ClosestPointOnEllipse(p, ab);","float dist = length(closest-p);","closest = abs(closest)*sign(origp);","return vec3(abs(dist), closest);","}","#ifdef CONSIDER_ARC","float angularDistanceToArc(in float startAngle, in float endAngle, in float iCos, in float iSin) {","float currAngle = computeClampedAngle(iCos, iSin);","float dist = 1e5;","float startDist = mod(abs(startAngle - currAngle), PI2);","if (endAngle < PI2) {","float endDist = mod(abs(currAngle-endAngle),PI2);","if (currAngle < startAngle || currAngle > endAngle) {dist = min(dist, min(startDist, endDist));}","else dist = 0.0;","} else if (endAngle >= PI2){","endAngle -= PI2;","float endDist = mod(abs(currAngle-endAngle),PI2);","if (currAngle > endAngle && currAngle < startAngle) {dist = min(dist, min(startDist, endDist));}","else dist = 0.0;","}","return dist;","}","vec3 distanceToArc(in float iStartAngle, in float iEndAngle, in float iA, in float iB, in vec2 point, in float h) {","float a = iA;","float b = iB;","if (b > a) {point = vec2(-point.y, point.x); a=iB; b=iA;}","float h2 = h*h;","float a2 = a*a;","float b2 = b*b;","float b2_a2 = (b+a)*(b-a);","float x = point.x;","float y = point.y;","float startAngle = iStartAngle;","float endAngle = iEndAngle;","float cosSolutions[4];","float m = x*a/b2_a2;","float n = y*b/b2_a2;","float m2 = m*m;","float n2 = n*n;","float m2n2 = m2*n2;","float p = -0.5*m2 + n2 - 1.0;","float q = -m*(1.0 + n2);","float B = p;","float B_3 = B/3.0;","float var = m2+n2-1.0;","float var2 = var*var;","float var3 = var2*var;","float P = -var2/12.0;","float Q = -0.5*(m2n2 + var3*0.5/27.0);","float P_3 = P/3.0;","float Q_2 = 0.5*Q;","float v;","float delta = (1.0/432.0)*m2n2*(var3 + 27.0*m2n2);","float dTerm0 = abs(m*n)/12.0;","float dTerm1 = var3/3.0 + 9.0*m2n2;","float _sqDelta = dTerm0*sqrt(-dTerm1);","float sqDelta = dTerm0*sqrt(dTerm1);","if (delta < 0.0) {","vec2 complZ = vec2(-Q_2, _sqDelta);","float module = length(complZ);","float theta = acos(clamp(-Q_2/module, -1.0, 1.0));","v = 2.0*pow(module, 1.0/3.0)*cos(theta/3.0);","} else {","float alpha = pow(-Q_2 + sqDelta, 1.0/3.0);","float beta = -P_3/alpha;","v = alpha + beta;","}","float z0 = v - B_3;","float z02 = max(2.0*z0, 0.0);","float sqz02 = sqrt(z02);","float term0 = 2.0*(p + z02);","float term1 = 2.0*q/sqz02;","float largeTerm0 = sqrt(z02 - (term0 + term1));","float largeTerm1 = sqrt(z02 - (term0 - term1));","float lambda1 = 0.5*(-m + (+sqz02 - largeTerm0));","float lambda2 = 0.5*(-m + (+sqz02 + largeTerm0));","float lambda3 = 0.5*(-m + (-sqz02 - largeTerm1));","float lambda4 = 0.5*(-m + (-sqz02 + largeTerm1));","cosSolutions[0] = lambda1;","cosSolutions[1] = lambda2;","cosSolutions[2] = lambda3;","cosSolutions[3] = lambda4;","float ax = a*x;","float by = b*y;","float sinSolution;","vec2 pointSolution;","float minDistArc = 1e5;","float minDistEllipse = 1e5;","float minAngularDist = 0.1*abs(endAngle - startAngle);","vec2 closestOnEllipse;","vec2 closestOnArc;","bool foundOnArc = false;","float _cos2;","float currLength;","float tangentLength;","float epsilon;","float currAngularDist;","for (int i = 0; i < 4; i++) {","cosSolutions[i] = clamp(cosSolutions[i], -1.0, 1.0);","_cos2 = cosSolutions[i]*cosSolutions[i];","sinSolution = clamp(sqrt(1.0 - _cos2), 0.0, 1.0);","pointSolution = vec2(a*cosSolutions[i], b*sinSolution);","currLength = length(point - pointSolution);","tangentLength = length(vec2(-a*sinSolution, b*cosSolutions[i]));","epsilon = 0.8*(currLength*tangentLength);","if (currLength < minDistEllipse) {","minDistEllipse = currLength;","closestOnEllipse = pointSolution;","}","currAngularDist = angularDistanceToArc(startAngle, endAngle, cosSolutions[i], sinSolution);","if (currLength < minDistArc && currAngularDist <= minAngularDist) {","minAngularDist = currAngularDist;","minDistArc = currLength;","foundOnArc = true;","closestOnArc = pointSolution;","} ","sinSolution = -sinSolution;","pointSolution.y *= -1.0;","currLength = length(point - pointSolution);","tangentLength = length(vec2(-a*sinSolution, b*cosSolutions[i]));","epsilon = 100.0*(currLength*tangentLength);","if (currLength < minDistEllipse) {","minDistEllipse = currLength;","closestOnEllipse = pointSolution;","}","currAngularDist = angularDistanceToArc(startAngle, endAngle, cosSolutions[i], sinSolution);","if (currLength < minDistArc && currAngularDist <= minAngularDist) {","minAngularDist = currAngularDist;","minDistArc = currLength;","foundOnArc = true;","closestOnArc = pointSolution;","} ","}","vec3 results = vec3(minDistArc, closestOnArc);","if (x*x/a2 + y*y/b2 > 1.0 || !foundOnArc) {results.x = minDistEllipse; results.yz = closestOnEllipse;}","if (iB > iA) results.yz = vec2(results.z, -results.y);","return results;","}","#endif"].join("\n"),conservative_rasterization:["void clampToOnePixelSize(inout float iHalfWidth) {","if ((2.0*iHalfWidth* ratio) < 1.0) {","float newHalfLineWidth = 0.5/ratio;","float linesRatio = (newHalfLineWidth - iHalfWidth)/newHalfLineWidth;","fartheringAlpha = 1.0 - smoothstep(0.65, 1.0, linesRatio);","iHalfWidth = newHalfLineWidth;","}","}"].join("\n"),antialiasing_pattern:["       vec3 getPatternInfo(in float dist) {","           int index = 0;","           float prec = 0.0, cur = 0.0;","           for (int i = 0; i < PATTERN_SIZE; i++) {","               cur = patternArray[i];","               if (cur > dist) {","                   break;","               }","               prec = cur;","               index++;","           }","           return vec3(float(index),prec,cur);","       }","       float getPatternAlpha(in float dist, in float fTotalSize) {","           #if defined(USE_ROUNDCAP) || defined(USE_SQUARECAP)","               float mDist = mod( dist + halfWidth/scale, fTotalSize );","           #else","               float mDist = mod( dist, fTotalSize );","           #endif","           vec3 patternInfo = getPatternInfo(mDist);","           if (abs(mod(patternInfo.x,2.0)) < 1e-2) {","               return 0.0;","           }","           #ifdef NO_DISCARD","               int iIndex = int(patternInfo.x);","               float diffBeg = (mDist - patternInfo.y);","               float deltaBeg = fwidth(diffBeg);","               float diffEnd = (patternInfo.z - mDist);","               float deltaEnd = fwidth(diffEnd);","               float step =  min(smoothstep(0.25*deltaEnd,2.0*deltaEnd,diffEnd),smoothstep(0.25*deltaBeg,2.0*deltaBeg,diffBeg));","               return step;","           #else","               return 1.0;","           #endif","       }"].join("\n"),patterns_fragment:["alpha *= (1.0-getPatternAlpha(curvAbs, vPatternSize));"].join("\n")},r={transX:{type:"f"},transY:{type:"f"},vInstanceColor:{type:"v4"}},o={vRadiiAndHWidth:{type:"v3"},vStartAngle:{type:"f"},vEndAngle:{type:"f"}},s={vRadius:{type:"f"},vHalfWidth:{type:"f"}},l={vStartAngle:{type:"f"},vPatternOffset:{type:"f"}},d={patternOffset:{type:"f"},vIntegralFirstTerm:{type:"v4"}},c={cst:{type:"f",value:.5*e.glStates.currentHeight*e.getDevicePixelRatio()}},f={cst:{type:"f",value:.5*e.glStates.currentHeight*e.getDevicePixelRatio()},patternArray:{type:"fv1",value:[],length:-1}},u={get_pdsfx_uniforms:function(){return Object.create(c)},get_pdsfx_varyings:function(){return Object.assign({},r,o)},VS_global:["float fartheringAlpha;","vec3 viewTr;","float halfWidth;","float ratio;","vec2 myViewPos;",a.compute_ellipse_vertices,a.conservative_rasterization].join("\n"),FS_global:[a.distance_to_arc_ellipse,"bool toDiscard;","float alpha;"].join("\n"),VS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","mat4 PM = vGetProjectionMatrix();","fartheringAlpha = 1.0;","float cameraTop = 1.0/PM[1][1];","ratio = cst/cameraTop;","halfWidth = instanceRadiiAndWidth.z;","clampToOnePixelSize(halfWidth);","mat4 viewM = vGetViewMatrix();","viewTr = vec3(viewM[3][0], viewM[3][1], viewM[3][2]);","}"].join("\n"),ProcessViewTangentSpace:["void ProcessViewTangentSpace(inout TangentSpace ioWorldViewTS) {","float totalAngle = instanceOffsetAndAngles.z;","float startAngle = instanceOffsetAndAngles.w;","vec2 _localPosition;","vec3 infos = vGetAttribPosition();","float inOrOut = infos.x;","float frac = infos.y;","float currAngle = frac*totalAngle + startAngle;","float cosCurr = cos(currAngle);","float sinCurr = sin(currAngle);","float nbPixels = halfWidth*ratio;",t,"float a = instanceRadiiAndWidth.x;","float b = instanceRadiiAndWidth.y;","float a2 = a*a;","float b2 = b*b;","vec2 localPt = vec2(a*cosCurr, b*sinCurr);","vec2 localNormal = normalize(vec2(localPt.x/(a2), localPt.y/(b2)));","if (inOrOut < 0.0) {","_localPosition = localPt - (halfWidth+tolerance)*localNormal;","} else {","float totalAngle_6 = totalAngle/6.0;","vec2 currPt = localPt + halfWidth*localNormal;","vec2 nextPt = vec2(a*cos(currAngle + totalAngle_6), b*sin(currAngle + totalAngle_6));","vec2 nextNormal = normalize(vec2(nextPt.x/(a2), nextPt.y/(b2)));","nextPt += halfWidth*nextNormal;","vec2 precPt = vec2(a*cos(currAngle - totalAngle_6), b*sin(currAngle - totalAngle_6));","vec2 precNormal = normalize(vec2(precPt.x/(a2), precPt.y/(b2)));","precPt += halfWidth*precNormal;","if (frac == 0.0) {","vec2 next_ = nextPt;","_computeVertices(currPt, next_, localNormal, nextNormal);","} else if (frac == 1.0) {","vec2 prec_ = precPt;","_computeVertices(prec_, currPt, precNormal, localNormal);","} else {","computeImpostorVertices(precPt, currPt, nextPt, precNormal, localNormal, nextNormal);","}","_localPosition = currPt;","_localPosition += tolerance*localNormal;","}","float cosO = instanceOffsetAndAngles.x;","float sinO = instanceOffsetAndAngles.y;","mat2 rotMatrix = mat2(cosO, sinO, -sinO, cosO);","ioWorldViewTS.Position = viewTr + vec3( rotMatrix*_localPosition + instancePosition.xy, instancePosition.z);","myViewPos = viewTr.xy + _localPosition + instancePosition.xy;","}"].join("\n"),ComputeVaryingValues:["void ComputeVaryingValues() {","vec2 viewCenterPos = viewTr.xy + instancePosition.xy;","vRadiiAndHWidth = vec3(instanceRadiiAndWidth.xy, halfWidth);","transX = myViewPos.x - viewCenterPos.x;","transY = myViewPos.y - viewCenterPos.y;","vInstanceColor = instanceColor;","vInstanceColor.w *= fartheringAlpha;","float totalAngle = instanceOffsetAndAngles.z;","float startAngle = instanceOffsetAndAngles.w;","vStartAngle = startAngle;","vEndAngle = startAngle+totalAngle;","}"].join("\n")},FS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","alpha = 1.0;","float a = vRadiiAndHWidth.x;","float b = vRadiiAndHWidth.y;","float halfWidth = vRadiiAndHWidth.z;","float startAngle = vStartAngle;","float endAngle = vEndAngle;","if (b > a) {","float totalAngle = endAngle - startAngle;","startAngle += PI_2;","if (startAngle >= PI2) startAngle -= PI2;","endAngle = startAngle + totalAngle;","}","float dist;","bool inEllipse = transX*transX/(a*a) + transY*transY/(b*b) < 1.0;","#ifdef CONSIDER_ARC","if (inEllipse) dist = (distanceToArc(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth)).x;","else dist = (distanceToEllipse(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth)).x;","#else","dist = (distanceToEllipse(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth)).x;","#endif","float value = dist/halfWidth;",n,"}"].join("\n"),ComputeDiscard:"bool ComputeDiscard() { return toDiscard; }",ProcessFinalColor:"void ProcessFinalColor(inout vec4 ioFinalColor) { ioFinalColor = vec4(vInstanceColor.xyz, vInstanceColor.w*alpha); }"}},h={get_pdsfx_uniforms:function(){return Object.assign({},f)},get_pdsfx_varyings:function(){return Object.assign({},r,o,d)},VS_global:["float fartheringAlpha;","vec3 viewTr;","float halfWidth;","float ratio;","vec2 myViewPos;",a.compute_ellipse_vertices,a.conservative_rasterization].join("\n"),FS_global:[a.distance_to_arc_ellipse,a.antialiasing_pattern,"bool toDiscard;","float alpha;"].join("\n"),VS_ov:{ComputeCommonValues:u.VS_ov.ComputeCommonValues,ProcessViewTangentSpace:u.VS_ov.ProcessViewTangentSpace,ComputeVaryingValues:["void ComputeVaryingValues() {","vec2 viewCenterPos = viewTr.xy + instancePosition.xy;","vRadiiAndHWidth = vec3(instanceRadiiAndWidth.xy, halfWidth);","transX = myViewPos.x - viewCenterPos.x;","transY = myViewPos.y - viewCenterPos.y;","vInstanceColor = instanceColor;","vInstanceColor.w *= fartheringAlpha;","float totalAngle = instanceOffsetAndAngles.z;","float startAngle = instanceOffsetAndAngles.w;","vStartAngle = startAngle;","vEndAngle = startAngle+totalAngle;","vIntegralFirstTerm = integralFirstTerms;","patternOffset = instancePatternOffset;","}"].join("\n")},FS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","alpha = 1.0;","float a = vRadiiAndHWidth.x;","float b = vRadiiAndHWidth.y;","float a2 = a*a;","float b2 = b*b;","float halfWidth = vRadiiAndHWidth.z;","float startAngle = vStartAngle;","float endAngle = vEndAngle;","if (b > a) {","float totalAngle = endAngle - startAngle;","startAngle += PI_2;","if (startAngle >= PI2) startAngle -= PI2;","endAngle = startAngle + totalAngle;","}","vec3 results;","bool inEllipse = transX*transX/(a*a) + transY*transY/(b*b) < 1.0;","#ifdef CONSIDER_ARC","if (inEllipse) results = distanceToArc(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth);","else results = distanceToEllipse(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth);","#else","results = distanceToEllipse(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth);","#endif","float dist = results.x;","float value = dist/halfWidth;",n,"float e2 = a > b ? (1.0 - b2/a2) : (1.0 - a2/b2);","float e4 = e2*e2;","float e6 = e4*e2;","float e8 = e4*e4;","vec4 excentricities = vec4(e2, e4, e6, e8);","vec4 taylorCoeffsTimesOtherCoeffs = vec4(-0.25, -0.00390625, -0.0003255208333333333, -0.000012715657552083334);","vec2 ptOnEllipse = results.yz;","float _cos = ptOnEllipse.x/a;","float _sin = ptOnEllipse.y/b;","if (b > a) {","_cos = -ptOnEllipse.y/b;","_sin = ptOnEllipse.x/a;","}","float currAngle = computeClampedAngle(_cos, _sin);","float angle2 = 2.0*currAngle;","float sin_angle2 = sin(angle2);","float angle4 = 4.0*currAngle;","float sin_angle4 = sin(angle4);","float angle6 = 6.0*currAngle;","float sin_angle6 = sin(angle6);","float angle8 = 8.0*currAngle;","float sin_angle8 = sin(angle8);","vec4 integralSecondTerm = vec4(","  currAngle + _sin*_cos,","  12.0*currAngle + 8.0*sin_angle2 + sin_angle4,","  60.0*currAngle + 45.0*sin_angle2 + 9.0*sin_angle4 + sin_angle6,","  840.0*currAngle + 672.0*sin_angle2 + 168.0*sin_angle4 + 32.0*sin_angle6 + 3.0*sin_angle8",");","float curvAbs = currAngle - startAngle ","\t\t\t\t+  excentricities.x*taylorCoeffsTimesOtherCoeffs.x*(vIntegralFirstTerm.x + integralSecondTerm.x) ","\t\t\t\t+  excentricities.y*taylorCoeffsTimesOtherCoeffs.y*(vIntegralFirstTerm.y + integralSecondTerm.y) ","\t\t\t\t+  excentricities.z*taylorCoeffsTimesOtherCoeffs.z*(vIntegralFirstTerm.z + integralSecondTerm.z) ","\t\t\t\t+  excentricities.w*taylorCoeffsTimesOtherCoeffs.w*(vIntegralFirstTerm.w + integralSecondTerm.w); ","curvAbs *= max(a,b);","curvAbs += patternOffset;","float vPatternSize = patternArray[PATTERN_SIZE-1];",a.patterns_fragment,"}"].join("\n"),ComputeDiscard:"bool ComputeDiscard() { return toDiscard; }",ProcessFinalColor:"void ProcessFinalColor(inout vec4 ioFinalColor) { ioFinalColor = vec4(vInstanceColor.xyz, vInstanceColor.w*alpha); }"}},p={get_pdsfx_uniforms:function(){return Object.assign({},c)},get_pdsfx_varyings:function(){return Object.assign({},r,s)},VS_global:["float fartheringAlpha;","vec3 viewTr;","float halfWidth;","float ratio;","vec2 myViewPos;",a.conservative_rasterization].join("\n"),FS_global:["bool toDiscard;","float alpha;"].join("\n"),VS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","mat4 PM = vGetProjectionMatrix();","fartheringAlpha = 1.0;","float cameraTop = 1.0/PM[1][1];","ratio = cst/cameraTop;","halfWidth = instanceRadiiAndAngles.y;","clampToOnePixelSize(halfWidth);","mat4 viewM = vGetViewMatrix();","viewTr = vec3(viewM[3][0], viewM[3][1], viewM[3][2]);","}"].join("\n"),ProcessViewTangentSpace:["void ProcessViewTangentSpace(inout TangentSpace ioWorldViewTS) {","vec2 _localPosition;","float totalAngle = instanceRadiiAndAngles.z;","float startAngle = instanceRadiiAndAngles.w;","vec3 infos = position;","float inOrOut = infos.x;","float frac = infos.y;","float currAngle = frac*totalAngle + startAngle;","float cosCurr = cos(currAngle);","float sinCurr = sin(currAngle);","float r = instanceRadiiAndAngles.x;","float coeff = cos(totalAngle/12.0);","float nbPixels = halfWidth*ratio;",t,"if (inOrOut < 0.0)","_localPosition = (r-halfWidth-tolerance)*vec2(cosCurr, sinCurr);","else","_localPosition = (r+halfWidth+tolerance)*vec2(cosCurr, sinCurr)/coeff;","vec3 mvPosition = viewTr + vec3( _localPosition+instancePosition.xy, instancePosition.z);","myViewPos = mvPosition.xy;","ioWorldViewTS.Position = mvPosition;","}"].join("\n"),ComputeVaryingValues:["void ComputeVaryingValues() {","vec2 viewCenterPos = viewTr.xy + instancePosition.xy;","transX = myViewPos.x - viewCenterPos.x;","transY = myViewPos.y - viewCenterPos.y;","vRadius = instanceRadiiAndAngles.x;","vHalfWidth = halfWidth;","vInstanceColor = instanceColor;","vInstanceColor.w *= fartheringAlpha;","}"].join("\n")},FS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","alpha = 1.0;","float transX_2 = transX*transX;","float transY_2 = transY*transY;","float halfWidth = vHalfWidth;","float dist = abs(vRadius - length(vec2(transX, transY)));","float value = dist/halfWidth;",n,"}"].join("\n"),ComputeDiscard:"bool ComputeDiscard() { return toDiscard; }",ProcessFinalColor:"void ProcessFinalColor(inout vec4 ioFinalColor) { ioFinalColor = vec4(vInstanceColor.xyz, vInstanceColor.w*alpha); }"}},g={get_pdsfx_uniforms:function(){return Object.assign({},f)},get_pdsfx_varyings:function(){return Object.assign({},r,s,l)},VS_global:["float fartheringAlpha;","vec3 viewTr;","float halfWidth;","float ratio;","vec2 myViewPos;",a.conservative_rasterization].join("\n"),FS_global:["#define PI 3.1415926535897932384","#define PI2 6.283185307179586","#define PI_2 1.5707963267948966",i,a.antialiasing_pattern,"bool toDiscard;","float alpha;"].join("\n"),VS_ov:{ComputeCommonValues:p.VS_ov.ComputeCommonValues,ProcessViewTangentSpace:p.VS_ov.ProcessViewTangentSpace,ComputeVaryingValues:["void ComputeVaryingValues() {","vec2 viewCenterPos = viewTr.xy + instancePosition.xy;","transX = myViewPos.x - viewCenterPos.x;","transY = myViewPos.y - viewCenterPos.y;","vRadius = instanceRadiiAndAngles.x;","vHalfWidth = halfWidth;","vInstanceColor = instanceColor;","vInstanceColor.w *= fartheringAlpha;","float startAngle = instanceRadiiAndAngles.w;","vStartAngle = startAngle;","vPatternOffset = instancePatternOffset;","}"].join("\n")},FS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","alpha = 1.0;","float transX_2 = transX*transX;","float transY_2 = transY*transY;","float halfWidth = vHalfWidth;","float dist = abs(vRadius - length(vec2(transX, transY)));","float value = dist/halfWidth;",n,"vec2 normal = normalize(vec2(transX, transY));","float _cos = normal.x;","float _sin = normal.y;","float currAngle = computeClampedAngle(_cos, _sin);","float vPatternSize = patternArray[PATTERN_SIZE-1];","float patternOffset = vPatternOffset;","float curvAbs = patternOffset + (currAngle - vStartAngle)*vRadius;",a.patterns_fragment,"}"].join("\n"),ComputeDiscard:"bool ComputeDiscard() { return toDiscard; }",ProcessFinalColor:"void ProcessFinalColor(inout vec4 ioFinalColor) { ioFinalColor = vec4(vInstanceColor.xyz, vInstanceColor.w*alpha); }"}};return{ArcEllipse:u,ArcEllipsePattern:h,ArcCircle:p,ArcCircleFill:{get_pdsfx_uniforms:function(){return Object.assign({},c)},get_pdsfx_varyings:function(){return Object.assign({},r,{vRadius:{type:"f"}})},VS_global:["float fartheringAlpha;","vec3 viewTr;","float radius;","float ratio;","vec2 myViewPos;",a.conservative_rasterization].join("\n"),FS_global:["bool toDiscard;","float alpha;"].join("\n"),VS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","mat4 PM = vGetProjectionMatrix();","fartheringAlpha = 1.0;","float cameraTop = 1.0/PM[1][1];","ratio = cst/cameraTop;","radius = instanceRadiiAndAngles.x;","clampToOnePixelSize(radius);","mat4 viewM = vGetViewMatrix();","viewTr = vec3(viewM[3][0], viewM[3][1], viewM[3][2]);","}"].join("\n"),ProcessViewTangentSpace:["void ProcessViewTangentSpace(inout TangentSpace ioWorldViewTS) {","vec2 _localPosition;","float totalAngle = instanceRadiiAndAngles.y;","float startAngle = instanceRadiiAndAngles.z;","vec3 infos = vGetAttribPosition();","float notCenter = infos.x;","float frac = infos.y;","float currAngle = frac*totalAngle + startAngle;","float cosCurr = cos(currAngle);","float sinCurr = sin(currAngle);","float coeff = cos(totalAngle/12.0);","float nbPixels = radius*ratio;",t,"if (notCenter > 0.0)","_localPosition = (radius+tolerance)*vec2(cosCurr, sinCurr)/coeff;","else","_localPosition = vec2(0.0, 0.0);","vec3 mvPosition = viewTr + vec3( _localPosition+instancePosition.xy, instancePosition.z);","myViewPos = mvPosition.xy;","ioWorldViewTS.Position = mvPosition;","}"].join("\n"),ComputeVaryingValues:["void ComputeVaryingValues() {","vec2 viewCenterPos = viewTr.xy + instancePosition.xy;","transX = myViewPos.x - viewCenterPos.x;","transY = myViewPos.y - viewCenterPos.y;","vRadius = radius;","vInstanceColor = instanceColor;","vInstanceColor.w *= fartheringAlpha;","}"].join("\n")},FS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","alpha = 1.0;","float transX_2 = transX*transX;","float transY_2 = transY*transY;","float normPoint = length(vec2(transX, transY));","float value = normPoint/vRadius;",n,"}"].join("\n"),ComputeDiscard:"bool ComputeDiscard() { return toDiscard; }",ProcessFinalColor:"void ProcessFinalColor(inout vec4 ioFinalColor) { ioFinalColor = vec4(vInstanceColor.xyz, vInstanceColor.w*alpha); }"}},ArcCirclePattern:g}}),define("SVGLoader/InstancedArcsShaders",["DS/SVGLoader/InstancedArcsShaders","DS/DSMigration/DSMigration"],function(e,t){return t.deprecateModule("SVGLoader/InstancedArcsShaders"),e}),define("DS/SVGLoader/PolygonRenderer",["DS/Visualization/PolygonTessellator"],function(e){"use strict";return e}),define("DS/SVGLoader/SVGRenderableStrokePolygonSet",["DS/Visualization/ThreeJS_DS","DS/SVGLoader/SVGRenderable","DS/Visualization/SceneGraphFactory","DS/Visualization/Node3D","DS/Mesh/MeshUtils","DS/SVGLoader/SVGMeshMaterial","DS/SVGLoader/SVGLineMaterial","DS/SVGLoader/PolygonRenderer"],function(e,t,i,n,a,r,o,s){"use strict";return t.extend({init:function(e,t){this._parent(!1,t),this.gas=e,this.zIndex=this.context.computeZIndex(this.gas),this.polygonRenderer=new s},startNewPolygon:function(){this.polygonRenderer._startNewPolygon()},addPointToCurrentPolygon:function(e,t,i){this.polygonRenderer.addPointToCurrentPolygonLoop(e,t,{dashOffset:i})},closePolygon:function(){this.polygonRenderer.closeCurrentPolygonLoop()},endPolygonGroup:function(){this.polygonRenderer.endCurrentPolygon()},createNode3D:function(e){var t,i=new n;if(this.gas.attributes.strokeColor&&(t=this.createStrokeNode3D(e))&&i.addChild(t),this.gas.attributes.fillColor){var a=new r({color:this.gas.attributes.fillColor,force:!0,viewBox:e}),o=this.context.getZFromZIndex(this.zIndex);(t=this.polygonRenderer.createNode3D(a,o))&&i.addChild(t)}return i},createStrokeNode3D:function(t){var n=this.polygonRenderer;if(!n.polygons.length)return null;var r,o,s=this.gas.attributes.dashValue,l={color:this.gas.attributes.strokeColor,lineWidth:this.gas.attributes.strokeWidth,force:!0};if(this.gas.attributes.lineCap&&(l.linecap=this.gas.attributes.lineCap),this.gas.attributes.lineJoin&&(l.linejoin=this.gas.attributes.lineJoin),this.gas.attributes.miterLimit&&(l.miterLimit=this.gas.attributes.miterLimit),s){for(r=new Float32Array(s.length),o=0;o<s.length;o++)r[o]=s[o];l.dashPattern=r}var d,c,f,u,h=new e.SVGLineMaterial(l),p=[];for(u=this.context.getZFromZIndex(this.zIndex),c=0;c<n.polygons.length;c++)for(f=n.polygons[c].points,d=0;d<f.length;d+=2)p.push(new e.Vector3(f[d],-f[d+1],u));var g,S,v,m=[],x=0,A=[];for(c=0;c<n.polygons.length;c++){for(S=x,g=(f=n.polygons[c].points).length/2,v=0;v<g-1;v++)m.push(x),m.push(x+1),0===v?A.push(n.polygons[c].userData.dashOffset):A.push(0),A.push(0),x++;n.polygons[c].closed&&(m.push(x),m.push(S),A.push(0),A.push(0)),x++}var C=i.createLineNode({points:p,idx:m,patternOffsets:A,material:h,drawMode:a.ConnectivityTypeEnum.LINES});return C.setSSAO(!1),C.setFrustumCulled(!1),C}})}),define("DS/SVGLoader/Instanced2DArcEllipsePattern",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/Mesh3D","DS/Mesh/MeshUtils","DS/SVGLoader/InstancedArcsShaders","DS/SVGLoader/InstancedArcsUtils"],function(e,t,i,n,a,r){"use strict";var o=t.extend({init:function(t){this._parent(t.name),this._name=t.name;for(var n,o=t.nbInstances||1,s=function(e,t){return{0:-t,1:.5*(-t-Math.sin(t)*Math.cos(t)),2:.03125*(-12*t-8*Math.sin(2*t)-Math.sin(4*t)),3:1/192*(-60*t-45*Math.sin(2*t)-9*Math.sin(4*t)-Math.sin(6*t)),4:(-840*t-672*Math.sin(2*t)-168*Math.sin(4*t)-32*Math.sin(6*t)-3*Math.sin(8*t))/3072}[e]},l={},d=0;d<o;d++){var c,f=t.xRadii[d],u=t.yRadii[d],h=.5*t.lineWidths[d],p=[];n=0;for(var g=0;g<t.patterns[d].length;g++)n+=t.patterns[d][g],p[g]=n;var S=h>u*u/f||h>f*f/u?1:0;l[p]&&l[p][S]?c=l[p][S]:(c={considerArc:S,nbInstances:0,pattern:p,bbox:null,positions:[],colors:[],radiiHalfWidth:[],patternOffsets:[],integralFirstTerms:[],offsets_and_angles:[],createMesh3D:function(){var e={data:this.positions,type:"v3",isFlattened:!0,attribName:"instancePosition"},t={data:this.colors,type:"v4",isFlattened:!0,attribName:"instanceColor"},n={data:this.radiiHalfWidth,type:"v3",isFlattened:!0,attribName:"instanceRadiiAndWidth"},o={data:this.patternOffsets,type:"f",isFlattened:!0,attribName:"instancePatternOffset"},s={data:this.integralFirstTerms,type:"v4",isFlattened:!0,attribName:"integralFirstTerms"},l={data:this.offsets_and_angles,type:"v4",isFlattened:!0,attribName:"instanceOffsetAndAngles"},d=r.createMaterial(a.ArcEllipsePattern,this.considerArc,this.pattern),c=r.createArcLoopMesh(d),f=new i(c,null);return f.setMaterial(d),f.setInstancingParameters(this.nbInstances,[e,t,n,o,s,l],"instance"),f.forceBoundingBox(this.bbox),f.setShadow(!1),f.setFrustumCulled(!1),f.setSSAO(!1),f}},l[p]||(l[p]=[null,null]),l[p][S]=c),c.nbInstances++;var v=r.computeArcBBox(new e.Vector3(t.positions[3*d],t.positions[3*d+1],t.positions[3*d+2]),f,u,t.startAngles[d],t.totalAngles[d],t.offsets[d],t.lineWidths[d]);c.bbox?c.bbox.mergeWithBox(v):c.bbox=v,c.positions.push(t.positions[3*d]),c.positions.push(t.positions[3*d+1]),c.positions.push(t.positions[3*d+2]),c.colors.push(t.colors[4*d]),c.colors.push(t.colors[4*d+1]),c.colors.push(t.colors[4*d+2]),c.colors.push(t.colors[4*d+3]),c.radiiHalfWidth.push(f),c.radiiHalfWidth.push(u),c.radiiHalfWidth.push(h),c.patternOffsets.push(t.patternOffsets[d]);var m=f>u?t.startAngles[d]:t.startAngles[d]+.5*Math.PI;c.integralFirstTerms.push(s(1,m)),c.integralFirstTerms.push(s(2,m)),c.integralFirstTerms.push(s(3,m)),c.integralFirstTerms.push(s(4,m)),c.offsets_and_angles.push(Math.cos(t.offsets[d])),c.offsets_and_angles.push(Math.sin(t.offsets[d])),c.offsets_and_angles.push(t.totalAngles[d]),c.offsets_and_angles.push(t.startAngles[d])}for(var x in l)l[x][0]&&this.addChild(l[x][0].createMesh3D()),l[x][1]&&this.addChild(l[x][1].createMesh3D());return this},setName:function(e){this._name=e},getNodeType:function(){return"Node3D"}});return UWA.namespace("THREEDS/Nodes/Instanced2DArcEllipsePattern",o)}),define("SVGLoader/Instanced2DArcEllipsePattern",["DS/SVGLoader/Instanced2DArcEllipsePattern","DS/DSMigration/DSMigration"],function(e,t){return t.deprecateModule("SVGLoader/Instanced2DArcEllipsePattern"),e}),define("DS/SVGLoader/Instanced2DArcCirclePattern",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/Mesh3D","DS/Mesh/MeshUtils","DS/SVGLoader/InstancedArcsShaders","DS/SVGLoader/InstancedArcsUtils"],function(e,t,i,n,a,r){"use strict";var o=t.extend({init:function(t){this._parent(t.name),this._name=t.name;for(var n,o=t.nbInstances||1,s={},l=0;l<o;l++){var d,c=[];n=0;for(var f=0;f<t.patterns[l].length;f++)n+=t.patterns[l][f],c[f]=n;s[c]?d=s[c]:(d={nbInstances:0,pattern:c,bbox:null,positions:[],colors:[],radiiHalfWidthAngles:[],patternOffsets:[],createMesh3D:function(){var e={data:this.positions,type:"v3",isFlattened:!0,attribName:"instancePosition"},t={data:this.colors,type:"v4",isFlattened:!0,attribName:"instanceColor"},n={data:this.radiiHalfWidthAngles,type:"v4",isFlattened:!0,attribName:"instanceRadiiAndAngles"},o={data:this.patternOffsets,type:"f",isFlattened:!0,attribName:"instancePatternOffset"},s=r.createMaterial(a.ArcCirclePattern,null,this.pattern),l=r.createArcLoopMesh(s),d=new i(l,null);return d.setMaterial(s),d.setInstancingParameters(this.nbInstances,[e,t,n,o],"instance"),d.forceBoundingBox(this.bbox),d.setShadow(!1),d.setFrustumCulled(!1),d.setSSAO(!1),d}},s[c]=d),d.nbInstances++;var u=r.computeArcBBox(new e.Vector3(t.positions[3*l],t.positions[3*l+1],t.positions[3*l+2]),t.radii[l],t.radii[l],t.startAngles[l],t.totalAngles[l],0,t.lineWidths[l]);d.bbox?d.bbox.mergeWithBox(u):d.bbox=u,d.positions.push(t.positions[3*l]),d.positions.push(t.positions[3*l+1]),d.positions.push(t.positions[3*l+2]),d.colors.push(t.colors[4*l]),d.colors.push(t.colors[4*l+1]),d.colors.push(t.colors[4*l+2]),d.colors.push(t.colors[4*l+3]),d.radiiHalfWidthAngles.push(t.radii[l]),d.radiiHalfWidthAngles.push(.5*t.lineWidths[l]),d.radiiHalfWidthAngles.push(t.totalAngles[l]),d.radiiHalfWidthAngles.push(t.startAngles[l]),d.patternOffsets.push(t.patternOffsets[l])}for(var h in s)this.addChild(s[h].createMesh3D());return this},setName:function(e){this._name=e},getNodeType:function(){return"Node3D"}});return UWA.namespace("THREEDS/Nodes/Instanced2DArcCirclePattern",o)}),define("SVGLoader/Instanced2DArcCirclePattern",["DS/SVGLoader/Instanced2DArcCirclePattern","DS/DSMigration/DSMigration"],function(e,t){return t.deprecateModule("SVGLoader/Instanced2DArcCirclePattern"),e}),define("DS/SVGLoader/Instanced2DArcCircle",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/Mesh3D","DS/Mesh/MeshUtils","DS/SVGLoader/InstancedArcsShaders","DS/SVGLoader/InstancedArcsUtils"],function(e,t,i,n,a,r){"use strict";var o=i.extend({init:function(t){this._name=t.name;var i=r.createMaterial(a.ArcCircle,!1,null),n=t.nbInstances||1,o=r.createArcLoopMesh(i);this._parent(o,t.name),this.setShadow(!1),this.setFrustumCulled(!1);for(var s,l=t.positions,d={data:l,type:"v3",isFlattened:!0,attribName:"instancePosition"},c=new e.Box3,f=0;f<n;f++)s=r.computeArcBBox(new e.Vector3(l[3*f],l[3*f+1],l[3*f+2]),t.radii[f],t.radii[f],t.startAngles[f],t.totalAngles[f],0,t.lineWidths[f]),c.mergeWithBox(s);for(var u={data:t.colors,type:"v4",isFlattened:!0,attribName:"instanceColor"},h=[],p=0;p<n;p++){var g=.5*t.lineWidths[p],S=t.radii[p];h.push(S),h.push(g),h.push(t.totalAngles[p]),h.push(t.startAngles[p])}var v={data:h,type:"v4",isFlattened:!0,attribName:"instanceRadiiAndAngles"};return this.setMaterial(i),this.setInstancingParameters(n,[d,v,u],"instance"),this.forceBoundingBox(c),this.setSSAO(!1),this},setName:function(e){this._name=e},getNodeType:function(){return"Mesh3D"},setRatio:function(e){console.warn("setRatio is not supported for Instanced2DArcCircle")},setBillboardData:function(e,t,i){console.warn("setBillboardData is not supported for Instanced2DArcCircle")},setFixedSizeCameraName:function(e){console.warn("setFixedSizeCameraName is not supported for Instanced2DArcCircle")},setFixedSizeCenter:function(e){console.warn("setFixedSizeCenter is not supported for Instanced2DArcCircle")}});return UWA.namespace("THREEDS/Nodes/Instanced2DArcCircle",o)}),define("SVGLoader/Instanced2DArcCircle",["DS/SVGLoader/Instanced2DArcCircle","DS/DSMigration/DSMigration"],function(e,t){return t.deprecateModule("SVGLoader/Instanced2DArcCircle"),e}),define("DS/SVGLoader/Instanced2DArcCircleFill",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/Mesh3D","DS/Mesh/MeshUtils","DS/SVGLoader/InstancedArcsShaders","DS/SVGLoader/InstancedArcsUtils"],function(e,t,i,n,a,r){"use strict";var o=i.extend({init:function(t){this._name=t.name;var i=r.createMaterial(a.ArcCircleFill,!1,null),n=t.nbInstances||1,o=r.createArcFillMesh(i);this._parent(o,t.name),this.setShadow(!1),this.setFrustumCulled(!1);for(var s,l=t.positions,d={data:l,type:"v3",isFlattened:!0,attribName:"instancePosition"},c=new e.Box3,f=0;f<n;f++)s=r.computeArcFillBBox(new e.Vector3(l[3*f],l[3*f+1],l[3*f+2]),t.radii[f],t.radii[f],t.startAngles[f],t.totalAngles[f],0),c.mergeWithBox(s);for(var u={data:t.colors,type:"v4",isFlattened:!0,attribName:"instanceColor"},h=[],p=0;p<n;p++){var g=t.radii[p];h.push(g),h.push(t.totalAngles[p]),h.push(t.startAngles[p])}var S={data:h,type:"v3",isFlattened:!0,attribName:"instanceRadiiAndAngles"};return this.setMaterial(i),this.setInstancingParameters(n,[d,S,u],"mesh"),this.forceBoundingBox(c),this.setSSAO(!1),this},setName:function(e){this._name=e},getNodeType:function(){return"Mesh3D"},setRatio:function(e){console.warn("setRatio is not supported for Instanced2DArcCircleFill")},setBillboardData:function(e,t,i){console.warn("setBillboardData is not supported for Instanced2DArcCircleFill")},setFixedSizeCameraName:function(e){console.warn("setFixedSizeCameraName is not supported for Instanced2DArcCircleFill")},setFixedSizeCenter:function(e){console.warn("setFixedSizeCenter is not supported for Instanced2DArcCircleFill")}});return UWA.namespace("THREEDS/Nodes/Instanced2DArcCircleFill",o)}),define("SVGLoader/Instanced2DArcCircleFill",["DS/SVGLoader/Instanced2DArcCircleFill","DS/DSMigration/DSMigration"],function(e,t){return t.deprecateModule("SVGLoader/Instanced2DArcCircleFill"),e}),define("DS/SVGLoader/Instanced2DArcEllipse",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/Mesh3D","DS/Mesh/MeshUtils","DS/SVGLoader/InstancedArcsShaders","DS/SVGLoader/InstancedArcsUtils"],function(e,t,i,n,a,r){"use strict";var o=t.extend({init:function(t){this._parent(t.name),this._name=t.name;for(var n=t.nbInstances||1,o={},s=0;s<n;s++){var l,d=t.xRadii[s],c=t.yRadii[s],f=.5*t.lineWidths[s],u=d*d,h=f*f,p=c*c,g=(Math.cos(t.startAngles[s]),Math.cos(t.startAngles[s]+t.totalAngles[s]),Math.sin(t.startAngles[s]),Math.sin(t.startAngles[s]+t.totalAngles[s]),d>c?Math.sqrt((h-p)/(p-u)):Math.sqrt((h-u)/(u-p)),f>c*c/d||f>d*d/c?1:0);o[g]?l=o[g]:(l={considerArc:g,nbInstances:0,bbox:null,positions:[],colors:[],radiiHalfWidth:[],offsets_and_angles:[],createMesh3D:function(){var e={data:this.positions,type:"v3",isFlattened:!0,attribName:"instancePosition"},t={data:this.colors,type:"v4",isFlattened:!0,attribName:"instanceColor"},n={data:this.radiiHalfWidth,type:"v3",isFlattened:!0,attribName:"instanceRadiiAndWidth"},o={data:this.offsets_and_angles,type:"v4",isFlattened:!0,attribName:"instanceOffsetAndAngles"},s=r.createMaterial(a.ArcEllipse,this.considerArc,null),l=r.createArcLoopMesh(s),d=new i(l,null);return d.setMaterial(s),d.setInstancingParameters(this.nbInstances,[e,t,n,o],"instance"),d.forceBoundingBox(this.bbox),d.setShadow(!1),d.setFrustumCulled(!1),d.setSSAO(!1),d}},o[g]=l),l.nbInstances++;var S=r.computeArcBBox(new e.Vector3(t.positions[3*s],t.positions[3*s+1],t.positions[3*s+2]),d,c,t.startAngles[s],t.totalAngles[s],t.offsets[s],t.lineWidths[s]);l.bbox?l.bbox.mergeWithBox(S):l.bbox=S,l.positions.push(t.positions[3*s]),l.positions.push(t.positions[3*s+1]),l.positions.push(t.positions[3*s+2]),l.colors.push(t.colors[4*s]),l.colors.push(t.colors[4*s+1]),l.colors.push(t.colors[4*s+2]),l.colors.push(t.colors[4*s+3]),l.radiiHalfWidth.push(d),l.radiiHalfWidth.push(c),l.radiiHalfWidth.push(f),l.offsets_and_angles.push(Math.cos(t.offsets[s])),l.offsets_and_angles.push(Math.sin(t.offsets[s])),l.offsets_and_angles.push(t.totalAngles[s]),l.offsets_and_angles.push(t.startAngles[s])}for(var v in o)o[v]&&this.addChild(o[v].createMesh3D());return this},setName:function(e){this._name=e},getNodeType:function(){return"Node3D"}});return UWA.namespace("THREEDS/Nodes/Instanced2DArcEllipse",o)}),define("SVGLoader/Instanced2DArcEllipse",["DS/SVGLoader/Instanced2DArcEllipse","DS/DSMigration/DSMigration"],function(e,t){return t.deprecateModule("SVGLoader/Instanced2DArcEllipse"),e}),define("DS/SVGLoader/SVGRenderableStrokeArcSet",["DS/SVGLoader/SVGRenderable","DS/Visualization/ThreeJS_DS","DS/SVGLoader/Instanced2DArcEllipse","DS/SVGLoader/Instanced2DArcCircle","DS/Visualization/Node3D","DS/Visualization/SceneGraphFactory","DS/SVGLoader/Instanced2DArcEllipsePattern","DS/SVGLoader/Instanced2DArcCirclePattern"],function(e,t,i,n,a,r,o,s){"use strict";return e.extend({init:function(e,t){this._parent(!1,t),this.arcDataArray=[],this.activatePatterns=e},isEmpty:function(){return!this.arcDataArray.length},addArcData:function(e){e&&e.gas&&e.gas.getStrokeColor()&&(e.zIndex=this.context.computeZIndex(e.gas),this.arcDataArray.push(e))},createNode3D:function(e){if(!this.arcDataArray.length)return null;var t,r,l,d,c,f,u,h,p={totalAngles:[],startAngles:[],positions:[],xRadii:[],yRadii:[],offsets:[],lineWidths:[],colors:[],patterns:this.activatePatterns?[]:null,patternOffsets:this.activatePatterns?[]:null,nbInstances:0},g={totalAngles:[],startAngles:[],positions:[],radii:[],offsets:[],lineWidths:[],colors:[],patterns:this.activatePatterns?[]:null,patternOffsets:this.activatePatterns?[]:null,nbInstances:0};for(t=0;t<this.arcDataArray.length;t++)(l=this.arcDataArray[t])&&(l.xRadius===l.yRadius?(g.radii.push(l.xRadius),r=g):(p.xRadii.push(l.xRadius),p.yRadii.push(l.yRadius),r=p),r.totalAngles.push(l.totalAngle),r.startAngles.push(l.startAngle),r.positions.push(l.position.x),r.positions.push(l.position.y),r.positions.push(this.context.getZFromZIndex(l.zIndex)),r.offsets.push(l.offset),r.lineWidths.push(l.gas.getStrokeLineWidth()),d=l.gas.getStrokeColor(),r.colors.push(d.r),r.colors.push(d.g),r.colors.push(d.b),this.activatePatterns&&(c=this.computeDashData(l),r.patterns.push(c.dashArray),r.patternOffsets.push(c.dashOffset)),r.colors.push(1),r.nbInstances++);return(p.nbInstances||g.nbInstances)&&(h=new a),p.nbInstances&&(f=this.activatePatterns?new o(p):new i(p),h.addChild(f)),g.nbInstances&&(u=this.activatePatterns?new s(g):new n(g),h.addChild(u)),h},computeDashData:function(e){var t;if(e.invert){var i,n=e.gas.getDashArray(),a=[];for(i=0;i<n.length;i++)a.push(n[n.length-i-1]);a.splice(0,0,a[a.length-1]),a.pop();var r=0;for(i=0;i<a.length;i++)r+=a[i];t={dashArray:a,dashOffset:r-(e.length+e.dashOffset-a[0])%r}}else t={dashArray:e.gas.getDashArray(),dashOffset:e.dashOffset};return t}})}),define("DS/SVGLoader/SVGNode_unknown",["DS/SVGLoader/SVGNode_abstract"],function(e){"use strict";return e.extend({init:function(e){this._parent(e),this.unknown=!0,console.log("SVGLoader: unknown node '"+this.node.nodeName+"'")}})}),define("DS/SVGLoader/SVGRenderableFilledCircleSet",["DS/SVGLoader/SVGRenderable","DS/Visualization/ThreeJS_DS","DS/SVGLoader/Instanced2DArcCircleFill"],function(e,t,i){"use strict";return e.extend({init:function(e){this._parent(!1,e),this.circleDataArray=[]},isEmpty:function(){return!this.circleDataArray},addFilledCircle:function(e,t,i,n){var a=this.context.computeZIndex(n);this.circleDataArray.push({cx:e,cy:t,r:i,gas:n,zIndex:a})},createNode3D:function(e){if(!this.circleDataArray.length)return null;var t,n,a,r,o={totalAngles:[],startAngles:[],positions:[],radii:[],colors:[],nbInstances:0};for(t=0;t<this.circleDataArray.length;t++)n=this.circleDataArray[t],o.totalAngles.push(2*Math.PI),o.startAngles.push(0),o.positions.push(n.cx),o.positions.push(-n.cy),o.positions.push(this.context.getZFromZIndex(n.zIndex)),o.radii.push(n.r),a=n.gas.getFillColor(),o.colors.push(a.r),o.colors.push(a.g),o.colors.push(a.b),o.colors.push(1),o.nbInstances++;return o.nbInstances>0&&(r=new i(o)),r}})}),define("DS/SVGLoader/SVGNode_image",["DS/SVGLoader/SVGNode_abstract","DS/SVGLoader/SVGLoaderUtils","DS/Visualization/ThreeJS_DS"],function(e,t,i){"use strict";return e.extend({init:function(e){this._parent(e)},fillRenderableBank:function(e,t){var i,n,a,r,o=this.node.getAttributeNS("http://www.w3.org/1999/xlink","href");o&&o.startsWith("data:")&&(i=parseFloat(this.node.getAttribute("x")),n=parseFloat(this.node.getAttribute("y")),a=parseFloat(this.node.getAttribute("width")),r=parseFloat(this.node.getAttribute("height")),e.getImageRenderable(i,n,a,r,o))}})}),define("DS/SVGLoader/SVGRenderableImage",["DS/SVGLoader/SVGRenderable","DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/SceneGraphFactory","DS/SVGLoader/SVGMeshMaterial"],function(e,t,i,n,a){"use strict";return e.extend({init:function(e,i,n,a,r,o,s){this._parent(!0,s),this.isImageReady=!1,this.x=e,this.y=i,this.width=n,this.height=a,this.zIndex=this.context.computeZIndex(null);var l=this;this.texture=t.ImageUtils.loadTexture(r,void 0,function(){l.isImageReady=!0,o(l)},function(){l.isImageReady=!0,l.texture=null,o(l)},void 0,!0)},createNode3D:function(e){if(!this.isImageReady||!this.texture)return null;var i=new a({map:this.texture,force:!0,transparent:!0,viewBox:e}),r=n.createRectangleNode({width:this.width,height:this.height,fill:!0,noEdge:!0,fillColor:null,material:i}),o=new t.Matrix4,s=new t.Vector3(this.x,-this.y-this.height,this.context.getZFromZIndex(this.zIndex));return o.setPosition(s),r.setMatrix(o),r.setSSAO(!1),r}})}),define("DS/SVGLoader/SVGNode_ellipse",["DS/SVGLoader/SVGNode_abstract","DS/Visualization/ThreeJS_DS","DS/SVGLoader/SVGLoaderUtils","DS/SVGLoader/SVGRenderableStrokeArcSet"],function(e,t,i,n){"use strict";return e.extend({init:function(e){this._parent(e)},fillRenderableBank:function(e,n){var a=n.buildChildGas(this.node),r=e.getStrokeArcSetRenderable(a),o=parseFloat(this.node.getAttributeNS(null,"cx")),s=parseFloat(this.node.getAttributeNS(null,"cy")),l=parseFloat(this.node.getAttributeNS(null,"rx")),d=parseFloat(this.node.getAttributeNS(null,"ry")),c=this.node.getAttributeNS(null,"transform"),f=c?i.parseTransformation(c):{matrix:new t.Matrix3,angle:0},u=f.matrix,h=f.angle,p=new t.Vector3(o,s,1);p.applyMatrix3(u),a.getStrokeColor()&&r.addArcData({xRadius:l,yRadius:d,totalAngle:2*Math.PI,startAngle:0,position:new t.Vector2(p.x,-p.y),offset:-h,gas:a})}})}),define("DS/SVGLoader/SVGGas",["UWA/Class","DS/SVGLoader/SVGLoaderUtils"],function(e,t){"use strict";window.linecaps=[],window.linejoins=[],window.miterLimits=[];var i=e.extend({init:function(e){var t;if(this.attributes={strokeWidth:1},e)for(t in e.attributes)this.attributes[t]=e.attributes[t]},setFromSVGNode:function(e){var i=e.getAttributeNS(null,"stroke");i&&("none"!==i?this.attributes.strokeColor=t.parseColor(i):delete this.attributes.strokeColor);var n=e.getAttributeNS(null,"fill");n&&"none"!==n&&(this.attributes.fillColor=t.parseColor(n));var a=e.getAttributeNS(null,"stroke-width");a&&(this.attributes.strokeWidth=parseFloat(a));var r,o,s=e.getAttributeNS(null,"stroke-dasharray");s&&(r=t.parseDashArray(s),this.attributes.dash=r.key,(o=r.value).length%2!=0&&(o=o.concat(o)),this.attributes.dashValue=o);var l=e.getAttributeNS(null,"stroke-linejoin");l&&(this.attributes.lineJoin=l);var d=e.getAttributeNS(null,"stroke-linecap");d&&(this.attributes.lineCap=d);var c=e.getAttributeNS(null,"stroke-miterlimit");c&&(this.attributes.miterLimit=parseFloat(c))},getStrokeLineWidth:function(){return this.attributes.strokeWidth},getStrokeColor:function(){return this.attributes.strokeColor},getFillColor:function(){return this.attributes.fillColor},getDashArray:function(){return this.attributes.dashValue},getLineCap:function(){return this.attributes.lineCap},getLineJoin:function(){return this.attributes.lineJoin},getMiterLimit:function(){return this.attributes.miterLimit},buildChildGas:function(e){var t=new i(this);return t.setFromSVGNode(e),t},isValid:function(){return!isNaN(this.attributes.strokeWidth)&&!(!this.attributes.fillColor&&!this.attributes.strokeColor)},isZCompatibleWithGas:function(e){return this.hasSameColorAs(e,"strokeColor")&&this.hasSameColorAs(e,"fillColor")},hasSameColorAs:function(e,t){var i=this.attributes[t],n=e.attributes[t];return!i&&!n||!(!i||!n)&&i.equals(n)}});return i}),define("DS/SVGLoader/SVGRenderableBank",["UWA/Class","DS/SVGLoader/SVGRenderableStrokePolygonSet","DS/SVGLoader/SVGRenderableStrokeArcSet","DS/SVGLoader/MultiIndexTable","DS/SVGLoader/SVGRenderableImage","DS/SVGLoader/SVGRenderableContext","DS/SVGLoader/SVGRenderableFilledCircleSet"],function(e,t,i,n,a,r,o){"use strict";return e.extend({init:function(){this.polygonSetRenderableTable=new n(["strokeWidth","strokeColor","fillColor","dash","lineCap","lineJoin","miterLimit"],["strokeWidth","strokeColor"]),this.arcSetRenderable=null,this.arcSetWithPatternRenderable=null,this.filledCircleSetRenderable=null,this.imageRenderables=[],this.nbImagesToLoad=0,this.destinationNode=null,this.onEnded=null,this.context=new r},setOnEndedCB:function(e){this.onEnded=e},hasImagesToLoad:function(){return this.nbImagesToLoad>0},getStrokePolygonSetRenderable:function(e){e.attributes.strokeWidth;var i=this.context;return this.polygonSetRenderableTable.getElement(e.attributes,function(){return new t(e,i)})},getStrokeArcSetRenderable:function(e){return e.attributes.dash?(this.arcSetWithPatternRenderable||(this.arcSetWithPatternRenderable=new i(!0,this.context)),this.arcSetWithPatternRenderable):(this.arcSetRenderable||(this.arcSetRenderable=new i(!1,this.context)),this.arcSetRenderable)},getFilledCircleSetRenderable:function(e){return this.filledCircleSetRenderable||(this.filledCircleSetRenderable=new o(this.context)),this.filledCircleSetRenderable},getImageRenderable:function(e,t,i,n,r){this.nbImagesToLoad++;var o=new a(e,t,i,n,r,this.onImageLoaded.bind(this),this.context);return this.imageRenderables.push(o),o},onImageLoaded:function(e,t){var i=e.createNode3D(this.viewBox);i&&this.destinationNode.addChild(i),this.nbImagesToLoad--,!this.nbImagesToLoad&&this.onEnded&&this.onEnded()},buildNodes:function(e,t,i){this.viewBox=t;var n,a,r=this.polygonSetRenderableTable.exportToArray();for(this.arcSetRenderable&&r.push(this.arcSetRenderable),this.arcSetWithPatternRenderable&&r.push(this.arcSetWithPatternRenderable),this.filledCircleSetRenderable&&r.push(this.filledCircleSetRenderable),n=0;n<r.length;n++)(a=r[n].createNode3D(t))&&(i&&a.exludeFromBounding(!0),e.addChild(a));this.destinationNode=e}})}),define("DS/SVGLoader/SVGNode_g",["DS/SVGLoader/SVGNode_abstract"],function(e){"use strict";return e.extend({init:function(e){this._parent(e)}})}),define("DS/SVGLoader/SVGNode_svg",["DS/SVGLoader/SVGNode_abstract","DS/Visualization/Node3D","DS/SVGLoader/SVGRenderableBank","DS/SVGLoader/SVGGas","DS/Visualization/ThreeJS_DS","DS/Visualization/SceneGraphFactory","DS/Mesh/Mesh","DS/SVGLoader/SVGLoaderUtils"],function(e,t,i,n,a,r,o,s){"use strict";return e.extend({init:function(e){this._parent(e)},buildNode3D:function(e,a){var r,o,s,l,d,c=this.getViewBox(),f=new t,u=1;function h(){0===--u&&a&&a()}for(o=0;o<this.children.length;o++)(s=this.children[o]).buildNode3D?(u++,r=s.buildNode3D(e+1,h),o>0&&r.setVisibility(!1),f.addChild(r)):(l||(d=new n,l=new i),s.fillRenderableBank(l,d));var p=f;if(l){0===e&&(p=new t,f.addChild(p));var g=null;if(c){f.getBoundingSphere();g=this.buildBgNode(c,l.context.getBgZ())}l.buildNodes(p,c,!!g),g&&p.addChild(g),l.hasImagesToLoad()&&(l.setOnEndedCB(h),u++)}return h(),f},buildBgNode:function(e,t){var i=new a.Color(16777215),n=this.node.style&&this.node.style.background;n&&(n=function(e){var t=e.indexOf("rgb");if(-1===t)return e;var i=e.substring(t),n=i.indexOf(")");if(-1===n)return e;return i=i.substring(0,n+1)}(n),i=s.parseColor(n));var o=new a.MeshBasicMaterial({color:i,force:!0}),l=r.createRectangleNode({width:e.width,height:e.height,fill:!0,material:o}),d=new a.Matrix4,c=new a.Vector3(e.x,e.y,t);return d.setPosition(c),l.setMatrix(d),l.setSSAO(!1),l},buildMaskNode:function(e,t){},getViewBox:function(){var e=this.node.getAttributeNS(null,"viewBox");if(!e)return null;var t=e.split(" "),i={x:parseFloat(t[0]),y:parseFloat(t[1]),width:parseFloat(t[2]),height:parseFloat(t[3])};return{x:i.x,y:-i.y-i.height,width:i.width,height:i.height}}})}),define("DS/SVGLoader/SVGNode_path",["DS/SVGLoader/SVGNode_abstract","DS/SVGLoader/SVGLoaderUtils","DS/SVGLoader/SVGRenderableStrokePolygonSet","DS/SVGLoader/SVGRenderableStrokeArcSet","DS/Visualization/ThreeJS_DS"],function(e,t,i,n,a){"use strict";var r=["M","m","A","a","L","l","Z","z"];function o(e,t,i,n){var a=Math.sqrt(e*e+t*t),r=Math.sqrt(i*i+n*n),o=Math.acos((e*i+t*n)/(a*r));return e*n-t*i<0&&(o*=-1),o}function s(e){if(0===e)return 1;var t,i=1,n=1;for(t=1;t<=e;t++)i*=t,n*=2;var a=i*n;t=0;var r=1;if(e>2)for(t=0;t<=e-2;t++)r*=2*t+1;return-r/a}function l(e,t,i){return{0:i-t,1:.5*(i+Math.sin(i)*Math.cos(i)-t-Math.sin(t)*Math.cos(t)),2:.03125*(12*i+8*Math.sin(2*i)+Math.sin(4*i)-12*t-8*Math.sin(2*t)-Math.sin(4*t)),3:1/192*(60*i+45*Math.sin(2*i)+9*Math.sin(4*i)+Math.sin(6*i)-60*t-45*Math.sin(2*t)-9*Math.sin(4*t)-Math.sin(6*t)),4:(840*i+672*Math.sin(2*i)+168*Math.sin(4*i)+32*Math.sin(6*i)+3*Math.sin(8*i)-840*t-672*Math.sin(2*t)-168*Math.sin(4*t)-32*Math.sin(6*t)-3*Math.sin(8*t))/3072}[e]}return e.extend({init:function(e){this._parent(e)},fillRenderableBank:function(e,i){var n,a,o,s,l,d=i.buildChildGas(this.node),c=e.getStrokePolygonSetRenderable(d),f=e.getStrokeArcSetRenderable(d),u=this.node.getAttributeNS(null,"d"),h=t.parseCommands(u,r),p=0,g=0,S=!1,v=!1,m=null,x=0;for(o=0;o<h.length;o++)switch((s=h[o])[0]){case"M":c.startNewPolygon(),x=0,m=[p=s[1],g=s[2]],c.addPointToCurrentPolygon(p,g,x);break;case"m":c.startNewPolygon(),x=0,m=[p+=s[1],g+=s[2]],c.addPointToCurrentPolygon(p,g,x);break;case"A":if(0===s[1]||0===s[2]){p=s[6],g=s[7],c.addPointToCurrentPolygon(p,g,x);break}S||(S=!0,v=!0),n=s[6],a=s[7],(l=this.buildArcData(p,g,n,a,s[1],s[2],s[3],s[4],s[5],d))&&(l.dashOffset=x),f.addArcData(l),l&&(x+=l.length),p=n,g=a,c.startNewPolygon(),c.addPointToCurrentPolygon(p,g,x);break;case"a":if(0===s[1]||0===s[2]){p+=s[6],g+=s[7],c.addPointToCurrentPolygon(p,g,x);break}S||(S=!0,v=!0),n=p+s[6],a=g+s[7],(l=this.buildArcData(p,g,n,a,s[1],s[2],s[3],s[4],s[5],d))&&(l.dashOffset=x),f.addArcData(l),l&&(x+=l.length),p=n,g=a,S=!0,v=!0,c.startNewPolygon(),c.addPointToCurrentPolygon(p,g,x);break;case"L":n=s[1],a=s[2],c.addPointToCurrentPolygon(n,a,x),x+=Math.sqrt((n-p)*(n-p)+(a-g)*(a-g)),p=n,g=a;break;case"l":n=p+s[1],a=g+s[2],c.addPointToCurrentPolygon(p,g,x),x+=Math.sqrt((n-p)*(n-p)+(a-g)*(a-g)),p=n,g=a;break;case"z":case"Z":S?(c.addPointToCurrentPolygon(m[0],m[1],x),c.startNewPolygon()):c.closePolygon(),S=!1,x=0}if(v&&d.attributes.fillColor)throw new Error("broken filled polygon!!");c.startNewPolygon(),c.endPolygonGroup()},buildArcData:function(e,t,i,n,a,r,s,l,d,c){if(s=Math.PI*s/180,e===i&&t===n)return null;var f=l?1:0,u=d?1:0,h=(e-i)/2,p=(t-n)/2,g=Math.cos(s)*h+Math.sin(s)*p,S=-Math.sin(s)*h+Math.cos(s)*p,v=g*g/((a=Math.abs(a))*a)+S*S/((r=Math.abs(r))*r);v>1&&(a*=1.001*Math.sqrt(v),r*=1.001*Math.sqrt(v));var m=Math.sqrt((a*a*r*r-a*a*S*S-r*r*g*g)/(a*a*S*S+r*r*g*g));f===u&&(m*=-1);var x=m*a*S/r,A=-m*r*g/a,C=Math.cos(s)*x-Math.sin(s)*A+(e+i)/2,D=Math.sin(s)*x+Math.cos(s)*A+(t+n)/2,y=(g-x)/a,b=(S-A)/r,_=(-g-x)/a,P=(-S-A)/r,V=o(1,0,y,b),w=o(y,b,_,P)%(2*Math.PI);return 0===u&&w>0&&(w-=2*Math.PI),1===u&&w<0&&(w+=2*Math.PI),this.buildArcDataFinal(C,D,a,r,V,w,s,c)},buildArcDataFinal:function(e,t,i,n,r,o,s,l){i===n&&(r+=s,s=0),r*=-1;var d=!1;(o*=-1)<0&&(r+=o,o*=-1,d=!0);var c={totalAngle:o,startAngle:r=function(e){var t=e%(2*Math.PI);t<0&&(t+=2*Math.PI);return t}(r),position:new a.Vector2(e,-t),xRadius:i,yRadius:n,offset:-s,gas:l,invert:d};return c.length=this.computeArcLength(c),c},computeArcLength:function(e){if(!e)return 0;var t=e.startAngle+e.offset,i=t+e.totalAngle;return function(e,t,i,n,a){var r,o,d,c;e>t?(c=1-t*t/(e*e),r=e,t,o=i,d=n):(c=1-e*e/(t*t),r=t,e,o=i+.5*Math.PI,d=n+.5*Math.PI);for(var f=0,u=0;u<=a;u++)f+=Math.pow(c,u)*s(u)*l(u,o,d);return r*f}(e.xRadius,e.yRadius,t,i,4)}})}),define("DS/SVGLoader/SVGNode_circle",["DS/SVGLoader/SVGNode_abstract","DS/SVGLoader/SVGLoaderUtils","DS/Visualization/ThreeJS_DS"],function(e,t,i){"use strict";return e.extend({init:function(e){this._parent(e)},fillRenderableBank:function(e,t){var n=t.buildChildGas(this.node),a=e.getStrokeArcSetRenderable(n),r=parseFloat(this.node.getAttributeNS(null,"cx")),o=parseFloat(this.node.getAttributeNS(null,"cy")),s=parseFloat(this.node.getAttributeNS(null,"r")),l=e.getFilledCircleSetRenderable(n);n.getFillColor()&&l.addFilledCircle(r,o,s,n),n.getStrokeColor()&&a.addArcData({xRadius:s,yRadius:s,totalAngle:2*Math.PI,startAngle:0,position:new i.Vector2(r,-o),offset:0,gas:n})}})}),define("DS/SVGLoader/SVGNodeTreeBuilder",["UWA/Class","DS/SVGLoader/SVGNode_svg","DS/SVGLoader/SVGNode_g","DS/SVGLoader/SVGNode_circle","DS/SVGLoader/SVGNode_ellipse","DS/SVGLoader/SVGNode_unknown","DS/SVGLoader/SVGNode_path","DS/SVGLoader/SVGNode_image"],function(e,t,i,n,a,r,o,s){"use strict";var l={svg:t,g:i,circle:n,ellipse:a,path:o,image:s};return e.extend({init:function(e){this.svgRoot=e},buildTree:function(){return this.buildNodeTree(this.svgRoot)},buildNodeTree:function(e){var t,i,n=new(l[e.nodeName]||r)(e);for(t=0;t<e.childNodes.length;t++)1===e.childNodes[t].nodeType&&(i=this.buildNodeTree(e.childNodes[t]),n.children.push(i));return n}})}),define("DS/SVGLoader/SVGToNode3D",["UWA/Class","DS/SVGLoader/SVGNodeTreeBuilder"],function(e,t){"use strict";return e.extend({init:function(e){this.svgRootElement=e},buildNode3D:function(e){return new t(this.svgRootElement).buildTree().buildNode3D(0,e)}})}),define("DS/SVGLoader/SVGNode",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Mesh/MeshUtils","DS/SVGLoader/SVGToNode3D","DS/Visualization/GetSVGMode"],function(e,t,i,n,a){"use strict";return t.extend({init:function(e,t){this._parent(t);var i=new n(e).buildNode3D();this.addChild(i)}})}),define("DS/SVGLoader/SVGLoader",["UWA/Class","DS/SVGLoader/SVGToNode3D"],function(e,t){"use strict";return e.extend({init:function(e){e=e||{},this.renderCB=e.renderCB,this.onProgressCB=e.onProgressCB,this.onLoadedCB=e.onLoadedCB,this.onErrorCB=e.onErrorCB},load:function(e,i){var n=this.onLoadedCB,a=new XMLHttpRequest;a.onload=function(){var e,r,o=new DOMParser,s=a.response,l=o.parseFromString(s,"image/svg+xml"),d=l.rootElement;if(!d)for(e=0;e<l.childNodes.length&&!d;e++)1===(r=l.childNodes[e]).nodeType&&"svg"===r.nodeName&&(d=r);if(d){var c=new t(d);i.addChild(c.buildNode3D(()=>{n&&setTimeout(n,0)}))}else this.onErrorCB&&this.onErrorCB()};var r=e.serverurl+e.filename;a.open("GET",r,!0),a.send(null)}})});