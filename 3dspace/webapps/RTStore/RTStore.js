define("DS/RTStore/bridge/users",["DS/RTAPIManager/RTAPIManager","vuejs"],function(e,n){"use strict";const s={};return function(t,a){return s[t]||(s[t]=n.observable(e.getUser(t,a)._attributes)),s[t]}}),define("DS/RTStore/modules/user",["vuejs"],function(e){"use strict";const n=(e,n)=>e;return{state:()=>({users:{},userList:[]}),getters:{user:e=>(s,t)=>{var a=n(s);return e.users[a]||console.warn("RTStore user not found "+a),e.users[a]},username:(e,n)=>(e,s)=>{let t=n.user(e,s);return t&&t.username}},actions:{setUser({commit:e},n){e("user",n)},addUser({dispatch:e},{login:n,tenantId:s}){e("setUser",{login:n,tenantId:s})}},mutations:{user(s,t){var a=n(t.login,t.tenantId);-1==s.userList.indexOf(a)&&s.userList.push(a),e.set(s.users,a,t)}}}}),define("DS/RTStore/modules/channel",["vuejs"],function(e){"use strict";const n={addChannels({dispatch:e},{channel_id_array:n}){n.forEach(n=>{e("addChannel",{channel_id:n})})},addChannel({dispatch:e,getters:n,commit:s,rootState:t},{channel_id:a}){if(n.channel(a))return!0;s("pushChannel",{channel_id:a})},addMember({dispatch:e,getters:n,commit:s},{channel_id:t,login:a}){},IAmTyping({commit:e,getters:n},{channel_id:s,isTyping:t}){var a=n.channelsTyping.indexOf(s),i=-1!=a;t&&!i?e("pushTypingChannel",{channel_id:s}):!t&&i&&e("removeTypingChannel",{channel_id:s,channelIndex:a})},isTyping({dispatch:e,getters:n,commit:s,rootState:t},{channel_id:a,isTyping:i,login:r}){if(!n.channel(a)&&e("addChannel",{channel_id:a}),!n.channel(a))return console.error("Channel "+a+" not found");var l=n.typers(a).indexOf(r),c=-1!=l;i&&!c?s("pushTyperToChannel",{channel_id:a,login:r}):!i&&c&&s("removeTyperFromChannel",{channel_id:a,typerIndex:l})},convInfo({dispatch:e,getters:n,commit:s,rootState:t},{channel_id:a,typers:i}){!n.channel(a)&&e("addChannel",{channel_id:a}),s("setTypersOfChannel",{channel_id:a,typers:i})}};return{state:()=>({channels:{},channelsList:[],channelsTyping:[]}),getters:{channelsList:e=>e.channelsList,channelsTyping:e=>e.channelsTyping,channel:e=>n=>e.channels[n],typers:(e,n)=>n=>n&&e.channels[n]&&e.channels[n].typers||[]},actions:n,mutations:{pushChannel(n,{channel_id:s}){-1==n.channelsList.indexOf(s)&&n.channelsList.push(s),e.set(n.channels,s,{channel_id:s,typers:[]})},pushTyperToChannel(e,{channel_id:n,login:s}){e.channels[n].typers.push(s)},removeTyperFromChannel(e,{channel_id:n,typerIndex:s}){e.channels[n].typers.splice(s,1)},setTypersOfChannel(e,{channel_id:n,typers:s}){e.channels[n].typers=s},pushTypingChannel(e,{channel_id:n}){e.channelsTyping.push(n)},removeTypingChannel(e,{channelIndex:n}){e.channelsTyping.splice(n,1)}}}}),define("DS/RTStore/plugins/PAPI_driver",["DS/PlatformAPI/PlatformAPI","DS/RTInterface/RTInterface"],function(e,n){"use strict";const s=function(e,s){n.send({evenement:e,data:s},"fromwidgetim.ds.com")},t=({channel_id:e},t,a)=>{if(!e)return console.error("RTStore subConv without channel_id");a||n.addCallback(function(e){"convInfo"==e.evenement&&t.dispatch("convInfo",Object.assign({},e.data,{channel_id:e.dmId||e.data&&e.data.dmId}))},void 0,function(e){return"towidgetim.dmId:"+e}(e)),s("subConv",{dmId:e})};return function(){return n=>{n.subscribe((e,a)=>{var i=e.type,r=e.payload;return"isConnected"==i?(a.channel.channelsList.forEach(e=>t({channel_id:e},n,!0)),a.channel.channelsTyping.forEach(e=>s("IAmTyping",{dmId:e,isTyping:!0}))):"pushChannel"==i?t(r,n):"pushTypingChannel"==i?a.isConnected&&s("IAmTyping",{dmId:r.channel_id,isTyping:!0}):"removeTypingChannel"==i?a.isConnected&&s("IAmTyping",{dmId:r.channel_id,isTyping:!1}):void 0}),e.subscribe("towidgetim.ds.com",e=>{"CONNECTED"==e.evenement?n.dispatch("connected",{clientDevice:e.data.clientDevice,tenant:e.data.data.tenant,user_id_myself:e.data.user_id,login_myself:e.data.userId,username_myself:e.data.username,appName:e.data.appName,swymUrl:e.data.options["3dswym"]}):"ONPRESENCERECEIVED"!=e.evenement&&"setStatus"!=e.action||n.dispatch("setUser",e.data)}),e.publish("fromwidgetim.ds.com",{evenement:"GETLOGINOKDATA"})}}}),define("DS/RTStore/index",["vuejs","vuex","DS/RTStore/modules/channel","DS/RTStore/modules/user","DS/RTStore/plugins/PAPI_driver"],function(e,n,s,t,a){"use strict";return e.use(n),new n.Store({state:{tenant:null,user_id_myself:null,login_myself:null,username_myself:null,appName:null,isConnected:!1,clientDevice:null,swymUrl:null,isMobile:window.ds&&"MOBILE"==window.ds.env},modules:{channel:s,user:t},plugins:[a()],actions:{connected({getters:e,commit:n,dispatch:s},{clientDevice:t,tenant:a,user_id_myself:i,login_myself:r,username_myself:l,appName:c,swymUrl:d}){n("isConnected",!0),n("connexion_info",{clientDevice:t,tenant:a,user_id_myself:i,login_myself:r,username_myself:l,appName:c}),d&&n("swymUrl",{swymUrl:d})},swymUrl({getters:e,commit:n},{swymUrl:s}){n("swymUrl",{swymUrl:s})}},getters:{swymUrl:e=>e.swymUrl,isMobile:e=>e.isMobile},mutations:{isConnected(e,n){e.isConnected=n},connexion_info(e,{clientDevice:n,tenant:s,user_id_myself:t,login_myself:a,username_myself:i,appName:r,swymUrl:l}){e.clientDevice=n||e.clientDevice,e.tenant=s||e.tenant,e.user_id_myself=t||e.user_id_myself,e.login_myself=a||e.login_myself,e.username_myself=i||e.username_myself,e.appName=r||e.appName},swymUrl(e,{swymUrl:n}){n&&e.swymUrl!=n&&(e.swymUrl=n)}}})}),define("DS/RTStore/RTStore",["DS/RTStore/bridge/users","DS/RTStore/index"],function(e,n){"use strict";if(document.RTStore)return document.RTStore;const s={apiVersion:1,store:n,bridge:{users:e}};return document.RTStore=s,document.RTStore}),define("DS/RTStore/api/vuex-modules/rtchannel",["DS/RTStore/RTStore"],function(e){"use strict";return{namespaced:!0,state:()=>({}),getters:{typers:()=>n=>e.store.getters.typers(n),list:()=>e.store.getters.channelsList},actions:{addSeveral({},{channel_id_array:n}){e.store.dispatch("addChannels",{channel_id_array:n})},add({},{channel_id:n}){e.store.dispatch("addChannel",{channel_id:n})},IAmTyping({},{channel_id:n,isTyping:s}){e.store.dispatch("IAmTyping",{channel_id:n,isTyping:s})},setUserList({},{channel_id:e,login_array:n}){}},mutations:{pushSeveral(n,{channel_id_array:s}){s&&s.forEach(n=>{e.store.commit("pushChannel",{channel_id:n})})},push(n,{channel_id:s}){e.store.commit("pushChannel",{channel_id:s})}}}}),define("DS/RTStore/api/vuex-modules/rtusers",["DS/RTStore/RTStore"],function(e){"use strict";return{namespaced:!0,state:()=>({}),getters:{user:()=>n=>e.store.getters.user(n),username:()=>n=>e.store.getters.username(n)},actions:{},mutations:{}}});