define("DS/MPFRequireConfig/RequireConfig",["DS/PlatformAPI/PlatformAPI","DS/i3DXCompassPlatformServices/i3DXCompassPlatformServices"],(n,t)=>{"use strict";const e="makedatamgt",a="R1132100503382",i="/marketplace-ui-config",o=`${i}/latest-version`;function r(i){const o=i.tenant||n.getApplicationConfiguration("app.mp.tenant")||window.$nuxt&&window.$nuxt.$env.PLATFORM_ID||a;const r=i.service||e;return new Promise((n,e)=>{t.getServiceUrl({platformId:o,serviceName:r,onComplete:function(t){return n(t)},onFailure:e})})}async function s(n){return n.version||await async function(n){const t=await fetch(`${n}${o}`);return(await t.json()).version}(n.baseUrl)}return{listVersions:async n=>(n||(n={}),async function(n){const t=await r(n),e=await(await fetch(`${t}${i}`));return await e.json()}(n)),async configureAllModules(n){n||(n={});const t=await async function(n){const t=await r(n),e=await s({version:n.version,baseUrl:t}),a=await fetch(`${t}${i}/${e}`),o=await a.json();return Object.keys(o).forEach(n=>{o[n]=`${t}${o[n]}`}),o}(n);require.config({paths:t})}}});