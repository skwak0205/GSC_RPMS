define("DS/DELPPWIndexServices/IndexParserNode",["UWA/Core","UWA/Class"],function(e,t){"use strict";return t.extend({init:function(t){var i=this;this._children=[],this._result=t,this._result.attributes.forEach(function(t){var n,r=t.name;e.is(i[r])?e.is(i[r].value,"string")?(n=i[r].value,i[r].value=[n,t.value]):e.is(i[r].value,"array")&&i[r].value.push(t.value):i[r]=t})},getAttribute:function(e){if(this.hasOwnProperty(e))return this[e]},getAttributeValue:function(e){var t=this.getAttribute(e);if(t)return t.value},addChild:function(e){-1===this._children.indexOf(e)&&this._children.push(e)},getChildren:function(){return this._children},getRawResult:function(){return this._result}})}),define("DS/DELPPWIndexServices/IndexParser",["UWA/Core","UWA/Class","DS/DELPPWIndexServices/IndexParserNode","DS/DELPPWLoggerModel/LoggerUtils","DS/DELPPWDicoServices/DicoUtils"],function(e,t,i,n,r){"use strict";return t.singleton({name:"IndexParser",_indexMapping:null,init:function(e){e=e||{},this._parent(e)},setIndexMapping:function(e){this._indexMapping=e},translateAttributeToPredicate:function(t,i){var n,a,s=[];if(e.is(this._indexMapping)){switch(n=(i=i||{}).type||"entity"){case"entity":a=this._indexMapping.IndexMapping.Entity.Key;break;case"relation":a=this._indexMapping.IndexMapping.Relation.Key}return t.forEach(function(e){var t=!1;a.forEach(function(i){i.database===e&&-1===s.indexOf(i.index)&&(s.push(i.index),t=!0)}),t||r.getDicoTypeIndexesForAttribute(e,n).forEach(function(e){s.push(e)})}),s}},translatePredicateToAttribute:function(t,i){var n,a,s;if(e.is(this._indexMapping)){switch(s=(i=i||{}).type||"entity",t instanceof Array?n=[]:(n={},i.fromExpandService&&(t=function(t){var i={};return t=t||{},Object.keys(t).forEach(function(n){var r=t[n];r instanceof Function||0===n.indexOf("_")||e.is(r)&&e.is(r.value)&&(i[n]=r.value)}),i}(t))),s){case"entity":a=this._indexMapping.IndexMapping.Entity.Key;break;case"relation":a=this._indexMapping.IndexMapping.Relation.Key}return t instanceof Array?t.forEach(function(e){var t;a.some(function(i){var n=i.index===e;return n&&(t=i),n}),t?-1===n.indexOf(t.database)&&n.push(t.database):r.getDicoTypeAttributesForIndex(e,s).forEach(function(e){n.push(e)})}):Object.keys(t).forEach(function(e){var i,u,o;a.some(function(t){var i=t.index===e;return i&&(o=t),i}),o?(i=t[o.index],a.some(function(e){var t=e.index===i;return t&&(u=e),t}),u&&(i=u.database),n[o.database]=i):(i=t[e],r.getDicoTypeAttributesForIndex(e,s).forEach(function(e){n[e]=i}))}),n}},parseNavigateResult:function(t){var r=null,a={},s=[];return"string"==typeof t?r=JSON.parse(t):"object"==typeof t&&null!==t&&(r=t),e.is(r)&&e.is(r.results,"array")&&r.results.forEach(function(t){var r,u,o,c,d,f;if(Object.prototype.hasOwnProperty.call(t,"attributes"))u=(r=new i(t)).getAttributeValue("did"),a[u]=r;else if(Object.prototype.hasOwnProperty.call(t,"path"))for(c=0;c<t.path.length;c++){if(d=t.path[c],f=a[d],!e.is(f))throw new Error("Result corruption : did not found "+d);0===c?(-1===s.indexOf(f)&&s.push(f),o=f):(o.addChild(f),o=f)}else n.warn("IndexParser.parseNavigateResult Unsupported element: "+JSON.stringify(t))}),s},parseFetchResult:function(t){var i={attributes:{},ds6w:{}};return e.is(t)&&e.is(t.attributes,"array")&&t.attributes.forEach(function(t){var n;if(e.is(t)&&e.is(t.format,"string"))switch(t.format){case"attribute":e.is(i.attributes[t.name])?e.is(i.attributes[t.name],"string")?(n=i.attributes[t.name],i.attributes[t.name]=[n,t.value]):e.is(i.attributes[t.name],"array")&&i.attributes[t.name].push(t.value):i.attributes[t.name]=t.value;break;case"ds6w_facet":i.ds6w[t.name]={value:t.value,dispValue:t.dispValue,type:t.type}}}),i}})});