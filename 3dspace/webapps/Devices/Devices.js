define("DS/Devices/KeyboardMapping",["UWA/Core","DS/CoreEvents/Events"],function(t,e){"use strict";return t.Class.singleton({mapTrigger:function(t,n){var i=0;if("left"===n)i=1;else if("right"!==n)return;window.addEventListener("keydown",function(n){switch(n.keyCode){case t:e.publish({event:"/VR/onControllerPressedDown"+i,data:{buttonIdx:1}}),console.log("triggerDown")}},!1),window.addEventListener("keyup",function(i){var o=0;if("left"===n)o=1;else if("right"!==n)return;switch(i.keyCode){case t:e.publish({event:"/VR/onControllerPressedUp"+o,data:{buttonIdx:1}}),console.log("triggerUp")}},!1)},mapThumbButton:function(t,n){var i=0;if("left"===n)i=1;else if("right"!==n)return;window.addEventListener("keydown",function(n){switch(n.keyCode){case t:e.publish({event:"/VR/onControllerTouchedBegin"+i,data:{buttonIdx:2}}),e.publish({event:"/VR/onControllerPressedDown"+i,data:{buttonIdx:2}}),console.log("thumbpadDown")}},!1),window.addEventListener("keyup",function(n){switch(n.keyCode){case t:e.publish({event:"/VR/onControllerTouchedEnd"+i,data:{buttonIdx:2}}),e.publish({event:"/VR/onControllerPressedUp"+i,data:{buttonIdx:2}}),console.log("thumbpadUp")}},!1)},mapGrips:function(t,n){var i=0;if("left"===n)i=1;else if("right"!==n)return;window.addEventListener("keydown",function(n){switch(n.keyCode){case t:e.publish({event:"/VR/onControllerPressedDown"+i,data:{buttonIdx:0}}),console.log("gripsUp")}},!1),window.addEventListener("keyup",function(n){switch(n.keyCode){case t:e.publish({event:"/VR/onControllerPressedUp"+i,data:{buttonIdx:0}}),console.log("gripsDown")}},!1)},activateDefaultMapping:function(){this.mapTrigger(79,"right"),this.mapTrigger(90,"left"),this.mapThumbButton(75,"right"),this.mapThumbButton(68,"left"),this.mapGrips(77,"right"),this.mapGrips(81,"left")}})}),define("DS/Devices/XRDevice",["UWA/Core","DS/Visualization/ThreeJS_DS","DS/Windows/Dialog","DS/WebappsUtils/WebappsUtils","DS/CoreEvents/Events"],function(t,e,n,i,o){"use strict";return t.Class.extend({init:function(t){this._session=t,this._isImmersive=!1,this._successSplashScreen=null;try{this._session.updateRenderState({depthNear:100,depthFar:1e5})}catch(t){console.log(t)}this._position=new e.Vector3(0,100,500),this._orientation=new e.Quaternion,this.width=0,this.height=0,this._pose=null},setViewer:function(t){this._viewer=t},setUpdateScenario:function(t){this._updateScenario=t},setContext:function(t){this._context=t},update:function(t,e,n){if(null!==this._session&&e){this._pose=e;var i=[0,0,0],o=[0,0,0,1];if(e.views&&2===e.views.length)for(var s of e.views)i[0]+=s.transform.position.x,i[1]+=s.transform.position.y,i[2]+=s.transform.position.z,o[0]=s.transform.orientation.x,o[1]=s.transform.orientation.y,o[2]=s.transform.orientation.z,o[3]=s.transform.orientation.w;i&&t&&!n?(this._position.x=500*i[0],this._position.y=500*i[1],this._position.z=500*i[2]):t||n?e.position&&e.orientation&&n&&(this._position.x=1e3*e.position[0],this._position.y=1e3*e.position[1],this._position.z=1e3*e.position[2],o[0]=e.orientation[0],o[1]=e.orientation[1],o[2]=e.orientation[2],o[3]=e.orientation[3]):(this._position.x=0,this._position.y=0,this._position.z=0),o&&(this._orientation.x=o[0],this._orientation.y=o[1],this._orientation.z=o[2],this._orientation.w=o[3])}},getPosition:function(){return(new e.Vector3).copy(this._position)},getOrientation:function(){return(new e.Quaternion).copy(this._orientation)},beginRender:function(t){var e=this;return navigator.xr.requestSession("immersive-vr",{requiredFeatures:["local-floor"],optionalFeatures:["bounded-floor"]}).then(function(t){e._session=t,e._isImmersive=!0;var s=e._isImmersive?"local-floor":"viewer";return t.requestReferenceSpace(s).then(t=>{e._refSpace=t;var s=document.createElement("div"),r=document.createElement("img"),a=i.getWebappsAssetUrl("Devices","PutHeadsetOnBeta.png");r.src=a,r.width=window.innerWidth/2.5,s.appendChild(r);var d=document.createElement("h1");d.textContent="Put your headset on",d.style="text-align:center;font-size:34px;color:#0F5486;",d.classList.add("wux-font-3dsregular");var u=document.createElement("h4");u.textContent='To display headset content, turn on the SteamVR option "Display VR View"',u.style="text-align:center;font-size:14px;color:#0F5486;",u.classList.add("wux-font-3dslight"),s.appendChild(d),s.appendChild(u),e._successSplashScreen=new n({modalFlag:!0,content:s}),o.publish({event:"/VR/onRenderBegun"})})},function(t){console.error(t),o.publish({event:"/VR/failedRenderBegun"}),e._isImmersive=!1;return e._session.requestReferenceSpace("viewer").then(t=>{e._refSpace=t})})},endRender:function(){var t=this;return this._session.end().then(function(){o.publish({event:"/VR/onRenderEnded"})},function(){o.publish({event:"/VR/failedRenderEnded"}),t._successSplashScreen&&t._successSplashScreen.close(),t._successSplashScreen=null})},setNear:function(t){this._isImmersive&&this._session.updateRenderState({depthNear:t})},setFar:function(t){this._isImmersive&&this._session.updateRenderState({depthFar:t})},setNearFar:function(t,e){this._isImmersive&&this._session.updateRenderState({depthNear:t,depthFar:e})},hasStandingMatrix:function(){return!1},getEyeParameters:function(t){return null}})}),define("DS/Devices/Controller",["UWA/Core","DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/CoreEvents/Events"],function(t,e,n,i){return t.Class.extend({init:function(t,i,o){this._position=new e.Vector3(0,0,0),this._orientation=new e.Quaternion(0,0,0,1),this._scale=new e.Vector3(1,1,1),this.index=t,this._actionCounter=0,this._gamepad=i;var s=this.getGamepad();this._isConnected=s.connected,this._hand=s.hand,this._buttonStateChange=[];for(var r=0;r<s.buttons;++r)this._buttonStateChange.push(!1);this._model=null,this._node=new n(this.getId()),this._node.exludeFromBounding(!0),this._behaviourList=[],this._actionsNotified={},direction=null},getGamepad:function(){if(!this._odt)return this._gamepad;var t=navigator.getGamepads();if(!(this.index<0||this.index>=t.length)){var e=t[this.index];return e||void 0}},findBehaviourIndex:function(t){for(var e=0;e<this._behaviourList.length;++e)if(this._behaviourList[e]===t)return e;return-1},unbindBehaviour:function(t){var e=this.findBehaviourIndex(t);-1!==e&&this._behaviourList.splice(e,1)},isConnected:function(){return this._isConnected},setConnectionState:function(t){this._isConnected=t},getId:function(){var t=this.getGamepad();if(t)return t.id},getMatrix:function(){return(new e.Matrix4).compose(this._position,this._orientation,this._scale)},getNode:function(){return this._node},getBehaviour:function(){return this._behaviour},update:function(t,e){t&&(this._gamepad=t);var n=this.getGamepad();if(n){var o=e||n.pose;o&&o.position?(this._position.x=1e3*o.position[0],this._position.y=1e3*o.position[1],this._position.z=1e3*o.position[2]):o&&o.transform&&(this._position.x=1e3*o.transform.position.x,this._position.y=1e3*o.transform.position.y,this._position.z=1e3*o.transform.position.z),o&&o.orientation?(this._orientation.x=o.orientation[0],this._orientation.y=o.orientation[1],this._orientation.z=o.orientation[2],this._orientation.w=o.orientation[3]):o&&o.transform&&(this._orientation.x=o.transform.orientation.x,this._orientation.y=o.transform.orientation.y,this._orientation.z=o.transform.orientation.z,this._orientation.w=o.transform.orientation.w),i.publish({event:"/VR/onControllerPoseUpdated"+this.index}),this.updateButtonState()}},_compareArray:function(t,e){if(t.length!=e.length)return!1;for(var n=0;n<t.length;++n)if(t[n]!=e[n])return!1;return!0},addControllerAction:function(t){var e=this,n=(this.getGamepad(),{eventListeners:{}});return t.id?n.id=t.id:(n.id="IVControllerAction"+this._actionCounter,this._actionCounter++),"pressed"!==t.type&&"touched"!==t.type&&"axis"!==t.type?n.type="none":n.type=t.type,n.controllerIndex=this.index,"pressed"===n.type?(this.notifyButtonUpdate({type:t.type,buttonIdx:t.buttonIdx,id:n.id}),n.buttonIdx=t.buttonIdx,t.onActivate&&(n.eventListeners.onPressedDown=i.subscribe({event:"/VR/onControllerPressedDown"+n.controllerIndex},function(e){e.buttonIdx===n.buttonIdx&&(n.activated=!0,t.onActivate())})),t.onDeactivate&&(n.eventListeners.onPressedUp=i.subscribe({event:"/VR/onControllerPressedUp"+n.controllerIndex},function(e){e.buttonIdx===n.buttonIdx&&(t.onDeactivate(n.controllerIndex),n.activated=!1)})),t.onFrameUpdate&&(n.eventListeners.whileActivated=i.subscribe({event:"/VR/onControllerPoseUpdated"+n.controllerIndex},function(){n.activated&&t.onFrameUpdate()}),t.onActivate||(n.eventListeners.onTouchedBegin=i.subscribe({event:"/VR/onControllerPressedDown"+n.controllerIndex},function(t){t.buttonIdx===n.buttonIdx&&(n.activated=!0)})),t.onDeactivate||(n.eventListeners.onTouchedEnd=i.subscribe({event:"/VR/onControllerPressedUp"+n.controllerIndex},function(t){t.buttonIdx===n.buttonIdx&&(n.activated=!1)})))):"touched"===n.type?(this.notifyButtonUpdate({type:t.type,buttonIdx:t.buttonIdx,id:n.id}),n.buttonIdx=t.buttonIdx,n.activated=!1,t.onActivate&&(n.eventListeners.onTouchedBegin=i.subscribe({event:"/VR/onControllerTouchedBegin"+n.controllerIndex},function(e){e.buttonIdx===n.buttonIdx&&(n.activated=!0,t.onActivate())})),t.onDeactivate&&(n.eventListeners.onTouchedEnd=i.subscribe({event:"/VR/onControllerTouchedEnd"+n.controllerIndex},function(e){e.buttonIdx===n.buttonIdx&&(n.activated=!1,t.onDeactivate())})),t.onFrameUpdate&&(n.eventListeners.whileActivated=i.subscribe({event:"/VR/onControllerPoseUpdated"+n.controllerIndex},function(){n.activated&&t.onFrameUpdate()}),t.onActivate||(n.eventListeners.onTouchedBegin=i.subscribe({event:"/VR/onControllerTouchedBegin"+n.controllerIndex},function(t){t.buttonIdx===n.buttonIdx&&(n.activated=!0)})),t.onDeactivate||(n.eventListeners.onTouchedEnd=i.subscribe({event:"/VR/onControllerTouchedEnd"+n.controllerIndex},function(t){t.buttonIdx===n.buttonIdx&&(n.activated=!1)})))):"axis"===n.type?t.axesIdx?(n.axesIdx=t.axesIdx,this.notifyButtonUpdate({type:t.type,axesIdx:t.axesIdx,id:n.id}),n.eventListeners.onAxesValuesUpdated=i.subscribe({event:"/VR/onAxesValuesUpdated"+n.controllerIndex},function(i){e._compareArray(i.axesIdx,n.axesIdx)&&t.onFrameUpdate(i.axesValues)})):t.triggerIdx&&(n.triggerIdx=t.triggerIdx,this.notifyButtonUpdate({type:t.type,triggerIdx:t.triggerIdx,id:n.id}),n.eventListeners.onAxesValuesUpdated=i.subscribe({event:"/VR/onAxesValuesUpdated"+n.controllerIndex},function(e){t.onFrameUpdate(e.triggerValue)})):"none"===n.type&&t.onFrameUpdate&&(n.eventListeners.onPoseUpdated=i.subscribe({event:"/VR/onControllerPoseUpdated"+n.controllerIndex},function(){t.onFrameUpdate()})),n},notifyButtonsUpdates:function(t){for(var e=[],n=0;n<t.length;++n){if(!t[n].id){var i="IVControllerAction"+this._actionCounter;this._actionCounter++,t[n].id=i}this.notifyButtonUpdate(t[n]),e.push(t[n].id)}return e},notifyButtonUpdate:function(t){var e=!1,n=this.getGamepad(),i={type:t.type};if("pressed"===t.type||"touched"===t.type){if(null!==t.buttonIdx){var o=n.buttons.length;if(t.buttonIdx<0||t.buttonIdx>=o)return void console.log("Button number "+t.buttonIdx+" doesn't exist");for(var s in this._actionsNotified){(a=this._actionsNotified[s]).type===t.type&&a.buttonIdx===t.buttonIdx&&(e=!0)}if(!e){i.buttonIdx=t.buttonIdx;var r=n.buttons[i.buttonIdx];"pressed"===t.type?i.activated=r.pressed:"touched"===t.type&&(i.activated=r.touched),this._actionsNotified[t.id]=i}}}else if("axis"===t.type)if(t.axesIdx&&t.axesIdx.length>0){for(var s in this._actionsNotified){(a=this._actionsNotified[s]).type===t.type&&this._compareArray(a.axesIdx,t.axesIdx)&&(e=!0)}e||(this._actionsNotified[t.id]={type:t.type,axesIdx:t.axesIdx})}else if(t.triggerIdx){for(var s in this._actionsNotified){var a;(a=this._actionsNotified[s]).type===t.type&&a.buttonIdx===t.buttonIdx&&(e=!0)}e||(this._actionsNotified[t.id]={type:t.type,triggerIdx:t.triggerIdx})}},removeNotification:function(t){delete this._actionsNotified[t]},removeNotifications:function(t){for(var e=0;e<t.length;++e)this.removeNotification(t[e])},removeControllerAction:function(t){for(var e in t.eventListeners)i.unsubscribe(t.eventListeners[e]);delete this._actionsNotified[t.id]},pulse:function(t,e){var n=this.getGamepad();"hapticActuators"in n&&n.hapticActuators.length>0&&n.hapticActuators[0].pulse(t,e)},updateButtonState:function(){var t=this.getGamepad();for(var e in this._actionsNotified){var n=this._actionsNotified[e];if("pressed"===n.type||"touched"===n.type){var o,s=t.buttons[n.buttonIdx];"pressed"===n.type?(o=s.pressed,n.activated!==o&&(n.activated=o,n.activated?i.publish({event:"/VR/onControllerPressedDown"+this.index,data:{buttonIdx:n.buttonIdx}}):i.publish({event:"/VR/onControllerPressedUp"+this.index,data:{buttonIdx:n.buttonIdx}}))):"touched"===n.type&&(o=s.touched,n.activated!==o&&(n.activated=o,n.activated?i.publish({event:"/VR/onControllerTouchedBegin"+this.index,data:{buttonIdx:n.buttonIdx}}):i.publish({event:"/VR/onControllerTouchedEnd"+this.index,data:{buttonIdx:n.buttonIdx}})))}else if("axis"===n.type)if(n.triggerIdx){var r=t.buttons[0].value;i.publish({event:"/VR/onAxesValuesUpdated"+this.index,data:{axesIdx:n.triggerIdx,triggerValue:r}})}else{for(var a=[],d=0;d<n.axesIdx.length;++d){var u=n.axesIdx[d];u>=0&&u<t.axes.length&&a.push(t.axes[u])}i.publish({event:"/VR/onAxesValuesUpdated"+this.index,data:{axesIdx:n.axesIdx,axesValues:a}})}}},getTouchPadPose:function(){return new e.Matrix4(1,0,0,0,0,.104528,.994522,6,0,-.994522,.104528,49,0,0,0,1)},getRightGripPose:function(){return new e.Matrix4(-.49757104789,0,1,19.2,-.86742322559,0,.86742322559,-17.2,0,-1,-.49757104789,88,0,0,0,1)},getLeftGripPose:function(){return new e.Matrix4(-.49757104789,0,1,-19.2,.86742322559,0,-.86742322559,-17.2,0,-1,-.49757104789,88,0,0,0,1)},getRightGripTooltipPose:function(){return new e.Matrix4(1,0,0,43.5,0,0,1,-17.2,0,-1,0,91,0,0,0,1)},getLeftGripTooltipPose:function(){return new e.Matrix4(1,0,0,0,0,0,1,-17.2,0,-1,0,91,0,0,0,1)},picking3d:function(t){var n=t.granularity||"prim",i=t.floorZ||t.viewer.offsetPlaneBackground.z||0,o=this._node.getMatrix().decompose(),s=t.userPoint||o[0];if(!s||!this._orientation)return{valid:!1};var r,a,d,u={};(r=t.userDirection||new e.Vector3(0,0,-1).applyQuaternion(o[1])).normalize(),null!==t.intersectFloor&&(0!==r.z&&(a=(i-s.z)/r.z),a&&a>0&&(d=function(t,n,i){var o=(new e.Vector3).copy(n);return o.multiplyScalar(i),o.add(t),{distance:i,point:o,valid:!0}}));var c,l=new e.Ray((new e.Vector3).copy(s),(new e.Vector3).copy(r)),h=t.viewer.castRay(l,t.viewer.getRootNode(),n);if(h.length>0)for(var p=function(t){var n=t.normal;return!!n&&new e.Vector3(0,0,1).dot(n)>=.7},f=0;f<h.length;f++)if(u=h[f],(c=u)&&!1!==c.object.getNode().intersectable){var v=p(u);return d&&a<u.distance?u=d(s,r,a):(u.valid=v,u)}return u=d?d(s,r,a):{valid:!1}}})}),define("DS/Devices/DeviceFactory",["UWA/Core","DS/Devices/XRDevice","DS/Devices/Controller","DS/Notifications/NotificationsManagerUXMessages","DS/Notifications/NotificationsManagerViewOnScreen","DS/Windows/Dialog","DS/WebappsUtils/WebappsUtils"],function(t,e,n,i,o,s,r){"use strict";return t.Class.singleton({createHMD:function(t){window.vrnotifs||(window.vrnotifs=i,o.setNotificationManager(window.vrnotifs));var n={level:"success",title:"HMD connected",sticky:!1},a={level:"warning",title:"HMD not found",message:"Be sure to have a compatible browser and device",sticky:!1},d=document.createElement("div");d.style="display:block;text-align:center;";var u=document.createElement("img"),c=r.getWebappsAssetUrl("Devices","HeadsetNotFound.png");u.src=c,u.width=window.innerWidth/2.5,d.appendChild(u);var l=document.createElement("h1");l.textContent="No VR setup detected",l.style="text-align:center;font-size:34px;color:#0F5486;",l.classList.add("wux-font-3dsregular");var h=document.createElement("a");return h.href="https://caniuse.com/?search=webxr",h.textContent="\nUse a supported browser and setup your VR hardware properly",h.style="text-align:center;font-size:14px;color:#1DA9FF;",h.classList.add("wux-font-3dslight"),d.appendChild(l),d.appendChild(h),window.vrnotifs.addNotif({level:"info",title:"Searching for HMD",message:"Searching if an HMD is connected",sticky:!1}),navigator.xr?navigator.xr.isSessionSupported("immersive-vr").then(function(i){return i||t||window.skipBlurForEmulator?navigator.xr.requestSession("inline").then(function(t){return window.vrnotifs.addNotif(n),new e(t)}):(window.vrnotifs.addNotif(a),new s({modalFlag:!0,content:d}),Promise.reject())}):(a.message="Be sure to use VR in a secure context (https)",window.vrnotifs.addNotif(a),new s({modalFlag:!0,content:d}),Promise.reject())},createController:function(t,e){if(t)return new n(e,t)}})});