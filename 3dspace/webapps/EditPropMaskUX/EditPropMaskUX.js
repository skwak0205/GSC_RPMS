define("DS/EditPropMaskUX/scripts/model/MaskModel",["UWA/Class/Model","DS/Tree/TreeNodeModel"],function(e,t,i){return e.extend({defaults:function(){return{id:"",type:"",title:"",name:""}},update:function(){},toJson:function(){return this.toJSON()},getModelAsTreeNodeModel:function(){return new t({label:this.get("title")+" ("+this.get("name")+")",value:this.get("name"),grid:{type:this.get("type"),id:this.get("id"),name:this.get("name"),label:this.get("title")+"["+this.get("name")+"]",value:this.get("name")}})}})}),define("DS/EditPropMaskUX/scripts/views/MaskTypeView",["UWA/Core","UWA/Class/View","DS/Controls/Label","DS/Controls/Button","DS/Controls/TooltipModel","DS/Handlebars/Handlebars4","DS/EditPropBaseUX/scripts/EditPropData","DS/EditPropBaseUX/scripts/EditPropUtility","text!DS/EditPropMaskUX/scripts/views/MaskTypeViewTemplate.html","i18n!DS/EditPropMaskUX/assets/nls/EditPropMaskUX","css!DS/EditPropMaskUX/EditPropMaskUX"],function(e,t,i,s,n,o,a,l,r,c){"use strict";return t.extend({tagName:"div",className:"selected-mask-type-view-container",init:function(e){this._parent(e);this.touchMode=this.options.touchMode},addMaskToMaskTypeView:function(e){this.currentMask=e},updateMaskTypeView:function(e){null!=e.isBackup&&(!0===e.isBackup?this.backupButton.disabled=!1:this.backupButton.disabled=!0),void 0===e.isOOTBReplaced?(this.backupButton.emphasize="primary",this.backupButton.tooltipInfos=new n({shortHelp:c.EP_BackupTooltip})):!0===e.isOOTBReplaced&&(this.backupButton.emphasize="medium-attention",this.backupButton.tooltipInfos=new n({shortHelp:c.EP_UpgradeTooltip}))},removeExistingMaskFromMaskTypeView:function(){this.currentMask=null},loadMaskSelectionView:function(e){a.maskActionEvents.publish({event:"loadMaskSelectionView",data:null})},downloadOriginMask:function(e){a.maskActionEvents.publish({event:"downloadOriginMask",data:this.currentMask})},downloadMask:function(e){a.maskActionEvents.publish({event:"downloadMask",data:this.currentMask})},_uploadFile:function(e,t){var i=this,s=new FileReader;s.onload=function(e){try{i.currentMask.fileContent=JSON.parse(e.target.result),a.maskActionEvents.publish({event:"uploadMask",data:i.currentMask})}catch(e){l.showMessageOnUI("error",c.EP_MaskUXTitle,"",c.EP_JSonParseKO,!1)}},s.readAsText(t)},_uploadFileUI:function(e,t){for(var i,s=t.target.files,n=null,o=0;i=s[o];o++){if(i.name.match(".*json")){n=i;break}l.showMessageOnUI("error",c.EP_MaskUXTitle,"",c.EP_ChooseJson,!1)}n&&this._uploadFile(e,n)},downloadBackup:function(e){a.maskActionEvents.publish({event:"downloadBackup",data:this.currentMask})},render:function(t){var i=this;return this.maskTypeViewContainerTemplate=o.compile(r),this.container.setHTML(this.maskTypeViewContainerTemplate()),this.downloadButton=new s({label:c.EP_Download,emphasize:"primary",icon:{iconName:"download",fontIconFamily:WUXManagedFontIcons.Font3DS,fontIconSize:"1x"},touchMode:this.touchMode}),this.downloadButton.addEventListener("click",function(e){i.downloadMask(e)}),this.downloadButton.tooltipInfos=new n({shortHelp:c.EP_DownloadTooltip}),this.downloadButton.inject(this.container.getElement(".download")),this.inputElement=e.createElement("input",{type:"file",class:"inputSettings",events:{change:function(e){i._uploadFileUI(i.currentMask.name,e),this.value=null}}}).inject(this.container.getElement(".input")),this.inputElement.hide(),this.uploadButton=new s({label:c.EP_Upload,emphasize:"primary",icon:{iconName:"upload",fontIconFamily:WUXManagedFontIcons.Font3DS,fontIconSize:"1x"},touchMode:this.touchMode}),this.uploadButton.addEventListener("click",function(){i.inputElement.click()}),this.uploadButton.tooltipInfos=new n({shortHelp:c.EP_UploadTooltip}),this.uploadButton.inject(this.container.getElement(".upload")),this.originalButton=new s({label:c.EP_Original,emphasize:"primary",icon:{iconName:"export",fontIconFamily:WUXManagedFontIcons.Font3DS,fontIconSize:"1x"},touchMode:this.touchMode}),this.originalButton.addEventListener("click",function(e){i.downloadOriginMask(e)}),this.originalButton.tooltipInfos=new n({shortHelp:c.EP_OriginTooltip}),this.originalButton.inject(this.container.getElement(".original")),this.backupButton=new s({label:c.EP_Backup,emphasize:"primary",icon:{iconName:"download",fontIconFamily:WUXManagedFontIcons.Font3DS,fontIconSize:"1x"},touchMode:this.touchMode}),this.backupButton.addEventListener("click",function(){i.backupButton.disabled||i.downloadBackup(event)}),this.backupButton.tooltipInfos=new n({shortHelp:c.EP_BackupTooltip}),this.backupButton.inject(this.container.getElement(".backup")),this.container}})}),define("DS/EditPropMaskUX/scripts/views/MaskSelectionView",["UWA/Core","UWA/Class/View","DS/Controls/Label","DS/Controls/Button","DS/Controls/TooltipModel","DS/WUXAutoComplete/AutoComplete","DS/Handlebars/Handlebars4","DS/EditPropBaseUX/scripts/EditPropData","DS/EditPropBaseUX/scripts/EditPropNameOrLabelFilter","text!DS/EditPropMaskUX/scripts/views/MaskSelectionViewTemplate.html","i18n!DS/EditPropMaskUX/assets/nls/EditPropMaskUX","css!DS/EditPropMaskUX/EditPropMaskUX"],function(e,t,i,s,n,o,a,l,r,c,d){"use strict";return t.extend({tagName:"div",className:"mask-selection-view-container",init:function(e){this._parent(e);this.typesTreeDocument=null,this.touchMode=this.options.touchMode},addTypesToMaskSelectorView:function(e){this.typesTreeDocument=e.getCollectionAsTreeDocument(),this.typesAutoComplete.elementsTree=this.typesTreeDocument,this.typesTreeDocument.getFilterManager().registerFilter("EditPropNameOrLabelID",r),this.typesTreeDocument.expandAll()},removeExistingTypesFromMaskSelectionView:function(){this.typesTreeDocument=null},loadMaskTypeView:function(e){if(this.typesAutoComplete.selectedItems&&"root"!=this.typesAutoComplete.selectedItems.options.grid.type){var t=null;this.typesAutoComplete.selectedItems.options.grid.id&&(t={id:this.typesAutoComplete.selectedItems.options.grid.id,type:this.typesAutoComplete.selectedItems.options.grid.type,title:this.typesAutoComplete.selectedItems.options.label,name:this.typesAutoComplete.selectedItems.options.grid.name}),l.maskActionEvents.publish({event:"loadMaskTypeView",data:t})}},render:function(e){var t=this;return this.maskSelectionViewContainerTemplate=a.compile(c),this.container.setHTML(this.maskSelectionViewContainerTemplate()),this.typesAutoComplete=new o({placeholder:d.EP_AutoCompleteLabel,elementsTree:this.typesTreeDocument,multiSearchMode:!1,filterCB:function(e){t.typesTreeDocument.setFilterModel({label:{filterId:"EditPropNameOrLabelID",filterModel:{ip_text:e}}})},touchMode:this.touchMode}),this.typesAutoComplete.addEventListener("change",function(e){t.loadMaskTypeView(e)}),this.typesAutoComplete.inject(this.container.getElement(".mask_autocomplete")),this.container}})}),define("DS/EditPropMaskUX/scripts/views/MaskMainView",["UWA/Class/View","DS/EditPropMaskUX/scripts/views/MaskSelectionView","DS/EditPropMaskUX/scripts/views/MaskTypeView","css!DS/EditPropMaskUX/EditPropMaskUX"],function(e,t,i){"use strict";return e.extend({tagName:"div",className:"edit-prop-mask-main-view-container",init:function(e){this._parent(e),this.maskSelectionView=new t({touchMode:this.options.touchMode}),this.maskTypeView=new i({touchMode:this.options.touchMode})},render:function(){this.container&&this.container.empty(),this.container.appendChild(this.maskSelectionView.render()),this.maskSelectionView.hide(),this.container.appendChild(UWA.createElement("div",{class:"y-filler"})),this.container.appendChild(this.maskTypeView.render()),this.maskTypeView.hide(),this.container.inject(this.options.maskUXMainContainer)},loadMaskSelectionView:function(){this.maskTypeView.hide(),this.maskSelectionView.show()},loadMaskTypeView:function(e,t){this.maskTypeView.show(),e&&(this.maskTypeView.removeExistingMaskFromMaskTypeView(),this.maskTypeView.addMaskToMaskTypeView(e))},updateMaskSelectionView:function(e){e&&(this.maskSelectionView.removeExistingTypesFromMaskSelectionView(),this.maskSelectionView.addTypesToMaskSelectorView(e))},updateMaskTypeView:function(e){e&&this.maskTypeView.updateMaskTypeView(e)}})}),define("DS/EditPropMaskUX/scripts/model/MaskCollection",["UWA/Class/Collection","DS/Tree/TreeDocument","DS/Tree/TreeNodeModel","DS/EditPropMaskUX/scripts/model/MaskModel"],function(e,t,i,s){return e.extend({model:s,_isReady:!1,init:function(e){this._parent(e)},isReady:function(){return this._isReady},getAllTypesTitleArray:function(){var e=[];return this.forEach(function(t){e.push(t.get("title"))}),e},getCollectionAsTreeDocument:function(){var e=new t;e.prepareUpdate();var s=new i({label:"Types",value:"bus",grid:{type:"root"}}),n=new i({label:"Relationships",value:"rel",grid:{type:"root"}});s.addChild(n);var o=new i({label:"Extensions",value:"itf",grid:{type:"root"}});return this.forEach(function(e){"bus"==e.get("type")?s.addChild(e.getModelAsTreeNodeModel()):"rel"==e.get("type")?n.addChild(e.getModelAsTreeNodeModel()):"itf"==e.get("type")&&o.addChild(e.getModelAsTreeNodeModel())}),e.addRoot(s),e.addRoot(o),e.pushUpdate(),e},build:function(e){var t=this;e.types&&Array.isArray(e.types)&&e.types.forEach(function(e){var i=new s;i.set("id",e.id),i.set("type",e.type),i.set("title",e.title),i.set("name",e.name),t.add(i)})},update:function(e){this._isReady=!0}})}),define("DS/EditPropMaskUX/scripts/controller/MaskController",["UWA/Core","DS/UIKIT/Mask","DS/EditPropMaskUX/scripts/views/MaskMainView","DS/EditPropMaskUX/scripts/model/MaskCollection","DS/EditPropBaseUX/scripts/EditPropData","DS/EditPropBaseUX/scripts/EditPropUtility","DS/EditPropBaseUX/scripts/EditPropMaskServices","DS/WidgetServices/WidgetServices","DS/CoreEvents/ModelEvents","i18n!DS/EditPropMaskUX/assets/nls/EditPropMaskUX"],function(e,t,i,s,n,o,a,l,r,c){"use strict";return e.Class.extend({init:function(e){this._parent(e),this.options=e,this.maskMainView=new i(e),n.clear(),n.maskActionEvents=new r,this.subscribeMaskActionEvents()},initMaskServices:function(e){var i=this;i.tenantID=e,i.loadMaskUXMainView(),t.mask(this.options.maskUXMainContainer),a.getAllMaskTypes({tenant:e,onComplete:function(e){i.types_collection=new s,i.types_collection.build(e),i.types_collection.update(),i.updateMaskUXMainView(),t.unmask(i.options.maskUXMainContainer)}})},loadMaskUXMainView:function(){this.maskMainView.render(),n.maskActionEvents.publish({event:"loadMaskSelectionView"})},updateMaskUXMainView:function(){n.maskActionEvents.publish({event:"updateMaskSelectionView"})},subscribeMaskActionEvents:function(){var e=this;n.maskActionEvents.subscribe({event:"loadMaskSelectionView"},function(){e.maskMainView.loadMaskSelectionView()}),n.maskActionEvents.subscribe({event:"updateMaskSelectionView"},function(){e.maskMainView.updateMaskSelectionView(e.types_collection)}),n.maskActionEvents.subscribe({event:"loadMaskTypeView"},function(t){a.isBackupAndOOTBReplaced({type:t.type,name:t.name,onComplete:function(i){1==i.success?(e.maskMainView.loadMaskTypeView(t),e.maskMainView.updateMaskTypeView({isBackup:i.isBackup,isOOTBReplaced:i.isOOTBReplaced})):o.showMessageOnUI("error",c.EP_MaskUXTitle,"",c.EP_Server_Error,!1)}})}),n.maskActionEvents.subscribe({event:"downloadOriginMask"},function(e){a.downloadOriginMask({type:e.type,name:e.name,onComplete:function(t){1==t.success?l.download(e.name.includes(".json")?e.name.substring(0,e.name.length-5):e.name,t.originMask,"json",!0):o.showMessageOnUI("error",c.EP_MaskUXTitle,"",t.message,!1)}})}),n.maskActionEvents.subscribe({event:"downloadMask"},function(t){a.downloadMask({type:t.type,name:t.name,onComplete:function(i){1==i.success?(i.isOOTBReplaced&&!0===i.isOOTBReplaced&&e.maskMainView.updateMaskTypeView({isBackup:!0,isOOTBReplaced:!0}),l.download(t.name.includes(".json")?t.name.substring(0,t.name.length-5):t.name,i.mask,"json",!0)):o.showMessageOnUI("error",c.EP_MaskUXTitle,"",i.message?i.message:c.EP_MaskNotFound,!1)}})}),n.maskActionEvents.subscribe({event:"uploadMask"},function(t){a.uploadMask({type:t.type,name:t.name,fileContent:t.fileContent,onComplete:function(t){1==t.success?(o.showMessageOnUI("info",c.EP_MaskUXTitle,"",c.EP_UploadOK,!1),e.maskMainView.updateMaskTypeView({isBackup:t.isBackup})):o.showMessageOnUI("error",c.EP_MaskUXTitle,"",t.message,!1)}})}),n.maskActionEvents.subscribe({event:"downloadBackup"},function(e){a.downloadBackup({type:e.type,name:e.name,onComplete:function(t){1==t.success?l.download(e.name.includes(".json")?e.name.substring(0,e.name.length-5):e.name,t.mask,"json",!0):o.showMessageOnUI("error",c.EP_MaskUXTitle,"",t.message,!1)}})})}})});