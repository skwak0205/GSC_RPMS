function inherit(t){"use strict";if(null===t)throw new TypeError;if(Object.create)return Object.create(t);var e=typeof t;if("object"!==e&&"function"!==e)throw new TypeError;function n(){}return n.prototype=t,new n}function extend(t,e){"use strict";for(var n in e)void 0!==n&&(t[n]=e[n]);return t}function defineSubclass(t,e,n,o){"use strict";return e.prototype=inherit(t.prototype),e.prototype.constructor=e,n&&extend(e.prototype,n),o&&extend(e,o),e}function enumeration(t){"use strict";var e=function(){throw"Can't Instantiate Enumerations"},n=e.prototype={constructor:e,toString:function(){return this.name},valueOf:function(){return this.value},toJSON:function(){return this.name}};for(var o in e.values=[],t)if(void 0!==o){var r=inherit(n);r.name=o,r.value=t[o],e[o]=r,e.values.push(r)}return e.foreach=function(t,e){for(var n=0;n<this.values.length;n++)t.call(e,this.values[n])},e}define("DS/XCADInputDocuments/XCADFaceData",[],function(){"use strict";function t(){this.vertices=[],this.normals=[],this.singleTrianglesIndices=[],this.stripTrianglesIndices=[],this.nbVertexPerStripTriangle=[],this.fanTrianglesIndices=[],this.nbVertexPerFanTriangle=[]}return t.prototype={getFanTrianglesVertexPosition:function(t){return t},getNormalsNumber:function(){return void 0===this.normals?0:this.normals.length/3},getSingleTrianglesNumber:function(){return void 0===this.singleTrianglesIndices?0:this.singleTrianglesIndices.length/3},getStripTrianglesVertexPosition:function(t){return t},getVerticesNumber:function(){return void 0===this.vertices?0:this.vertices.length/3},setNormalAt:function(t,e,n,o){var r=3*t;this.normals[r++]=e,this.normals[r++]=n,this.normals[r]=o}},t}),define("DS/XCADInputDocuments/XCADProductInstance",[],function(){"use strict";function t(){throw"Error: cannot instantiate abstract class"}return t.prototype={getGeometricProperties:function(){throw"Error: not implemented method"},getInstanceAttributes:function(){throw"Error: not implemented method"},getReferenceProduct:function(){throw"Error: not implemented method"},getUID:function(){throw"Error: not implemented method"},getTransformation:function(){throw"Error: not implemented method"}},t}),define("DS/XCADInputDocuments/XCADEdgeData",[],function(){"use strict";function t(){this.vertices=[]}return t.prototype={getVerticesNumber:function(){return void 0===this.vertices?0:this.vertices.length/3}},t}),Object.defineProperty(Object.prototype,"extend",{writable:!0,enumerable:!1,configurable:!0,value:function(t){"use strict";for(var e=Object.getOwnPropertyNames(t),n=0;n<e.length;n++)if(!(e[n]in this)){var o=Object.getOwnPropertyDescriptor(t,e[n]);Object.defineProperty(this,e[n],o)}}}),Function.prototype.extend=function(t,e,n){"use strict";return defineSubclass(this,t,e,n)},define("DS/XCADInputDocuments/XCADInputDocument",[],function(){"use strict";function t(){throw"Error: cannot instantiate abstract class"}return t.prototype={close:function(){throw"Error: not implemented method"},getGeomRep:function(t){throw"Error: not implemented method"},getInstanceList:function(t){throw"Error: not implemented method"},getReferencedFiles:function(){throw"Error: not implemented method"},getReferenceName:function(t){throw"Error: not implemented method"},getRepresentation:function(t){throw"Error: not implemented method"},getRepresentationType:function(t){throw"Error: not implemented method"},getTransformation:function(t){throw"Error: not implemented method"},getRootProducts:function(){throw"Error: not implemented method"},initialize:function(t){throw"Error: not implemented method"}},t}),define("DS/XCADInputDocuments/XCADRepresentation",[],function(){"use strict";function t(){throw"Error: cannot instantiate abstract class"}return t.XCAD_BOUNDARY_REPRESENTATION="BoundaryRepresentation",t.XCAD_PRODUCT_REPRESENTATION="ProductStructureRepresentation",t.XCAD_TESSELLATED_REPRESENTATION="TessellatedRepresentation",t.XCAD_TESSELLATED_ANNOTATION_REPRESENTATION="TessellatedAnnotationRepresentation",t.prototype={getAssociatedDocument:function(){return this._associatedDocument},getName:function(){return this._name},getRepresentationType:function(){return this._representationType}},t}),define("DS/XCADInputDocuments/XCADTessellatedRepresentation",["DS/XCADInputDocuments/XCADInputDocument","DS/XCADInputDocuments/XCADRepresentation"],function(t,e){"use strict";function n(t,e,n){throw"Error: cannot instantiate abstract class"}var n;return n.KindOfNode=enumeration({NOD_ContainerNode:1,NOD_SolidNode:2,NOD_SurfacicNode:3,NOD_CustomNode:4,NOD_CoordinateSystem:5,NOD_GP:6,NOD_Unknown:7}),n.KindOfGP=enumeration({GP_Face:1,GP_Plane:2,GP_Cylinder:3,GP_Cone:4,GP_Sphere:5,GP_Edge:6,GP_Line:7,GP_Circle:8,GP_Point:9,GP_Grid:10,GP_Unknown:11}),n=e.extend(n,{getChild:function(t,e){throw"Error: not implemented method"},getChildren:function(t){throw"Error: not implemented method"},getChildCount:function(t){throw"Error: not implemented method"},getCircleData:function(t){throw"Error: not implemented method"},getConeData:function(t){throw"Error: not implemented method"},getCoordinateSystem:function(t){throw"Error: not implemented method"},getCylinderData:function(t){throw"Error: not implemented method"},getEdgeData:function(t){throw"Error: not implemented method"},getFaceData:function(t){throw"Error: not implemented method"},getGPType:function(t){throw"Error: not implemented method"},getNodeBoundingSphere:function(t){throw"Error: not implemented method"},getNodeColor:function(t){throw"Error: not implemented method"},getNodeOrientationMatrix:function(t){throw"Error: not implemented method"},getNodeType:function(t){throw"Error: not implemented method"},getNodeUID:function(t){throw"Error: not implemented method"},getPlaneData:function(t){throw"Error: not implemented method"},getPointData:function(t){throw"Error: not implemented method"},getPolyLineData:function(t){throw"Error: not implemented method"},getRootNode:function(t){throw"Error: not implemented method"},getRootNodesCount:function(){throw"Error: not implemented method"},getSAG:function(t){throw"Error: not implemented method"},getSphereData:function(t){throw"Error: not implemented method"},isIndexed:function(){return"Error: not implemented method"}})}),define("DS/XCADInputDocuments/XCADProduct",["DS/XCADInputDocuments/XCADInputDocument"],function(){"use strict";function t(t){throw"Error: cannot instantiate abstract class"}return t.SourceTypes=enumeration({Made:1,Bought:2,Unknown:3}),t.prototype={getDocument:function(){throw"Error: not implemented method"},getFilePath:function(){throw"Error: not implemented method"},getGeometricProperties:function(){throw"Error: not implemented method"},getInstanceList:function(){throw"Error: not implemented method"},getProductAttributes:function(){throw"Error: not implemented method"},getUID:function(){throw"Error: not implemented method"}},t}),define("DS/XCADInputDocuments/XCADProductRepresentation",["DS/XCADInputDocuments/XCADRepresentation"],function(t){"use strict";return t.extend(function(){throw"Error: cannot instantiate abstract class"},{getRootProducts:function(){return this._rootProducts}})});