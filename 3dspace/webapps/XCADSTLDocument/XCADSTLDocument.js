define("DS/XCADSTLDocument/STLTessellatedRepresentation",["DS/XCADInputDocuments/XCADTessellatedRepresentation","DS/XCADInputDocuments/XCADRepresentation","DS/XCADInputDocuments/XCADFaceData"],function(e,t,n){"use strict";var r={TESSELLATED_SOLID:e.KindOfNode.NOD_SolidNode,TRIANGULATED_FACE:e.KindOfNode.NOD_GP},s={TRIANGULATED_FACE:e.KindOfGP.GP_Face};return e.extend(function(e,n){this._associatedDocument=e,this._representationType=t.XCAD_TESSELLATED_REPRESENTATION,this._stlRepresentationIndex=n,this._rootNodes=[],this._rootNodes.push("root0")},{getChild:function(e,t){return"child0"},getChildren:function(e){var t=[];return t.push("child0"),t},getChildCount:function(e){return 1},getCircleData:function(e){throw"Error: not implemented method"},getConeData:function(e){throw"Error: not implemented method"},getCoordinateSystem:function(e){throw"Error: not implemented method"},getCylinderData:function(e){throw"Error: not implemented method"},getEdgeData:function(e){throw"Error: not implemented method"},getFaceData:function(e){var t=new n;return t.vertices=this._associatedDocument.vertices,t.normals=this._associatedDocument.normals,t},getGPType:function(e){return s.TRIANGULATED_FACE},getNodeBoundingSphere:function(e){throw"Error: not implemented method"},getNodeColor:function(e){return[.825,.825,1]},getNodeOrientationMatrix:function(e){throw"Error: not implemented method"},getNodeType:function(e){return"root0"===e?r.TESSELLATED_SOLID:r.TRIANGULATED_FACE},getNodeUID:function(e){throw"Error: not implemented method"},getPlaneData:function(e){throw"Error: not implemented method"},getPointData:function(e){throw"Error: not implemented method"},getPolyLineData:function(e){throw"Error: not implemented method"},getRootNode:function(e){return this._rootNodes[e]},getRootNodesCount:function(){return this._rootNodes.length},getSAG:function(e){throw"Error: not implemented method"},getSphereData:function(e){throw"Error: not implemented method"},isIndexed:function(){return!1}})}),define("DS/XCADSTLDocument/STLInputDocument",["DS/XCADInputDocuments/XCADInputDocument","DS/XCADInputDocuments/XCADRepresentation","DS/XCADSTLDocument/STLTessellatedRepresentation"],function(e,t,n){"use strict";t.XCAD_TESSELLATED_REPRESENTATION;return e.extend(function(){this.vertices=[],this.normals=[],this.singleTrianglesIndices=[],this.percentBetweenEachProgressCB=20},{zipped:!1,requestResponseType:"arraybuffer",close:function(){this.vertices=null,this.normals=null,this.singleTrianglesIndices=null},getRepresentation:function(e){var r;return e===t.XCAD_TESSELLATED_REPRESENTATION&&(r=new n(this,"ascii")),r},initialize:function(e){if(""!==e){var t=(new Date).getTime(),n=this._ensureArrayBuffer(e),r=((new Date).getTime(),(new Date).getTime());if(this._isStlBinary(n)){(new Date).getTime()-r;var s=(new Date).getTime();this._parseBinary(n),(new Date).getTime()-s}else{(new Date).getTime()-r;var i=(new Date).getTime(),o=this._ensureString(e);(new Date).getTime()-i;var a=(new Date).getTime();this._parseASCII(o),(new Date).getTime()-a}}},_isStlBinary:function(e){new DataView(e);for(var t=e.slice(0,123),n=new Uint8Array(t),r="",s=0;s<n.length;s++)r+=String.fromCharCode(n[s]);var i=r.match(/solid/i),o=r.match(/facet/i);return!i||-1===i||!o||-1===o},_ensureString:function(e){if("string"!=typeof e){new Map,new WeakMap;var t=e.byteLength;if(t<65536)return String.fromCharCode.apply(null,new Uint8Array(e));for(var n=0,r="";n<t;)r+=String.fromCharCode.apply(null,new Uint8Array(e.slice(n,n+65536))),n+=65536;return r}return e},_ensureArrayBuffer:function(e){if("string"==typeof e){for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=255&e.charCodeAt(n);return t.buffer||t}return e},_parseASCII:function(e){if(""!==e){var t=e.split("endfacet").length-1;console.log("STLReader stl file content : ASCII ("+t+" faces)");Math.round(t/(100/this.percentBetweenEachProgressCB));var n=/vertex\s+([^\s]+)\s+([^\s]+)\s+([^\s]+)/i,r=/facet\s+normal\s+([^\s]+)\s+([^\s]+)\s+([^\s]+)/i,s=e.split("\n");e="";for(var i=[],o=0,a=0,h=0;h<s.length;h++){var l,u=null;if(l=s[h].trim(),null!==(u=n.exec(l))){var c=parseFloat(u[1].replace(",",".")),p=parseFloat(u[2].replace(",",".")),m=parseFloat(u[3].replace(",","."));1===a&&(i.push(c),i.push(p),i.push(m),3===++o&&(this._ComputeNormal(i),o=0,a=0,i=null,i=[])),this.vertices.push(parseFloat(u[1].replace(",","."))),this.vertices.push(parseFloat(u[2].replace(",","."))),this.vertices.push(parseFloat(u[3].replace(",",".")))}else if(null!==(u=r.exec(l))){var d=parseFloat(u[1].replace(",",".")),g=parseFloat(u[2].replace(",",".")),f=parseFloat(u[3].replace(",","."));if(0===d&&0===g&&0===f&&(a=1),0===a)for(var D=0;D<3;D++)this.normals.push(d),this.normals.push(g),this.normals.push(f)}}s.length=0,s=null}},_parseBinary:function(e){var t=new DataView(e);e=null;var n=t.getUint32(80,!1),r=t.getUint32(80,!0),s=t.byteLength;s=.02*(s-84),r>0&&n<0?this._ReadLittleEndian(t,r):n>0&&r<0?nbSwat>s?this._ReadBigEndian(t,s):this._ReadBigEndian(t,n):r<=s&&s<n?this._ReadLittleEndian(t,r):n<=s&&s<=r?this._ReadBigEndian(t,n):r<=s&&s<=n?n<r?this._ReadLittleEndian(t,r):this._ReadBigEndian(t,n):s<r&&s<n?r<n?this._ReadLittleEndian(t,s):this._ReadBigEndian(t,s):console.log("Error !!!!!!!!")},_ReadLittleEndian:function(e,t){console.log("STLReader stl file content : BINARY ("+t+" faces)");t=Math.round(t);for(var n=Math.round(t/(100/this.percentBetweenEachProgressCB)),r=0+n,s=0;s<t;s++){var i=84+50*s,o=e.getFloat32(i,!0),a=e.getFloat32(i+4,!0),h=e.getFloat32(i+8,!0),l=0,u=[];0===o&&0===a&&0===h&&(l=1);for(var c=1;c<=3;c++){var p=i+12*c,m=e.getFloat32(p,!0),d=e.getFloat32(p+4,!0),g=e.getFloat32(p+8,!0);this.vertices.push(m),this.vertices.push(d),this.vertices.push(g),0===l?(this.normals.push(o),this.normals.push(a),this.normals.push(h)):(u.push(m),u.push(d),u.push(g)),3,4}1===l&&(this._ComputeNormal(u),l=0,u=null),this.normals.length/9===r&&(r+=n)}},_ReadBigEndian:function(e,t){console.log("STLReader stl file content : BINARY ("+t+" faces)");t=Math.round(t);for(var n=Math.round(t/(100/this.percentBetweenEachProgressCB)),r=0+n,s=0;s<t;s++){var i=84+50*s,o=e.getFloat32(i,!1),a=e.getFloat32(i+4,!1),h=e.getFloat32(i+8,!1),l=0,u=[];0===o&&0===a&&0===h&&(l=1);for(var c=1;c<=3;c++){var p=i+12*c;this.vertices.push(e.getFloat32(p,!1)),this.vertices.push(e.getFloat32(p+4,!1)),this.vertices.push(e.getFloat32(p+8,!1)),0===l?(this.normals.push(o),this.normals.push(a),this.normals.push(h)):(u.push(e.getFloat32(p,!1)),u.push(e.getFloat32(p+4,!1)),u.push(e.getFloat32(p+8,!1))),3,4}1===l&&(this._ComputeNormal(u),l=0,u=null),this.normals.length/9===r&&(r+=n)}},_ComputeNormal:function(e){var t=(new Date).getTime(),n=[],r=[];n[0]=e[3]-e[0],n[1]=e[4]-e[1],n[2]=e[5]-e[2],r[0]=e[6]-e[0],r[1]=e[7]-e[1],r[2]=e[8]-e[2];var s=n[1]*r[2]-n[2]*r[1],i=n[2]*r[0]-n[0]*r[2],o=n[0]*r[1]-n[1]*r[0],a=s*s+i*i+o*o,h=0;0!==a&&(h=1/Math.sqrt(a)),s*=h,i*=h,o*=h;for(var l=0;l<3;l++)this.normals.push(s),this.normals.push(i),this.normals.push(o);return n=null,r=null,(new Date).getTime()-t},_IsComputeNormal:function(e){var t=[],n=[];t[0]=e[3]-e[0],t[1]=e[4]-e[1],t[2]=e[5]-e[2],n[0]=e[6]-e[0],n[1]=e[7]-e[1],n[2]=e[8]-e[2];var r=t[1]*n[2]-t[2]*n[1],s=t[2]*n[0]-t[0]*n[2],i=t[0]*n[1]-t[1]*n[0],o=r*r+s*s+i*i;if(o)return!1;var a=1/Math.sqrt(o);if(a)return!1;r*=a,s*=a,i*=a;for(var h=0;h<3;h++)this.normals.push(r),this.normals.push(s),this.normals.push(i);return t=null,n=null,!0},_MergeVertices:function(){var e,t,n,r,s,i=(new Date).getTime(),o={},a=[],h=[],l=[],u=Math.pow(10,4),c=this.vertices.length/3;for(s=0,g=0;s<c;s++,g+=3)e=this.vertices[g],t=this.vertices[g+1],n=this.vertices[g+2],void 0===o[r=Math.round(e*u)+"_"+Math.round(t*u)+"_"+Math.round(n*u)]?(o[r]=s,a.push(this.vertices[g]),a.push(this.vertices[g+1]),a.push(this.vertices[g+2]),l.push(this.normals[g]),l.push(this.normals[g+1]),l.push(this.normals[g+2]),h[s]=a.length/3-1):(h[s]=h[o[r]],l[3*h[s]]+=this.normals[g],l[3*h[s]+1]+=this.normals[g+1],l[3*h[s]+2]+=this.normals[g+2]);!function(e){for(g=0;g<e.length;g+=3){var t=e[g]*e[g]+e[g+1]*e[g+1]+e[g+2]*e[g+2];if(0!==t){var n=1/Math.sqrt(t);0!==n&&(e[g]*=n,e[g+1]*=n,e[g+2]*=n)}}}(l);var p=this.vertices.length-a.length,m=[],d=[];for(s=0;s<h.length;s++){var g=3*h[s];m.push(a[g]),m.push(a[g+1]),m.push(a[g+2]),d.push(l[g]),d.push(l[g+1]),d.push(l[g+2])}this.vertices=m,this.normals=d;(new Date).getTime();return p}})});