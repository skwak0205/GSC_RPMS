define("DS/EPSSchematicsCoreLibrary/EPSSchematicsCoreLibrary_ja",{});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSAddBlockDoc",{version:"1.0.0",summary:"複数の入力データで追加操作を実行します。",description:"このブロックは動的であるため、入力データ ポート数はブロック構成ダイアログで変更できます。<br>データ ポートの値タイプは、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype> のいずれかにでき、ブロック構成ダイアログで変更できます。",dataPorts:{Value1:"演算の最初のオペランド。",Value2:"演算の 2 番目のオペランド。",Result:"入力データ (選択したデータ ポートの値タイプにより、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype>) で実行された演算の結果。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayConcatBlockDoc",{version:"1.0.0",summary:"指定された配列を新しい配列に連結します。",description:"このブロックは動的なため、入力データの配列タイプとポート数を、ブロック構成ダイアログを使用して変更できます。",dataPorts:{Array1:"連結する最初の配列。",Array2:"連結する 2 番目の配列。",NewArray:"新しい連結された配列。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayGetBlockDoc",{version:"1.0.0",summary:"指定されたインデックスで指定された配列から値を取得します。",description:"このブロックは動的なため、入力データの配列タイプはブロック構成ダイアログを使用して変更できます。",dataPorts:{Array:"読み取る配列。",Index:"値を取得する配列インデックス。",Value:"配列から取得される値。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayGetIndexBlockDoc",{version:"1.0.0",summary:"指定した値が配列内で検出される最初のインデックスを検索します。それに応じて、対応する出力コントロール ポートが活動化されます。",description:"このブロックは動的なため、入力データの配列タイプはブロック構成ダイアログを使用して変更できます。",dataPorts:{Array:"読み取る配列。",Value:"検索する値",Index:"値が検出される最初のインデックス （見つからない場合は未定義）。"},controlPorts:{In:"ブロック実行をトリガーします。",Found:"値が見つかった場合に活動化されます。","Not Found":"値が見つからない場合に活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayIndexOfBlockDoc",{version:"1.0.0",summary:"指定された値が配列内で見つかる最初のインデックスを検索します。",description:"このブロックは動的なため、入力データの配列タイプはブロック構成ダイアログを使用して変更できます。",dataPorts:{Array:"読み取る配列。",Value:"検索する値",Index:"値が検出される最初のインデックス （見つからない場合は -1）。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayInsertBlockDoc",{version:"1.0.0",summary:"指定された値を指定された配列に指定されたインデックスで挿入します。",description:"<b>このブロックは、指定された配列を直接変更し、同じ参照を出力として与えます。</b><br>このブロックは動的なため、入力データの配列タイプおよびポート数はブロック構成ダイアログを使用して変更できます。",dataPorts:{ArrayIn:"変更する配列。",Index:"値を挿入する配列インデックス。",Value1:"挿入する最初の値。",ArrayOut:"変更された配列。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayIteratorBlockDoc",{version:"1.0.0",summary:"配列のすべての値をイテレーションします。",description:"このブロックは動的であるため、入力データの配列タイプは、ブロック構成ダイアログを使用して変更されることがあります。<br>データ ポートの値タイプは、すべての配列値タイプに拘束されます。",dataPorts:{Array:"イテレーションを行う配列。","Start Index":"イテレーションが始まるインデックス (デフォルトでは、配列の先頭が <doc-value translate=no>0</doc-value>)。","End Index":"イテレーションが停止するインデックス (デフォルトでは、配列の末尾が<doc-value translate=no>未定義</doc-value>)。",Index:"現行のイテレーションが停止するインデックス。",Value:"現行インデックスの配列値。"},controlPorts:{In:"最初のイテレーションをトリガーします。","Loop In":"次のイテレーションをトリガーします。",Out:"最後のイテレーションが行われると活動化します。","Loop Out":"少なくとも 1 つの要素が残ると活動化します。"},example:{webapp:"EPSSchematicsPlay/index.html",content:"DS/EPSSchematicsCoreLibrary/assets/examples/EPSArrayIteratorExample.json"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayLengthBlockDoc",{version:"1.0.0",summary:"指定された配列の中の値の数をカウントします。",description:"このブロックは動的なため、入力データの配列タイプはブロック構成ダイアログを使用して変更できます。",dataPorts:{Array:"読み取る配列。",Length:"配列内の値の数。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayMapBlockDoc",{version:"1.0.0",summary:"呼び出し元の配列内のすべての要素に対して、指定されたグラフを呼び出した結果を入力した新しい配列を作成します。",description:"このブロックでは、<doc-idp-name translate=no>Input</doc-idp-name> 配列タイプを任意の出力配列タイプにマッピングできます。<br>マッピング プロセスを提供するには、内部グラフを編集する必要があります。",dataPorts:{Input:"マッピングする入力配列。<br>このデータ ポートは、すべての配列タイプを処理します。",SharedData:"各内部グラフ インスタンス間で共有するデータ。<br>このデータ ポートは、すべてのタイプを処理します。<br>各種タイプの複数のデータを共有する必要がある場合は、ユーザー タイプを作成することをお勧めします。",Success:"成功出力配列。<br>このデータ ポートは、すべての配列タイプを処理します。<br>この配列のサイズは、常に <doc-idp-name translate=no>Input</doc-idp-name> 配列サイズと同じになります。",State:"<doc-odp-name translate=no>Success</doc-odp-name> 出力配列の各インデックスで、<doc-valuetype translate=no>EExecutionState</doc-valuetype> を提供する <doc-valuetype translate=no>ArrayMapState</doc-valuetype> の配列。<br>この配列のサイズは常に、<doc-idp-name translate=no>Input</doc-idp-name> 配列サイズと等しくなります。",Progress:"<doc-odp-name translate=no>Input</doc-odp-name> 入力配列の各インデックスで、<doc-valuetype translate=no>EExecutionState</doc-valuetype> を提供する <doc-valuetype translate=no>ArrayMapProgress</doc-valuetype> の配列。<br>この配列は、ブロックの背後にある配布プロセスに依存するため、1 回の進行中に複数のデータが入力される可能性があります。<br>ただし、この配列のサイズが <doc-idp-name translate=no>Input</doc-idp-name> 配列サイズを超えることはありません。",Error:"<doc-odp-name translate=no>Input</doc-odp-name> 入力配列のインデックスに対してエラー オブジェクトを提供する <doc-valuetype translate=no>ArrayMapError</doc-valuetype> の配列。<br>この配列のサイズが <doc-idp-name translate=no>Input</doc-idp-name> 配列サイズを超えることはありません。"},controlPorts:{In:"ブロック実行をトリガーします。",Success:"プロセスが正常に完了すると活動化されます。",Progress:"処理が発生するたびに活動化されます。",Error:"エラーが発生したときに活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayPopBlockDoc",{version:"1.0.0",summary:"指定された配列から最後の値を除去します。",description:"<b>このブロックは、指定された配列を直接変更し、同じ参照を出力として与えます。</b><br>このブロックは動的なため、入力データの配列タイプはブロック構成ダイアログを使用して変更できます。",dataPorts:{ArrayIn:"変更する配列。",ArrayOut:"変更された配列。",Value:"除去された値。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayPushBlockDoc",{version:"1.0.0",summary:"指定された配列の最後に指定された値を追加します。",description:"<b>このブロックは、指定された配列を直接変更し、同じ参照を出力として与えます。</b><br>このブロックは動的なため、入力データの配列タイプおよびポート数はブロック構成ダイアログを使用して変更できます。",dataPorts:{ArrayIn:"変更する配列。",Value1:"追加する最初の値です。",ArrayOut:"変更された配列。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayRemoveBlockDoc",{version:"1.0.0",summary:"指定されたインデックスで指定された配列から値を除去します。",description:"<b>このブロックは、指定された配列を直接変更し、同じ参照を出力として与えます。</b><br>このブロックは動的なため、入力データの配列タイプはブロック構成ダイアログを使用して変更できます。",dataPorts:{ArrayIn:"変更する配列。",Index:"値を削除する配列インデックス。",ArrayOut:"変更された配列。",Value:"除去された値。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArraySetBlockDoc",{version:"1.0.0",summary:"指定されたインデックスで指定された配列の値を設定します。",description:"<b>このブロックは、指定された配列を直接変更し、同じ参照を出力として与えます。</b><br>このブロックは動的なため、入力データの配列タイプはブロック構成ダイアログを使用して変更できます。",dataPorts:{ArrayIn:"変更する配列。",Index:"値を設定する配列インデックス。",Value:"設定する値。",ArrayOut:"変更された配列。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayShiftBlockDoc",{version:"1.0.0",summary:"指定された配列から最初の値を除去します。",description:"<b>このブロックは、指定された配列を直接変更し、同じ参照を出力として与えます。</b><br>このブロックは動的なため、入力データの配列タイプはブロック構成ダイアログを使用して変更できます。",dataPorts:{ArrayIn:"変更する配列。",ArrayOut:"変更された配列",Value:"除去された値。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayUnshiftBlockDoc",{version:"1.0.0",summary:"指定された配列の先頭に指定された値を挿入します。",description:"<b>このブロックは、指定された配列を直接変更し、同じ参照を出力として与えます。</b><br>このブロックは動的なため、入力データの配列タイプおよびポート数はブロック構成ダイアログを使用して変更できます。",dataPorts:{ArrayIn:"変更する配列。",Value1:"挿入する最初の値。",ArrayOut:"変更された配列。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryArrayDoc",{version:"1.0.0",name:"Array",description:"<code>Array</code> カテゴリでは、すべての配列関連ブロックがグループ化されます。",icon:{name:"list-ol",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryCalculatorDoc",{version:"1.0.0",name:"Calculator",description:"<code>Calculator</code> カテゴリにより、すべての計算関連のブロックは再グループ化されます。",icon:{name:"計算機",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryCoreDoc",{version:"1.0.0",name:"Core",description:"<code>Core</code> ライブラリーは、スケマティック エディターのメイン ライブラリーです。<br>このルート カテゴリにより、専門的なサブ カテゴリに広がる純正 JavaScript ブロックは再グループ化されます。",icon:{name:"立方体",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryDebugDoc",{version:"1.0.0",name:"Debug",description:"<code>Debug</code> カテゴリでは、すべてのデバッグ関連ブロックが再グループ化されます。",icon:{name:"バグ",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryEventDoc",{version:"1.0.0",name:"Event",description:"<code>Event</code> カテゴリでは、すべてのイベント関連ブロックが再グループ化されます。",icon:{name:"bullhorn",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryFlowDoc",{version:"1.0.0",name:"Flow",description:"<code>Flow</code> カテゴリでは、すべての制御フロー操作関連ブロックが再グループ化されます。",icon:{name:"ランダム",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryLoopDoc",{version:"1.0.0",name:"Loop",description:"<code>Loop</code> カテゴリでは、すべてのループ関連ブロックが再グループ化されます。",icon:{name:"リフレッシュ",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryStringDoc",{version:"1.0.0",name:"String",description:"<code>String</code> カテゴリでは、すべての文字列操作関連ブロックが再グループ化されます。",icon:{name:"sort-alpha-asc",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryTimeDoc",{version:"1.0.0",name:"Time",description:"<code>Time</code> カテゴリでは、すべての時間関連ブロックが再グループ化されます。",icon:{name:"clock-o",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCompareBlockDoc",{version:"1.0.0",summary:"2 つの入力データの値を比較します。",description:"データ ポートの値タイプは、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype> にでき、ブロック構成ダイアログを使用して変更できます。",dataPorts:{Value1:"比較する最初の値です。",Value2:"比較する 2 番目の値です。"},controlPorts:{In:"ブロック実行をトリガーします。",Equal:"入力データ値が等しいときは活動化されます。",Greater:"<doc-idp-name translate=no>Value1</doc-idp-name> の値が、<doc-idp-name translate=no>Value2</doc-idp-name> の値よりも大きい場合 (<doc-idp-name translate=no>Value1</doc-idp-name> > <doc-idp-name translate=no>Value2</doc-idp-name>) 、活動化されます。",Lesser:"<doc-idp-name translate=no>Value1</doc-idp-name> の値が、<doc-idp-name translate=no>Value2</doc-idp-name> の値よりも小さい場合 (<doc-idp-name translate=no>Value1</doc-idp-name> < <doc-idp-name translate=no>Value2</doc-idp-name>) 、活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSConcatStringBlockDoc",{version:"1.0.0",summary:"指定した入力データ文字列と一意の出力データ文字列を連結します。",description:"<doc-setting-name translate=no>Separator</doc-setting-name> 設定を入力して、指定した文字で各文字列を区切ることができます。<br>このブロックは動的であるため、入力データ数はブロック構成ダイアログを使用して変更できます。",dataPorts:{Value1:"最初の文字列。",Value2:"2 番目の文字列。","Output String":"文字列連結の結果。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},settings:{Separator:"指定した各入力データ文字列間で使用する文字列の区切り文字。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSConditionBlockDoc",{version:"1.0.0",summary:"指定した設定式の後の複数入力データの値を比較します。",description:"このブロックは動的であるため、ブロック構成ダイアログを使用して入力データ数を変更できます。<br>データ ポートの値タイプはすべてのタイプを扱います。<br>設定 <doc-setting-name translate=no>Expression</doc-setting-name> に書き込まれる変数名は、入力データ名と一致する必要があります。一致しない場合、式は無効とみなされます。<br><br>設定式の値は、次のように高度な式の比較を処理します: <ul><li><doc-value translate=no>&quot;Value1 === Value2&quot;</doc-value>: <doc-idp-name translate=no>Value1</doc-idp-name> が <doc-idp-name translate=no>Value2</doc-idp-name> と等しいことを確認します。</li><li><doc-value translate=no>&quot;Value3 > Value3 && Value3 < Value2&quot;</doc-value>: <doc-idp-name translate=no>Value3</doc-idp-name> が <doc-idp-name translate=no>Value1</doc-idp-name> と <doc-idp-name translate=no>Value2</doc-idp-name> の間の値であることを確認します (<doc-idp-name translate=no>Value1</doc-idp-name>、<doc-idp-name translate=no>Value2</doc-idp-name>、および <doc-idp-name translate=no>Value3</doc-idp-name> は数値)。</li><li><doc-value translate=no>&quot;Value1 !== Value2 || Value1 !== Value3&quot;</doc-value>: <doc-idp-name translate=no>Value1</doc-idp-name> が <doc-idp-name translate=no>Value2</doc-idp-name> または <doc-idp-name translate=no>Value3</doc-idp-name> と異なることを確認します。</li></ul>",dataPorts:{Value1:"比較する最初の値です。",Value2:"比較する 2 番目の値です。"},controlPorts:{In:"ブロック実行をトリガーします。",True:"各入力データの値により入力された式の結果が正であるときに活動化されます。",False:"各入力データの値により入力された式の結果が負であるときに活動化されます。"},settings:{Expression:"入力データ値の比較を説明する式の値。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSContainsStringBlockDoc",{version:"1.0.0",summary:"文字列内に別の文字列が含まれているかどうかを判断します。",description:"文字列の文字は左から右にインデックス付けされます。<br>最初の文字のインデックスは <doc-value translate=no>0</doc-value> で <doc-value translate=no>stringName</doc-value> と呼ばれる文字列の最後の文字のインデックスは、<doc-value translate=no>stringName.length - 1</doc-value> です。<br>文字列検索では大文字と小文字が区別されます。",dataPorts:{"Input String":"文字列値のリファレンス。","Searched String":"検索する文字列値。","From Index":"検索を開始するインデックスを表す整数。デフォルト値は <doc-value translate=no>0</doc-value> です。<br><doc-idp-name translate=no>From Index</doc-idp-name> の値が <doc-value translate=no>0</doc-value> を下回る、または <doc-idp-name translate=no>Input String</doc-idp-name> の長さを上回る場合、検索はそれぞれインデックス <doc-value translate=no>0</doc-value> と <doc-idp-name translate=no>Input String</doc-idp-name> の長さから開始します。","Found Index":"<doc-idp-name translate=no>Searched String</doc-idp-name> の最初のオカレンスのインデックス、見つからない場合は <doc-value translate=no>-1</doc-value> 。<br>空の文字列 <doc-idp-name translate=no>Searched String</doc-idp-name> は、<doc-value translate=no>0</doc-value> と <doc-idp-name translate=no>Input String</doc-idp-name> の長さの間のインデックスで照合されます。"},controlPorts:{In:"ブロック実行をトリガーします。",True:"<doc-idp-name translate=no>Input String</doc-idp-name> 文字列値に <doc-idp-name translate=no>Searched String</doc-idp-name> 検索文字列値を含む場合に活動化されます。",False:"<doc-idp-name translate=no>Input String</doc-idp-name> 文字列値に <doc-idp-name translate=no>Searched String</doc-idp-name> 検索文字列値を含まない場合に活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCounterBlockDoc",{version:"1.0.0",summary:"各 <doc-icp-name translate=no>Loop In</doc-icp-name> 活動化でのカウンターを増分し、<doc-ocp-name translate=no>End</doc-ocp-name> の終了カウント値に到達するまでループを継続します。",description:"データ ポートの値タイプは、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype> にでき、ブロック構成ダイアログを使用して変更できます",dataPorts:{Start:"カウンターの開始数値。",End:"カウンターが到達する終了数値。",Step:"カウンターの増分ステップ値。","Current Count":"カウンターの現在のステップ。"},controlPorts:{In:"ブロック実行をトリガーします。","Loop In":"次のループをトリガーします。",Out:"プロセスが完了 (<doc-idp-name translate=no>End</doc-idp-name> 終了カウント値に到達) すると、活動化されます。","Loop Out":"プロセスがループする必要がある (まだ <doc-idp-name translate=no>End</doc-idp-name> 終了カウント値に到達していない) と、活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSDelayerBlockDoc",{version:"1.0.0",summary:"<doc-ocp-name translate=no>Out</doc-ocp-name> 出力コントロール ポートの活動化が指定したミリ秒数遅延します。",description:"",dataPorts:{Delay:"ループ プロセスの期間 (ミリ秒)。"},controlPorts:{In:"ブロックの実行をリセットおよびトリガーします。","Loop In":"プロセス ループの次のステップをトリガーします。",Out:"プロセスが完了 (<doc-idp-name translate=no>Delay</doc-idp-name> 入力データ値に到達) すると、活動化されます。","Loop Out":"プロセスがループする必要がある (まだ <doc-idp-name translate=no>Delay</doc-idp-name> 入力データ値に到達していない) と、活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSDivideBlockDoc",{version:"1.0.0",summary:"複数の入力データで除算を実行します。無効な演算を実行 (ゼロで除算) すると、<doc-ocp-name translate=no>Invalid</doc-ocp-name> 出力コントロール ポートが活動化されます。",description:"このブロックは動的であるため、入力データ ポート数はブロック構成ダイアログを使用して変更できます。<br>データ ポートの値タイプは、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype> のいずれかにでき、ブロック構成ダイアログを使用して変更できます。",dataPorts:{Value1:"演算の最初のオペランド。",Value2:"演算の 2 番目のオペランド。",Result:"入力データ (選択したデータ ポートの値タイプにより、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype>) で実行された演算の結果。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。",Invalid:"無効な演算が実行される (ゼロで除算を行う) と、活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSEventReaderBlockDoc",{version:"1.0.0",summary:"イベントでトリガーされるイベント ポートからイベントを読込みます。",description:"イベント ポートのイベント タイプは、ブロック構成ダイアログを使用して変更できます。",dataPorts:{DataEventOut:"読込むイベントです。"},controlPorts:{EventIn:"指定したイベント タイプのブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSEventWriterBlockDoc",{version:"1.0.0",summary:"イベント ポートでブロードキャストできるように、イベントを書き込みます。",description:"イベント ポートのイベント タイプは、ブロック構成ダイアログを使用して変更できます。",dataPorts:{DataEventIn:"書き込むイベントです。"},controlPorts:{In:"ブロック実行をトリガーします。",EventOut:"プロセスが完了すると、指定した <doc-idp-name translate=no>DataEventIn</doc-idp-name> イベントで活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSIfBlockDoc",{version:"1.0.0",summary:"<doc-idp-name translate=no>Condition</doc-idp-name> 入力データポートの値に従って、<doc-ocp-name translate=no>True</doc-ocp-name> または <doc-ocp-name translate=no>False</doc-ocp-name> 出力コントロール ポートを活動化します。",description:"",dataPorts:{Condition:"テスト対象のブーリアン値です。"},controlPorts:{In:"ブロック実行をトリガーします。",True:"<doc-idp-name translate=no>Condition</doc-idp-name> の値が true の場合に活動化されます。",False:"<doc-idp-name translate=no>Condition</doc-idp-name> の値が false の場合に活動化されます。"},example:{webapp:"EPSSchematicsPlay/index.html",content:"DS/EPSSchematicsCoreLibrary/assets/examples/EPSIfBlockExample.json"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSInterpolatorBlockDoc",{version:"1.0.0",summary:"<doc-idp-name translate=no>Alpha</doc-idp-name> 値に基づき、2 つの入力データ間で直線補間を実行します。",description:"データ ポート値のタイプは <doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype> にでき、ブロック構成ダイアログを使用して変更できます。<br>2 つの既知の項目 (それぞれ <doc-value translate=no>0</doc-value> と <doc-value translate=no>1</doc-value> に関連付け) が入力データとして指定されます。<br>直線補間は、これらの項目間で「直線」です。<br>指定された値 <doc-idp-name translate=no>Alpha</doc-idp-name> の場合、この直線とともに返される値は、次の方程式から派生します:<br><br><center><doc-odp-name translate=no>Result</doc-odp-name> = <doc-idp-name translate=no>Alpha</doc-idp-name>*(<doc-idp-name translate=no>Value2</doc-idp-name> - <doc-idp-name translate=no>Value1</doc-idp-name>)</center>",dataPorts:{Value1:"最初のオペランド。",Value2:"2 番目のオペランド。",Alpha:"重み付けパラメーター。",Result:"補間値。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSIsEqualBlockDoc",{version:"1.0.0",summary:"2 つの入力データのポート値を比較します。",description:"データ ポートはすべての値タイプを処理し、ブロック構成ダイアログを使用して変更できます。",dataPorts:{Value1:"比較する最初の値です。",Value2:"比較する 2 番目の値です。"},controlPorts:{In:"ブロック実行をトリガーします。",True:"2 つの入力データ ポート値が等しい場合に活動化されます。",False:"2 つの入力データ ポート値が異なる場合に活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSJoinAllBlockDoc",{version:"1.0.0",summary:"このブロックに到達できなくなった場合に出力コントロール ポートを活動化します。",description:"このブロックを実行するときに、このブロックに到達できる実行カーソルがなくなると、出力コントロール ポートが活動化されます。<br>それ以外の場合は、出力コントロール ポートを活動化せずに、ブロックの実行が終了します。",controlPorts:{In:"ブロック実行をトリガーします。",Out:"ブロックに到達できなくなった場合にのみ活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSLogBlockDoc",{version:"1.0.0",summary:"Web ブラウザ コンソールへの入力値を表示します。",description:"このブロックは、指定された値を Web ブラウザ コンソールに表示します。<br><doc-setting-name translate=no>Severity</doc-setting-name> 設定により、結果メッセージのエラー レベルを指定できます。<br>このブロックは動的であるため、入力データ数はブロック構成ダイアログを使用して変更できます。<br>データ ポートはすべての値タイプを処理します。",dataPorts:{Value1:"Web ブラウザ コンソールに表示する値。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},settings:{Severity:"結果メッセージのエラー レベル。値にできるのは、<doc-value translate=no>eInfo</doc-value>、<doc-value translate=no>eWarning</doc-value>、<doc-value translate=no>eDebug</doc-value>、<doc-value translate=no>eError</doc-value> または <doc-value translate=no>eSuccess</doc-value> です。"},example:{webapp:"EPSSchematicsPlay/index.html",content:"DS/EPSSchematicsCoreLibrary/assets/examples/EPSLogBlockExample.json"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSMultiplyBlockDoc",{version:"1.0.0",summary:"複数の入力データで乗算を実行します。",description:"このブロックは動的であるため、入力データ ポート数はブロック構成ダイアログを使用して変更できます。<br>データ ポートの値タイプは、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype> のいずれかにでき、ブロック構成ダイアログを使用して変更できます。",dataPorts:{Value1:"演算の最初のオペランド。",Value2:"演算の 2 番目のオペランド。",Result:"入力データ (選択したデータ ポートの値タイプにより、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype>) で実行された演算の結果。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSNotifyBlockDoc",{version:"1.0.0",summary:"入力したメッセージをエディターの通知領域に表示します。",description:"<doc-setting-name translate=no>Severity</doc-setting-name> 設定により、結果メッセージのエラー レベルを指定できます。<br>入力データ ポートは、次の値タイプを処理します: <doc-valuetype translate=no>String</doc-valuetype>、<doc-valuetype translate=no>Integer</doc-valuetype>、<doc-valuetype translate=no>Double</doc-valuetype>、および <doc-valuetype translate=no>Boolean</doc-valuetype>。",dataPorts:{Title:"メッセージのタイトル。",Message:"通知領域に表示するメッセージ。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},settings:{Severity:"結果メッセージのエラー レベル。値にできるのは、<doc-value translate=no>eInfo</doc-value>、<doc-value translate=no>eWarning</doc-value>、<doc-value translate=no>eDebug</doc-value>、<doc-value translate=no>eError</doc-value> または <doc-value translate=no>eSuccess</doc-value> です。"},example:{webapp:"EPSSchematicsPlay/index.html",content:"DS/EPSSchematicsCoreLibrary/assets/examples/EPSNotifyBlockExample.json"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSOnlyOneBlockDoc",{version:"1.0.0",summary:"入力コントロール ポートのいずれかが活動化されると、直ちに出力コントロール ポートを活動化します。この活動化は 1 回だけ行われます。その後、他の入力コントロール ポートが活動化されても、何も起こりません。活動化された入力コントロール ポートに応じて、対応する入力データ値が返されます。",description:"このブロックは動的であるため、入力データ数はブロック構成ダイアログを使用して変更できます。<br>入力コントロール ポートの数は、入力データ ポートの数で同期されます。<br>データ ポートは、すべての値タイプを処理します。<br><br><doc-icp-name translate=no>In1</doc-icp-name> が活動化された場合、<doc-odp-name translate=no>SelectedValue</doc-odp-name> 出力データ値は <doc-idp-name translate=no>Value1</doc-idp-name> に設定されます。<br><doc-icp-name translate=no>In2</doc-icp-name> が活動化された場合、<doc-odp-name translate=no>SelectedValue</doc-odp-name> 出力データ値は <doc-idp-name translate=no>Value2</doc-idp-name> に設定されます。<br>以後、同様になります。<br>一般的に、<doc-icp-name translate=no>InK</doc-icp-name> が活動化された場合、<doc-odp-name translate=no>SelectedValue</doc-odp-name> 出力データ値は <doc-idp-name translate=no>ValueK</doc-idp-name> に設定されます。",dataPorts:{Value1:"最初の入力データ値。",Value2:"2 番目の入力データ値。",SelectedValue:"選択したデータ値。"},controlPorts:{In1:"ブロック実行をトリガーします。",In2:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSParameterSelectorBlockDoc",{version:"1.0.0",summary:"活動化された入力コントロール ポートに従い、対応する入力データ値を返します。",description:"このブロックは動的であるため、入力データ数はブロック構成ダイアログを使用して変更できます。<br>入力コントロール ポートの数は、入力データ ポートの数で同期されます。<br>データ ポートは、すべての値タイプを処理します。<br><br><doc-icp-name translate=no>In1</doc-icp-name> が活動化された場合、<doc-odp-name translate=no>SelectedValue</doc-odp-name> 出力データ値は <doc-idp-name translate=no>Value1</doc-idp-name> に設定されます。<br><doc-icp-name translate=no>In2</doc-icp-name> が活動化された場合、<doc-odp-name translate=no>SelectedValue</doc-odp-name> 出力データ値は <doc-idp-name translate=no>Value2</doc-idp-name> に設定されます。<br>以後、同様になります。<br>一般的に、<doc-icp-name translate=no>InK</doc-icp-name> が活動化された場合、<doc-odp-name translate=no>SelectedValue</doc-odp-name> 出力データ値は <doc-idp-name translate=no>ValueK</doc-idp-name> に設定されます。",dataPorts:{Value1:"最初の入力データ値。",Value2:"2 番目の入力データ値。",SelectedValue:"選択したデータ値。"},controlPorts:{In1:"ブロック実行をトリガーします。",In2:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSPerSecondBlockDoc",{version:"1.0.0",summary:"前の実行ステップから経過した時間を考慮しながら、1 秒にわたって各実行ステップで入力データ値を補間します。",description:"このブロックは、<b>フレーム ベースのアニメーション</b>を取得する際に非常に役立つことがあります。どのような計算力を使用していても、一定のアニメーション速度を保証します。<br><br><b>時間に基づいて</b>アニメートされるオブジェクトは、動画のフレーム レートに関係なく、<b>同じ時間に</b><b>点 A</b> から<b>点 B</b> に移動します。フレーム レートが遅くなるほど、同じ速度を維持するため、<b>オブジェクトは各フレームを遠くまで移動します</b>。<br><br>一方、アニメーションが<b>フレーム レートに基づく</b>場合、<b>点 A</b> から<b>点 B</b> に到達するため、常に<b>同じフレーム数</b>を移動します。フレーム レートが遅くなるほど、時間がかかるようになります。これは、各フレームを移動する距離が変わらないためです。<br><br>サンプルでは、フレーム レートが遅いため、フレーム ベースのアニメーションは<b>同様に遅くなり</b>、時間ベースのアニメーションは<b>途切れ途切れ</b>になります。<br>また、時間ベースのアニメーションは、「フレーム レート独立」とも呼ばれます。",dataPorts:{Input:"1 秒に補間される入力値に対応します。",Output:"<doc-odp-name translate=no>Output</doc-odp-name> = <doc-idp-name translate=no>Input</doc-idp-name> * 経過時間 (秒) である出力値に対応します。<br>経過時間は、1 実行ステップの時間を表します。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSPrintBlockDoc",{version:"1.0.0",summary:"エディター コンソールへの入力値を表示します。",description:"このブロックは、指定された値をエディター コンソールに表示します。<br><doc-setting-name translate=no>Severity</doc-setting-name> 設定により、結果メッセージのエラー レベルを指定できます。<br>このブロックは動的であるため、入力データ数はブロック構成ダイアログを使用して変更できます。<br>データ ポートはすべての値タイプを処理します。",dataPorts:{Value1:"エディター コンソールに表示する値。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},settings:{Severity:"結果メッセージのエラー レベル。値にできるのは、<doc-value translate=no>eInfo</doc-value>、<doc-value translate=no>eWarning</doc-value>、<doc-value translate=no>eDebug</doc-value>、<doc-value translate=no>eError</doc-value> または <doc-value translate=no>eSuccess</doc-value> です。"},example:{webapp:"EPSSchematicsPlay/index.html",content:"DS/EPSSchematicsCoreLibrary/assets/examples/EPSPrintBlockExample.json"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSRandomBlockDoc",{version:"1.0.0",summary:"最小値と最大値の間の乱数を計算します。",description:"計算された乱数には、最小値と最大値の両方を含みます。<br>データ ポートの値タイプは、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype> にでき、ブロック構成ダイアログを使用して変更できます。",dataPorts:{Min:"範囲の最小値。",Max:"範囲の最大値。",Result:"返される値は、<doc-idp-name translate=no>Min</doc-idp-name> と <doc-idp-name translate=no>Max</doc-idp-name> の間のランダム <doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype> (選択したデータ ポートの値タイプに基づく)。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSetValueBlockDoc",{version:"1.0.0",summary:"1 つの変数から別の変数へのデータの簡単なコピーを許可します。<br>データ コピーは、コピー実行時に制御を許可する制御フローにより条件付けされます。",description:"このブロックは動的であるため、入力データ数はブロック構成ダイアログを使用して変更できます。<br>データ ポートはすべての値タイプを処理します。",dataPorts:{ValueIn1:"コピーする入力データ値。",ValueOut1:"コピーされた出力データ値。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSplitStringBlockDoc",{version:"1.0.0",summary:"指定した区切り文字を使用して、文字列を文字列の配列に分割します。",description:"見つかった <doc-idp-name translate=no>Separator</doc-idp-name> は文字列から除去され、サブ文字列が配列で返されます。<br><doc-idp-name translate=no>Separator</doc-idp-name> が見つからないか省略されている場合、配列には、文字列全体から構成される、1 つの要素が含まれます。<br><doc-idp-name translate=no>Separator</doc-idp-name> が空の文字列である場合、<code>Input String</code> は文字の配列に変換されます。<br><doc-idp-name translate=no>Separator</doc-idp-name> が文字列の先頭に現れる場合、配列は空の文字列で始まり、末尾に現れる場合、配列は空の文字列で終わり、両方に現れる場合、配列の先頭と末尾は両方とも空の文字列になります。<br>そのため、文字列が <doc-idp-name translate=no>Separator</doc-idp-name> の 1 つのインスタンスのみから構成される場合、配列は 2 つの空の文字列から構成されます。",dataPorts:{"Input String":"分割される文字列。",Seperator:"分割場所の判断に使用する文字列セパレータ。","Max Count":"検出する分割の最大数。",Splits:"文字列の配列は、特定の文字列でセパレータが出現する場所で分割されます。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSubstractBlockDoc",{version:"1.0.0",summary:"複数の入力データで減算を実行します。",description:"このブロックは動的であるため、入力データ数はブロック構成ダイアログを使用して変更できます。<br>データ ポートの値タイプは、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype> のいずれかにでき、ブロック構成ダイアログを使用して変更できます。",dataPorts:{Value1:"演算の最初のオペランド。",Value2:"演算の 2 番目のオペランド。",Result:"入力データ (選択したデータ ポートの値タイプにより、<doc-valuetype translate=no>Double</doc-valuetype> または <doc-valuetype translate=no>Integer</doc-valuetype>) で実行された演算の結果。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSubStringBlockDoc",{version:"1.0.0",summary:"文字列のサブセットを取得します。",description:"",dataPorts:{"Input String":"文字列リファレンスの文字。",Start:"文字列リファレンスの開始位置。",Length:"作成するサブ文字列の長さ (<doc-idp-name translate=no>Length</doc-idp-name> <= 0 の場合、サブ文字列の長さは文字列リファレンスの終わりで停止します)。","Output String":"生成されたサブ文字列。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了すると活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSwitchOnParameterBlockDoc",{version:"1.0.0",summary:"<doc-idp-name translate=no>TestValue</doc-idp-name> と他の入力データとの比較結果の後で、シーケンシャル ストリームを対応する出力コントロール ポートに切り替えます。",description:"このブロックは動的であるため、入力データ ポート数はブロック構成ダイアログを使用して変更できます。<br>出力コントロール ポートの数は、入力データ ポートの数で同期されます。<br>データ ポートはすべてのタイプを処理します。<br><doc-idp-name translate=no>TestValue</doc-idp-name> = <doc-idp-name translate=no>ValueK</doc-idp-name> である場合、このブロックはシーケンシャル ストリームを <doc-ocp-name translate=no>ParameterK</doc-ocp-name> 出力コントロール ポートに切り替えます。",dataPorts:{TestValue:"テスト対象のパラメーター。",Value1:"最初の参照パラメーター。"},controlPorts:{In:"ブロック実行をトリガーします。",None:"<doc-idp-name translate=no>TestValue</doc-idp-name> が他の入力パラメーターとは同じでない場合に活動化されます。",Parameter1:"<doc-idp-name translate=no>TestValue</doc-idp-name> の値が <doc-idp-name translate=no>Value1</doc-idp-name> の値と同じである場合に活動化されます。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSyncFlowsBlockDoc",{version:"1.0.0",summary:"このブロックは制御とデータ フローの同期に役立ちます。すべての入力コントロール ポートが活動化されるとすぐに、出力コントロール ポートを活動化します。(このブロックを複数回実行する場合など) より複雑なシナリオについては、以下の詳細な説明をお読みください。",description:"各入力コントロール ポートにはポートが活動化されたときにインクリメントされる内部カウンタがあり、ブロックが出力コントロール ポート <doc-ocp-name translate=no>Out</doc-ocp-name> を介して終了するときにデクリメントされます。入力コントロール ポートが活動化されるたびにブロックが実行され、すべての入力コントロール ポートの内部カウンタが 0 より大きい場合にのみ、出力コントロール ポート <doc-ocp-name translate=no>Out</doc-ocp-name> を介して終了します。",controlPorts:{In1:"ブロックの実行をトリガーし、このポートに関連付けられた内部カウンタをインクリメントします。",In2:"ブロックの実行をトリガーし、このポートに関連付けられた内部カウンタをインクリメントします。",Out:"すべての入力コントロール ポートの内部カウンタが 0 より大きい場合にのみ活動化されます。すべての入力コントロール ポートの内部カウンタをデクリメントします。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSWaitAllBlockDoc",{version:"1.0.0",summary:"すべての入力コントロール ポートが活動化されるとすぐに、出力コントロール ポートを活動化します。",description:"すべての入力コントロール ポートが活動化されると、ブロックは出力コントロール ポートを活動化し、すべての入力コントロール ポートをリセットします。<br><br>活動化されたすべての入力コントロール ポートは、出力コントロール ポートがトリガーされるまでアクティブのままになります。<br>ただし、<doc-setting-name translate=no>Same Frame</doc-setting-name> 設定により、同じフレーム中に活動化が必要かどうかを指定できます。<br>この設定が活動化された場合、出力がトリガーされると各実行ステップをリセットします。<br><br>このブロックは動的であるため、入力コントロール数はブロック構成ダイアログを使用して変更できます。",controlPorts:{In1:"ブロック実行をトリガーします。",In2:"ブロック実行をトリガーします。",Out:"すべての入力コントロール ポートがいったん活動化されたときにだけ活動化されます。"},settings:{"Same Frame":"同じ実行ステップの間に活動化が必要かどうかを指定します。"},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSWaiterBlockDoc",{version:"1.0.0",summary:"<doc-ocp-name translate=no>Out</doc-ocp-name> 出力コントロール ポートを活動化する前に、指定したミリ秒数待機します。",description:"このブロックの動作は、入力した <doc-idp-name translate=no>Delay</doc-idp-name>に達する前に、<doc-ocp-name translate=no>Out</doc-ocp-name> 出力ポートが活動化されないことを保証します。<br>ただし、非同期である Javascript の場合、入力したとおりの <doc-idp-name translate=no>Delay</doc-idp-name> に <doc-ocp-name translate=no>Out</doc-ocp-name> 出力コントロール ポートが活動化されることは保証されません。",dataPorts:{Delay:"待機プロセスの時間 (ミリ秒)。"},controlPorts:{In:"ブロック実行をトリガーします。",Out:"プロセスが完了 (<doc-idp-name translate=no>Delay</doc-idp-name> 値に到達) すると、活動化されます。"},example:null});