define("DS/EPSSchematicsCoreLibrary/EPSSchematicsCoreLibrary_en",{});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSAddBlockDoc",{version:"1.0.0",summary:"Performs an add operation on several input data.",description:"This block is dynamic thus the input data port count can be changed in the block configuration dialog.<br>The data port value type can be either <doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> and can be changed in the block configuration dialog.",dataPorts:{Value1:"the first operand of the operation.",Value2:"the second operand of the operation.",Result:"the result of the operation performed on the input data (<doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> depending in the selected data port value type)."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayConcatBlockDoc",{version:"1.0.0",summary:"Concatenates the given arrays into a new array.",description:"This block is dynamic thus the array type and the port count of the input data can be changed using the block configuration dialog.",dataPorts:{Array1:"the first array to concatenate.",Array2:"the second array to concatenate.",NewArray:"the new concatenated array."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayGetBlockDoc",{version:"1.0.0",summary:"Gets the value from the given array at the given index.",description:"This block is dynamic thus the array type of the input data can be changed using the block configuration dialog.",dataPorts:{Array:"the array to read.",Index:"the array index where to get the value.",Value:"the value got from the array."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayGetIndexBlockDoc",{version:"1.0.0",summary:"Searchs the first index at which the given value can be found in the array. The corresponding output control port will be activated accordingly.",description:"This block is dynamic thus the array type of the input data can be changed using the block configuration dialog.",dataPorts:{Array:"the array to read.",Value:"the value to find",Index:"the first index at which the value can be found. (undefined if not found)"},controlPorts:{In:"triggers the block execution.",Found:"is activated if the value is found.","Not Found":"is activated if the value is not found."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayIndexOfBlockDoc",{version:"1.0.0",summary:"Searchs the first index at which the given value can be found in the array.",description:"This block is dynamic thus the array type of the input data can be changed using the block configuration dialog.",dataPorts:{Array:"the array to read.",Value:"the value to find",Index:"the first index at which the value can be found. (-1 if not found)"},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayInsertBlockDoc",{version:"1.0.0",summary:"Inserts the given values into the given array at the given index.",description:"<b>This block modifies directly the given array and will give as output the same reference.</b><br>This block is dynamic thus the array type and the port count of the input data can be changed using the block configuration dialog.",dataPorts:{ArrayIn:"the array to modify.",Index:"the array index where to insert the value.",Value1:"the first value to insert.",ArrayOut:"the modified array."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayIteratorBlockDoc",{version:"1.0.0",summary:"Iterates through all the values of an array.",description:"This block is dynamic thus the array type of the input data can be changed using the block configuration dialog.<br>The data port value type is constrained to all array value type.",dataPorts:{Array:"the array to iterate through.","Start Index":"index where the iteration starts (by default <doc-value translate=no>0</doc-value> for the beginning of the array).","End Index":"index where the iteration stops (by default <doc-value translate=no>undefined</doc-value> for the end of the array).",Index:"index of the current iteration step.",Value:"array value at current index."},controlPorts:{In:"triggers the first iteration.","Loop In":"triggers the next iteration.",Out:"is activated when the last iteration occurred.","Loop Out":"is activated when at least one element remains."},example:{webapp:"EPSSchematicsPlay/index.html",content:"DS/EPSSchematicsCoreLibrary/assets/examples/EPSArrayIteratorExample.json"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayLengthBlockDoc",{version:"1.0.0",summary:"Counts the number of value in the given array.",description:"This block is dynamic thus the array type of the input data can be changed using the block configuration dialog.",dataPorts:{Array:"the array to read.",Length:"the number of value in the array."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayMapBlockDoc",{version:"1.0.0",summary:"Creates a new array populated with the results of calling a provided graph on every element in the calling array.",description:"This block is able to map any <doc-idp-name translate=no>Input</doc-idp-name> array type to any output array type. <br>The inner graph needs to be edited to provide the mapping process.",dataPorts:{Input:"The input array to be mapped. <br>This data port handles all array types.",SharedData:"The data to share accross each internal graph instance. <br>This data port handles all types. <br>If several data with different types need to be shared then the creation of a user type is recommended.",Success:"The success output array. <br>This data port handles all array types. <br>The size of this array will always be equal to the <doc-idp-name translate=no>Input</doc-idp-name> array size.",State:"An array of <doc-valuetype translate=no>ArrayMapState</doc-valuetype> giving the <doc-valuetype translate=no>EExecutionState</doc-valuetype> at each index of the <doc-odp-name translate=no>Success</doc-odp-name> output array. <br>The size of this array will always be equal to the <doc-idp-name translate=no>Input</doc-idp-name> array size.",Progress:"An array of <doc-valuetype translate=no>ArrayMapProgress</doc-valuetype> giving the <doc-valuetype translate=no>EExecutionState</doc-valuetype> at each index of the <doc-odp-name translate=no>Input</doc-odp-name> input array. <br>This array can be filled with several data during one progress as it depends on the distribution process behind the block. <br>But the size of this array won't exceed the <doc-idp-name translate=no>Input</doc-idp-name> array size.",Error:"An array of <doc-valuetype translate=no>ArrayMapError</doc-valuetype> giving an error object for the index of the <doc-odp-name translate=no>Input</doc-odp-name> input array. <br>The size of this array won't exceed the <doc-idp-name translate=no>Input</doc-idp-name> array size."},controlPorts:{In:"triggers the block execution.",Success:"is activated when the process is completed with success.",Progress:"is activated each time a progress occurred.",Error:"is activated when an error occurred."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayPopBlockDoc",{version:"1.0.0",summary:"Removes the last value from the given array.",description:"<b>This block modifies directly the given array and will give as output the same reference.</b><br>This block is dynamic thus the array type of the input data can be changed using the block configuration dialog.",dataPorts:{ArrayIn:"the array to modify.",ArrayOut:"the modified array.",Value:"the removed value."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayPushBlockDoc",{version:"1.0.0",summary:"Adds the given values at the end of the given array.",description:"<b>This block modifies directly the given array and will give as output the same reference.</b><br>This block is dynamic thus the array type and the port count of the input data can be changed using the block configuration dialog.",dataPorts:{ArrayIn:"the array to modify.",Value1:"the first value to add.",ArrayOut:"the modified array."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayRemoveBlockDoc",{version:"1.0.0",summary:"Removes a value from the given array at the given index.",description:"<b>This block modifies directly the given array and will give as output the same reference.</b><br>This block is dynamic thus the array type of the input data can be changed using the block configuration dialog.",dataPorts:{ArrayIn:"the array to modify.",Index:"the array index where to remove the value.",ArrayOut:"the modified array.",Value:"the removed value."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArraySetBlockDoc",{version:"1.0.0",summary:"Sets the given value on the given array at the given index.",description:"<b>This block modifies directly the given array and will give as output the same reference.</b><br>This block is dynamic thus the array type of the input data can be changed using the block configuration dialog.",dataPorts:{ArrayIn:"the array to modify.",Index:"the array index where to set the value.",Value:"the value to set.",ArrayOut:"the modified array."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayShiftBlockDoc",{version:"1.0.0",summary:"Removes the first value from the given array.",description:"<b>This block modifies directly the given array and will give as output the same reference.</b><br>This block is dynamic thus the array type of the input data can be changed using the block configuration dialog.",dataPorts:{ArrayIn:"the array to modify.",ArrayOut:"the modified array",Value:"the removed value."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSArrayUnshiftBlockDoc",{version:"1.0.0",summary:"Inserts the given values at the beginning of the given array.",description:"<b>This block modifies directly the given array and will give as output the same reference.</b><br>This block is dynamic thus the array type and the port count of the input data can be changed using the block configuration dialog.",dataPorts:{ArrayIn:"the array to modify.",Value1:"the first value to insert.",ArrayOut:"the modified array."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryArrayDoc",{version:"1.0.0",name:"Array",description:"The <code>Array</code> category groups all the array related blocks.",icon:{name:"list-ol",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryCalculatorDoc",{version:"1.0.0",name:"Calculator",description:"The <code>Calculator</code> category regroups all the calculation related blocks.",icon:{name:"calculator",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryCoreDoc",{version:"1.0.0",name:"Core",description:"The <code>Core</code> library is the main library of the schematics editor.<br>This root category regroups pure JavaScript blocks spread among the specialized sub categories.",icon:{name:"cubes",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryDebugDoc",{version:"1.0.0",name:"Debug",description:"The <code>Debug</code> category regroups all the debugging related blocks.",icon:{name:"bug",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryEventDoc",{version:"1.0.0",name:"Event",description:"The <code>Event</code> category regroups all the event related blocks.",icon:{name:"bullhorn",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryFlowDoc",{version:"1.0.0",name:"Flow",description:"The <code>Flow</code> category regroups all the control flow manipulation related blocks.",icon:{name:"random",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryLoopDoc",{version:"1.0.0",name:"Loop",description:"The <code>Loop</code> category regroups all the loop related blocks.",icon:{name:"refresh",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryStringDoc",{version:"1.0.0",name:"String",description:"The <code>String</code> category regroups all the string manipulation related blocks.",icon:{name:"sort-alpha-asc",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCategoryTimeDoc",{version:"1.0.0",name:"Time",description:"The <code>Time</code> category regroups all the time related blocks.",icon:{name:"clock-o",fontFamily:"eFontAwesome"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCompareBlockDoc",{version:"1.0.0",summary:"Compares the value of two input data.",description:"The data port value type can be either <doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> and can be changed using the block configuration dialog.",dataPorts:{Value1:"is the first value to compare.",Value2:"is the second value to compare."},controlPorts:{In:"triggers the block execution.",Equal:"is activated when the input data values are equal.",Greater:"is activated when the value of <doc-idp-name translate=no>Value1</doc-idp-name> is greater than the value of <doc-idp-name translate=no>Value2</doc-idp-name> (<doc-idp-name translate=no>Value1</doc-idp-name> > <doc-idp-name translate=no>Value2</doc-idp-name>).",Lesser:"is activated when the value of <doc-idp-name translate=no>Value1</doc-idp-name> is smaller than the value of <doc-idp-name translate=no>Value2</doc-idp-name> (<doc-idp-name translate=no>Value1</doc-idp-name> < <doc-idp-name translate=no>Value2</doc-idp-name>)."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSConcatStringBlockDoc",{version:"1.0.0",summary:"Concatenates the given input data strings into a unique output data string.",description:"A <doc-setting-name translate=no>Separator</doc-setting-name> setting can be provided to separate each string by the specified charaters.<br>This block is dynamic thus the input data count can be changed using the block configuration dialog.",dataPorts:{Value1:"the first string.",Value2:"the second string.","Output String":"the result of the string concatenation."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},settings:{Separator:"the string separator to be used between each given input data string."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSConditionBlockDoc",{version:"1.0.0",summary:"Compares the value of multiple input data following the given setting expression.",description:"This block is dynamic thus the input data count can be changed using the block configuration dialog.<br>The data port value type handles all types.<br>The variable name written in the setting <doc-setting-name translate=no>Expression</doc-setting-name> must correspond to the input data name otherwise the expression will be considered as invalid.<br><br>The setting expression value handles advanced expression comparison:<ul><li><doc-value translate=no>&quot;Value1 === Value2&quot;</doc-value>: checks that <doc-idp-name translate=no>Value1</doc-idp-name> is equal to <doc-idp-name translate=no>Value2</doc-idp-name>.</li><li><doc-value translate=no>&quot;Value3 > Value3 && Value3 < Value2&quot;</doc-value>: checks that <doc-idp-name translate=no>Value3</doc-idp-name> is between <doc-idp-name translate=no>Value1</doc-idp-name> and <doc-idp-name translate=no>Value2</doc-idp-name> (<doc-idp-name translate=no>Value1</doc-idp-name>, <doc-idp-name translate=no>Value2</doc-idp-name> and <doc-idp-name translate=no>Value3</doc-idp-name> being numbers).</li><li><doc-value translate=no>&quot;Value1 !== Value2 || Value1 !== Value3&quot;</doc-value>: checks that <doc-idp-name translate=no>Value1</doc-idp-name> is different from <doc-idp-name translate=no>Value2</doc-idp-name> or <doc-idp-name translate=no>Value3</doc-idp-name>.</li></ul>",dataPorts:{Value1:"is the first value to compare.",Value2:"is the second value to compare."},controlPorts:{In:"triggers the block execution.",True:"is activated when the result of the expression filled by each input data values is positive.",False:"is activated when the result of the expression filled by each input data values if negative."},settings:{Expression:"the value of the expression describing the input data values comparison."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSContainsStringBlockDoc",{version:"1.0.0",summary:"Determines whether a string contains another string within itself.",description:"Characters in a string are indexed from left to right.<br>The index of the first character is <doc-value translate=no>0</doc-value>, and the index of the last character of a string called <doc-value translate=no>stringName</doc-value> is <doc-value translate=no>stringName.length - 1</doc-value>.<br>The string search is case-sensitive.",dataPorts:{"Input String":"the string value reference.","Searched String":"the string value to search.","From Index":"an integer representing the index at which to start the search. The default value is <doc-value translate=no>0</doc-value>.<br>For <doc-idp-name translate=no>From Index</doc-idp-name> values lower than <doc-value translate=no>0</doc-value> or greater than <doc-idp-name translate=no>Input String</doc-idp-name> length, the search starts at index <doc-value translate=no>0</doc-value> and <doc-idp-name translate=no>Input String</doc-idp-name> length respectively.","Found Index":"the index of the first occurence of <doc-idp-name translate=no>Searched String</doc-idp-name> or <doc-value translate=no>-1</doc-value> if not found.<br>An empty string <doc-idp-name translate=no>Searched String</doc-idp-name> will match at any index between <doc-value translate=no>0</doc-value> and <doc-idp-name translate=no>Input String</doc-idp-name> length."},controlPorts:{In:"triggers the block execution.",True:"is activated if the <doc-idp-name translate=no>Input String</doc-idp-name> string value contains the <doc-idp-name translate=no>Searched String</doc-idp-name> searched string value.",False:"is activated if the <doc-idp-name translate=no>Input String</doc-idp-name> string value does not contain the <doc-idp-name translate=no>Searched String</doc-idp-name> searched string value."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSCounterBlockDoc",{version:"1.0.0",summary:"Increments a counter at each <doc-icp-name translate=no>Loop In</doc-icp-name> activation and keeps on looping until the end count value of <doc-ocp-name translate=no>End</doc-ocp-name> is reached.",description:"The data port value type can be either <doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> and can be changed using the block configuration dialog",dataPorts:{Start:"the start count value of the counter.",End:"the end count value to be reached by the counter.",Step:"the incremental step value of the counter.","Current Count":"the current step in the counter."},controlPorts:{In:"triggers the block execution.","Loop In":"triggers the next loop.",Out:"is activated when the process is completed (the <doc-idp-name translate=no>End</doc-idp-name> end count value has been reached).","Loop Out":"is activated when the process needs to loop (the <doc-idp-name translate=no>End</doc-idp-name> end count value has not been reached yet)."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSDelayerBlockDoc",{version:"1.0.0",summary:"Delays the activation of the <doc-ocp-name translate=no>Out</doc-ocp-name> output control port by a given number of milliseconds.",description:"",dataPorts:{Delay:"duration of the loop process (in milliseconds)."},controlPorts:{In:"resets and triggers the block execution.","Loop In":"triggers the next step in the process loop.",Out:"is activated when the process is completed (the <doc-idp-name translate=no>Delay</doc-idp-name> input data value has been reached).","Loop Out":"is activated when the process needs to loop (the <doc-idp-name translate=no>Delay</doc-idp-name> input data value has not been reached yet)."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSDivideBlockDoc",{version:"1.0.0",summary:"Performs a divide operation on several input data. If an invalid operation is performed (division by zero), the <doc-ocp-name translate=no>Invalid</doc-ocp-name> output control port will be activated!",description:"This block is dynamic thus the input data port count can be changed using the block configuration dialog.<br>The data port value type can be either <doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> and can be changed using the block configuration dialog.",dataPorts:{Value1:"the first operand of the operation.",Value2:"the second operand of the operation.",Result:"the result of the operation performed on the input data (<doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> depending on the selected data port value type)."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed.",Invalid:"is activated when an invalid operation is performed (division by zero)."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSEventReaderBlockDoc",{version:"1.0.0",summary:"Reads the event from an event port triggered by an event.",description:"The event port event type can be changed using the block configuration dialog.",dataPorts:{DataEventOut:"is the event to read."},controlPorts:{EventIn:"triggers the block execution with the specified event type.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSEventWriterBlockDoc",{version:"1.0.0",summary:"Writes an event so it can be broadcasted by an event port.",description:"The event port event type can be changed using the block configuration dialog.",dataPorts:{DataEventIn:"is the event to write."},controlPorts:{In:"triggers the block execution.",EventOut:"is activated with the specified <doc-idp-name translate=no>DataEventIn</doc-idp-name> event when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSIfBlockDoc",{version:"1.0.0",summary:"Activates <doc-ocp-name translate=no>True</doc-ocp-name> or <doc-ocp-name translate=no>False</doc-ocp-name> output control port according to the <doc-idp-name translate=no>Condition</doc-idp-name> input data port value.",description:"",dataPorts:{Condition:"the boolean value to be tested."},controlPorts:{In:"triggers the block execution.",True:"is activated if the value of <doc-idp-name translate=no>Condition</doc-idp-name> is true.",False:"is activated if the value of <doc-idp-name translate=no>Condition</doc-idp-name> is false."},example:{webapp:"EPSSchematicsPlay/index.html",content:"DS/EPSSchematicsCoreLibrary/assets/examples/EPSIfBlockExample.json"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSInterpolatorBlockDoc",{version:"1.0.0",summary:"Performs a linear interpolation between two input data, based on an <doc-idp-name translate=no>Alpha</doc-idp-name> value.",description:"The data port value type can be either <doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> and can be changed using the block configuration dialog.<br>The two known items are given as input data (associated respectively to <doc-value translate=no>0</doc-value> and <doc-value translate=no>1</doc-value>).<br>The linear interpolant correspond to the 'straight line' between these items.<br>For a given value <doc-idp-name translate=no>Alpha</doc-idp-name>, the returned value along this straight line is derived from the equation:<br><br><center><doc-odp-name translate=no>Result</doc-odp-name> = <doc-idp-name translate=no>Alpha</doc-idp-name>*(<doc-idp-name translate=no>Value2</doc-idp-name> - <doc-idp-name translate=no>Value1</doc-idp-name>)</center>",dataPorts:{Value1:"the first operand.",Value2:"the second operand.",Alpha:"the weighting parameter.",Result:"the interpolated value."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSIsEqualBlockDoc",{version:"1.0.0",summary:"Compares the equality of two input data port values.",description:"The data ports handle all value types and can be changed using the block configuration dialog.",dataPorts:{Value1:"the first value to compare.",Value2:"the second value to compare."},controlPorts:{In:"triggers the block execution.",True:"is activated if the two input data port values are equal.",False:"is activated if the two input data port values are different."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSJoinAllBlockDoc",{version:"1.0.0",summary:"Activates the output control port if this block can't be reached anymore.",description:"When this block is executed, if there is no more execution cursors which can reach this block, the output control port will be activated.<br>Otherwise the execution of the block will finished without activating any output control port.",controlPorts:{In:"triggers the block execution.",Out:"is activated only when the block can't be reached anymore."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSLogBlockDoc",{version:"1.0.0",summary:"Displays the provided values into the web browser console.",description:"This block displays the given values into the web browser console.<br>The <doc-setting-name translate=no>Severity</doc-setting-name> setting allows to specify the error level of the result message.<br>This block is dynamic thus the input data count can be changed using the block configuration dialog.<br>The data port handles all value types.",dataPorts:{Value1:"the value to be displayed into the web browser console."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},settings:{Severity:"the error level of the result message. Value can be <doc-value translate=no>eInfo</doc-value>, <doc-value translate=no>eWarning</doc-value>, <doc-value translate=no>eDebug</doc-value>, <doc-value translate=no>eError</doc-value> or <doc-value translate=no>eSuccess</doc-value>."},example:{webapp:"EPSSchematicsPlay/index.html",content:"DS/EPSSchematicsCoreLibrary/assets/examples/EPSLogBlockExample.json"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSMultiplyBlockDoc",{version:"1.0.0",summary:"Performs a multiply operation on several input data.",description:"This block is dynamic thus the input data port count can be changed using the block configuration dialog.<br>The data port value type can be either <doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> and can be changed using the block configuration dialog.",dataPorts:{Value1:"the first operand of the operation.",Value2:"the second operand of the operation.",Result:"the result of the operation performed on the input data (<doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> depending in the selected data port value type)."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSNotifyBlockDoc",{version:"1.0.0",summary:"Displays the provided message into the notification area of the editor.",description:"The <doc-setting-name translate=no>Severity</doc-setting-name> allows to specify the error level of the result message.<br>The input data port handles the following value types: <doc-valuetype translate=no>String</doc-valuetype>, <doc-valuetype translate=no>Integer</doc-valuetype>, <doc-valuetype translate=no>Double</doc-valuetype> and <doc-valuetype translate=no>Boolean</doc-valuetype>.",dataPorts:{Title:"the title of the message.",Message:"the message to be displayed into the notification area."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},settings:{Severity:"the error level of the result message. Value can be <doc-value translate=no>eInfo</doc-value>, <doc-value translate=no>eWarning</doc-value>, <doc-value translate=no>eDebug</doc-value>, <doc-value translate=no>eError</doc-value> or <doc-value translate=no>eSuccess</doc-value>."},example:{webapp:"EPSSchematicsPlay/index.html",content:"DS/EPSSchematicsCoreLibrary/assets/examples/EPSNotifyBlockExample.json"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSOnlyOneBlockDoc",{version:"1.0.0",summary:"Activates the output control port as soon as one of the input control port has been activated. This activation will occur only once. Then when the others input control ports are activated, nothing occurs. Returns the corresponding input data value, according to the activated input control port.",description:"This block is dynamic thus the input data count can be changed using the block configuration dialog.<br>The input control port count is synchronized on the input data port count.<br>The data port handles all value types.<br><br>If <doc-icp-name translate=no>In1</doc-icp-name> is activated, <doc-odp-name translate=no>SelectedValue</doc-odp-name> output data value will be valued by <doc-idp-name translate=no>Value1</doc-idp-name>.<br>If <doc-icp-name translate=no>In2</doc-icp-name> is activated, <doc-odp-name translate=no>SelectedValue</doc-odp-name> output data value will be valued by <doc-idp-name translate=no>Value2</doc-idp-name>.<br>...etc.<br>Generally speaking, if <doc-icp-name translate=no>InK</doc-icp-name> is activated, <doc-odp-name translate=no>SelectedValue</doc-odp-name> output data value will be valued by <doc-idp-name translate=no>ValueK</doc-idp-name>.",dataPorts:{Value1:"the first input data value.",Value2:"the second input data value.",SelectedValue:"the selected data value."},controlPorts:{In1:"triggers the block execution.",In2:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSParameterSelectorBlockDoc",{version:"1.0.0",summary:"Returns the corresponding input data value, according to the activated input control port.",description:"This block is dynamic thus the input data count can be changed using the block configuration dialog.<br>The input control port count is synchronized on the input data port count.<br>The data port handles all value types.<br><br>If <doc-icp-name translate=no>In1</doc-icp-name> is activated, <doc-odp-name translate=no>SelectedValue</doc-odp-name> output data value will be valued by <doc-idp-name translate=no>Value1</doc-idp-name>.<br>If <doc-icp-name translate=no>In2</doc-icp-name> is activated, <doc-odp-name translate=no>SelectedValue</doc-odp-name> output data value will be valued by <doc-idp-name translate=no>Value2</doc-idp-name>.<br>...etc.<br>Generally speaking, if <doc-icp-name translate=no>InK</doc-icp-name> is activated, <doc-odp-name translate=no>SelectedValue</doc-odp-name> output data value will be valued by <doc-idp-name translate=no>ValueK</doc-idp-name>.",dataPorts:{Value1:"the first input data value.",Value2:"the second input data value.",SelectedValue:"the selected data value."},controlPorts:{In1:"triggers the block execution.",In2:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSPerSecondBlockDoc",{version:"1.0.0",summary:"Interpolates the input data value at every execution step over a second, taking into account the time elapsed since the previous execution step.",description:"This block might be really useful to obtain <b>frame-based animations</b>. It will guarantee a constant animation speed whatever the computing power used.<br><br>An object animated <b>based on time</b> will move from <b>point A</b> to <b>point B</b> in the <b>same amount of time</b> regardless of the frame rate of the movie. The slower the frame rate, the <b>farther the object moves each frame</b> in order to maintain the same speed.<br><br>On the other hand, if the animation is <b>based on the frame rate</b>, the object will always take the <b>same number of frames</b> to get from <b>point A</b> to <b>point B</b>. The slower the frame rate, the longer it will take because the distance moved each frame doesn't change.<br><br>In a sample, as frame rate slows, frame-based animation <b>also slows</b> and time-based animation gets <b>choppy</b>.<br>Time-based animation is also known as 'frame-rate independence'.",dataPorts:{Input:"corresponds to the input value to interpolate over a second.",Output:"corresponds to the output value where <doc-odp-name translate=no>Output</doc-odp-name> = <doc-idp-name translate=no>Input</doc-idp-name> * Elapsed Time (in seconds).<br>The elapsed time respresents the duration of one execution step."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSPrintBlockDoc",{version:"1.0.0",summary:"Displays the provided values into the editor console.",description:"This block displays the given values into the editor console.<br>The <doc-setting-name translate=no>Severity</doc-setting-name> setting allows to specify the error level of the result message.<br>This block is dynamic thus the input data count can be changed using the block configuration dialog.<br>The data port handles all value types.",dataPorts:{Value1:"the value to be displayed into the editor console."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},settings:{Severity:"the error level of the result message. Value can be <doc-value translate=no>eInfo</doc-value>, <doc-value translate=no>eWarning</doc-value>, <doc-value translate=no>eDebug</doc-value>, <doc-value translate=no>eError</doc-value> or <doc-value translate=no>eSuccess</doc-value>."},example:{webapp:"EPSSchematicsPlay/index.html",content:"DS/EPSSchematicsCoreLibrary/assets/examples/EPSPrintBlockExample.json"}});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSRandomBlockDoc",{version:"1.0.0",summary:"Computes a random number between a minimum and maximum value.",description:"The computed random number is inclusive at both the minimum and the maximum value.<br>The data port value type can be either <doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> and can be changed using the block configuration dialog.",dataPorts:{Min:"the minimum value of the range.",Max:"the maximum value of the range.",Result:"the returned value, a random <doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> (depending in the selected data port value type) between a <doc-idp-name translate=no>Min</doc-idp-name> and <doc-idp-name translate=no>Max</doc-idp-name>."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSetValueBlockDoc",{version:"1.0.0",summary:"Allows the simple copying of data from one variable to another.<br>The data copy is conditioned by the control flow which allows to control when the copy is performed.",description:"This block is dynamic thus the input data count can be changed using the block configuration dialog.<br>The data port handles all value types.",dataPorts:{ValueIn1:"the input data value to copy.",ValueOut1:"the copied output data value."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSplitStringBlockDoc",{version:"1.0.0",summary:"Splits a string of characters into an array of strings using the specified separator.",description:"When found, <doc-idp-name translate=no>Separator</doc-idp-name> is removed from the string and the substrings are returned in an array.<br>If <doc-idp-name translate=no>Separator</doc-idp-name> is not found or is omitted, the array contains one element consisting of the entire string.<br>If <doc-idp-name translate=no>Separator</doc-idp-name> is an empty string, <code>Input String</code> is converted to an array of characters.<br>If <doc-idp-name translate=no>Separator</doc-idp-name> appears at the beginning or end of the string, or both, the array begins, ends, or both begins and ends, respectively, with an empty string.<br>Thus, if the string only contains one instance of <doc-idp-name translate=no>Separator</doc-idp-name>, the array will contain two empty strings.",dataPorts:{"Input String":"the string of characters to be splitted.",Seperator:"the string separator to be used to determine where to make each split.","Max Count":"the maximum number of split to be found.",Splits:"an array of strings split at each point where the separator occurs in the given string."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSubstractBlockDoc",{version:"1.0.0",summary:"Performs a substract operation on several input data.",description:"This block is dynamic thus the input data count can be changed using the block configuration dialog.<br>The data port value type can be either <doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> and can be changed using the block configuration dialog.",dataPorts:{Value1:"the first operand of the operation.",Value2:"the second operand of the operation.",Result:"the result of the operation performed on the input data (<doc-valuetype translate=no>Double</doc-valuetype> or <doc-valuetype translate=no>Integer</doc-valuetype> depending on the data port selected value type)."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSubStringBlockDoc",{version:"1.0.0",summary:"Retrieves a subset of a string of characters.",description:"",dataPorts:{"Input String":"the string of characters reference.",Start:"the start position into the string reference.",Length:"the length of the substring to create (if <doc-idp-name translate=no>Length</doc-idp-name> <= 0 then the substring length will stop at the end of the string reference).","Output String":"the generated sub string."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSwitchOnParameterBlockDoc",{version:"1.0.0",summary:"Switches the sequential stream to the corresponding output control port following the result of comparison between <doc-idp-name translate=no>TestValue</doc-idp-name> and the others input data.",description:"This block is dynamic thus the input data port count can be changed using the block configuration dialog.<br>The output control port count is synchronized on the input data port count.<br>The data ports handle all types.<br>This block switches the sequential stream to the <doc-ocp-name translate=no>ParameterK</doc-ocp-name> output control port if <doc-idp-name translate=no>TestValue</doc-idp-name> = <doc-idp-name translate=no>ValueK</doc-idp-name>.",dataPorts:{TestValue:"the parameter to be tested.",Value1:"the first reference parameter."},controlPorts:{In:"triggers the block execution.",None:"is activated if <doc-idp-name translate=no>TestValue</doc-idp-name> is not identical to any other input parameter.",Parameter1:"is activated if the value of <doc-idp-name translate=no>TestValue</doc-idp-name> is identical to the value of <doc-idp-name translate=no>Value1</doc-idp-name>."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSSyncFlowsBlockDoc",{version:"1.0.0",summary:"This block helps you synchronise your control and data flow. It will activate the output control port as soon as all input control ports have been activated. For a more complexe scenario (for example executing this block multiple times), please read the detailed description below.",description:"Each input control port has an internal counter which is incremented when the port has been activated and decremented when the block is exiting through the output control port <doc-ocp-name translate=no>Out</doc-ocp-name>. Every time a input control port is activated, the block is executed, and will exit through the output control port <doc-ocp-name translate=no>Out</doc-ocp-name> only if all the input control port internal counters are stricly greater than 0.",controlPorts:{In1:"triggers the block execution and increments the internal counter associated to this port.",In2:"triggers the block execution and increments the internal counter associated to this port.",Out:"is activated only when all input control port internal counters are strictly greater than 0. It will decrements all the input control port internal counters."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSWaitAllBlockDoc",{version:"1.0.0",summary:"Activates the output control port as soon as all input control ports have been activated.",description:"When all input control ports have been activated, the block activates the output control port and resets all the input control port.<br><br>All the activated input control ports remain active until the output control port is triggered.<br>However, the <doc-setting-name translate=no>Same Frame</doc-setting-name> setting will let you specify if the activation is required during the same frame.<br>If this setting is activated, the input control ports will be reset each execution step if the output control port has not been triggered.<br><br>This block is dynamic thus the input control port count can be changed using the block configuration dialog.",controlPorts:{In1:"triggers the block execution.",In2:"triggers the block execution.",Out:"is activated only when all input control ports have been activated once."},settings:{"Same Frame":"specifies whether the activation is required during the same execution step."},example:null});define("DS/EPSSchematicsCoreLibrary/assets/nls/EPSWaiterBlockDoc",{version:"1.0.0",summary:"Waits a given number of milliseconds before the activation of the <doc-ocp-name translate=no>Out</doc-ocp-name> output control port.",description:"The behavior of this block guarantees you the <doc-ocp-name translate=no>Out</doc-ocp-name> output port will not be activated before the provided <doc-idp-name translate=no>Delay</doc-idp-name> has been reached.<br>However, Javascript being asynchronous, nothing guarantees the <doc-ocp-name translate=no>Out</doc-ocp-name> output control port will be activated at the exact provided <doc-idp-name translate=no>Delay</doc-idp-name>!",dataPorts:{Delay:"the duration of the wait process (in milliseconds)."},controlPorts:{In:"triggers the block execution.",Out:"is activated when the process is completed (the <doc-idp-name translate=no>Delay</doc-idp-name> value has been reached)."},example:null});