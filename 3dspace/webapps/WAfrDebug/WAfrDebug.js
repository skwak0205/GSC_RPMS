define("DS/WAfrDebug/mod_Performances",[],function(){"use strict";var e="[WAFR][STD]",t="[WAFR][INC]",r=e+"b_",o=e+"e_",n=t+"b_",a=t+"e_";function i(){this._private=Object.create(null),this._private._probes=[]}function s(r){var o,i=performance.getEntriesByType("measure").filter(function(t){return-1!==t.name.indexOf(e)}).map(function(t){var o=t.name.replace(e,"");if(r&&r.removeTimestamp){var n=o.split("_");n.pop(),o=n.join("_")}return{name:o,startTime:t.startTime,duration:t.duration}}),s=performance.getEntriesByType("mark").filter(function(e){return-1!==e.name.indexOf(t)}),p=(o="name",s.reduce(function(e,t){const r=t[o];return e[r]=e[r]||[],e[r].push(t),e},{}));return{stdMeasures:i,incMeasures:Object.keys(p).filter(function(e){return-1!==e.indexOf(n)}).map(function(e){var t=e.replace(n,"");if(r&&r.removeTimestamp){var o=t.split("_");o.pop(),t=o.join("_")}var i={name:t,count:p[e].length},s=e.replace(n,a),m=p[e],c=m.length,l=p[s],u=l.length,f=Math.min(c,u);if(u>c)throw new Error("Internal Error");for(var d=0,g=0;g<f;++g)d+=l[g].startTime-m[g].startTime;return i.totalTime=d,i})}}return i.prototype.isProdMode=function(){var e=!0;return"true"===localStorage.getItem("wafr_log_performances")&&(e=!1),e},i.prototype.start=function(e){if(!this.isProdMode()){var t=this._private._probes,o=t.length,n=(new Date).valueOf(),a={label:e,timestamp:n},i=r+e+"_"+n;performance.mark(i);var s=performance.getEntriesByName(i);return a.start=s[s.length-1],t[o]=a,o}},i.prototype.stop=function(t){if(!this.isProdMode()){var n=this._private._probes[t];if(!n||!n.start)throw new Error("Trying to stop a measure without a corresponding start item");var a=n.label+"_"+n.timestamp,i=o+a,s=e+a;performance.mark(i);var p=performance.getEntriesByName(i);n.stop=p[p.length-1],performance.measure(s,r+a,i),p=performance.getEntriesByName(s),n.measure=p[p.length-1]}},i.prototype.log=function(e){if(!this.isProdMode())for(var t=0,r=this._private._probes,o=r.length,n=null;t<o;++t)(n=r[t]).measure?e.log(n):"INCREMENTAL"!==n.type||void 0===n.isActive||n.isActive||e.log(n)},i.prototype.startIncrementalProbe=function(e){if(!this.isProdMode()){var t=this._private._probes,r=t.length,o={label:e,timestamp:(new Date).valueOf(),type:"INCREMENTAL",totalTime:0,isActive:!0,count:0};return t[r]=o,r}},i.prototype.startIncrement=function(e){if(!this.isProdMode()){var t=this._private._probes[e];if(!t||t.lastStart||!t.isActive)throw new Error("Trying to start to increment a probe without defining it OR without stoping the previous increment transaction.");var r=t.label+"_"+t.timestamp,o=n+r;performance.mark(o);var a=performance.getEntriesByName(o);t.lastStart=a[a.length-1]}},i.prototype.stopIncrement=function(e){if(!this.isProdMode()){var t=this._private._probes[e];if(!(t&&t.lastStart&&t.isActive))throw new Error("Trying to stop to increment a probe without defining it OR without staring it.");var r=t.label+"_"+t.timestamp,o=a+r;performance.mark(o);var n=performance.getEntriesByName(o),i=n[n.length-1];t.totalTime+=i.startTime-t.lastStart.startTime,delete t.lastStart,++t.count}},i.prototype.stopIncrementalProbe=function(e){if(!this.isProdMode()){var t=this._private._probes[e];if(!t||!t.totalTime)throw new Error("Trying to stop a probe which does not exist");console.debug("⏱️",t.label+"_"+t.timestamp,"count:",t.count,"duration:",t.totalTime,"ms"),t.isActive=!1}},{Performances:i,logProbes:function(){var e=s(),t=e.stdMeasures,r=e.incMeasures;-1===window.navigator.userAgent.indexOf("MSIE ")&&-1===window.navigator.userAgent.indexOf("Trident/")&&(console.groupCollapsed("[WAFR] Performances"),console.groupCollapsed("[WAFR] Performances - Standard"),console.table(t,["name","startTime","duration"]),console.groupEnd("[WAFR] Performances - Standard"),console.groupCollapsed("[WAFR] Performances - Incremental"),console.table(r,["name","count","totalTime"]),console.groupEnd("[WAFR] Performances - Incremental"),console.groupEnd("[WAFR] Performances"));return{stdMeasures:t,incMeasures:r}},getProbes:s}});