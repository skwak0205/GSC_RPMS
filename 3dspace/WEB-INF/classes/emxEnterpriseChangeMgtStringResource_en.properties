#
#   EnterpriseChangeMgtStringResource.properties -- Properties file.
#
#   Copyright (c) 1992-2020 Dassault Systemes.
#   All Rights Reserved.
#   This program contains proprietary and trade secret information of MatrixOne,
#   Inc.  Copyright notice is precautionary only
#   and does not evidence any actual or intended publication of such program
#
#   static const char RCSID[] = "$Id: EnterpriseChangeMgtStringResource_en.properties 1.324.2.9 Wed Dec 24 11:23:01 2008 ds-ksuryawanshi Experimental $"
#

#----------------------------Impact Analysis----------------------------------
EnterpriseChangeMgt.Heading.ImpactAnalysis = $<type> $<name> $<revision> : Impact Analysis
EnterpriseChangeMgt.Label.ImpactAnalysis = $<type> $<name> $<revision> : Impact Analysis
EnterpriseChangeMgt.Label.AffectedItems = Affected Items
EnterpriseChangeMgt.alt.ImpactAnalysis = Impact Analysis of Change Action
EnterpriseChangeMgt.Label.ClonefromIA = Clone from IA
EnterpriseChangeMgt.Alert.Delete = You have chosen to delete the selected items from the database. Deleted items can no longer be accessed from the system.To continue with the deletion, click OK. To cancel the deletion, click Cancel.
EnterpriseChangeMgt.Command.CreateNew = Create New
EnterpriseChangeMgt.Command.Remove = Remove
EnterpriseChangeMgt.Command.Delete = Delete
EnterpriseChangeMgt.Command.AddExisting = Add Existing
EnterpriseChangeMgt.Heading.CreateNewIA = Create New Impact Analysis
EnterpriseChangeMgt.Label.Actions = Actions
EnterpriseChangeMgt.Label.AttributeGroup = Attribute Group
EnterpriseChangeMgt.Common.Name = Name
EnterpriseChangeMgt.Common.Description = Description
EnterpriseChangeMgt.Common.QualityImpact = Quality Impact
EnterpriseChangeMgt.Common.Severity = Severity
EnterpriseChangeMgt.Common.LifeCycleCost = Life Cycle Cost Issue
EnterpriseChangeMgt.Common.PrioritizationBenefit = Prioritization Benefit
EnterpriseChangeMgt.Common.RelativeCost = Relative Cost
EnterpriseChangeMgt.Common.RelativePenalty = Relative Penalty
EnterpriseChangeMgt.Common.RelativeRisk = Relative Risk
EnterpriseChangeMgt.Common.ImpactAnalysisEffort = Impact Analysis Effort
EnterpriseChangeMgt.Common.ImplementationEffort = Implementation Effort
EnterpriseChangeMgt.Common.ValidationEffort = Validation Effort
EnterpriseChangeMgt.Common.EstimatedScheduleImpact = Estimated Schedule Impact
EnterpriseChangeMgt.Common.ChangeAction = Change Action
#EnterpriseChangeMgt.Common.RTO = Responsible Org
EnterpriseChangeMgt.Common.RTO = Organization
#EnterpriseChangeMgt.Common.COAffectedItemsRTO = Responsible Org
EnterpriseChangeMgt.Common.COAffectedItemsRTO = Organization
EnterpriseChangeMgt.Common.TechAssignee = Assignee
EnterpriseChangeMgt.Common.Owner = Owner
EnterpriseChangeMgt.Common.State = State
EnterpriseChangeMgt.Common.CAState = Change Action State
EnterpriseChangeMgt.Common.ScheduleImpact = Schedule Impact
EnterpriseChangeMgt.Common.DefaultValue = Default Value

#-----------------------------Command-----------------------------
EnterpriseChangeMgt.Command.ChangeProperties= Properties
EnterpriseChangeMgt.Command.CASummaryView= Summary View
EnterpriseChangeMgt.Command.CreateChange = Create Change Order
EnterpriseChangeMgt.Command.CreateChangeAction = Create Change Action
EnterpriseChangeMgt.Command.CreateChangeRequest = Create Change Request
EnterpriseChangeMgt.Command.EditDetails = Edit
EnterpriseChangeMgt.Command.Edit = Edit 
EnterpriseChangeMgt.Command.AddToExisting = Add To Existing
EnterpriseChangeMgt.Command.AddToNew = Add To New
EnterpriseChangeMgt.Command.AddToNewCO=Add To New Change Order
EnterpriseChangeMgt.Command.AddToNewCA=Add To New As Proposed Change
EnterpriseChangeMgt.Command.AddToExistingCO=Add To Existing Change Order
EnterpriseChangeMgt.Command.AddToExistingCA=Add To Existing As Proposed Change
EnterpriseChangeMgt.Command.AddToExistingCR=Add To Existing As Affected Item
EnterpriseChangeMgt.Command.AddToNewCR=Add To New As Affected Item
EnterpriseChangeMgt.Command.TransferOwnership = Transfer Ownership
EnterpriseChangeMgt.Command.Transfer = Transfer
EnterpriseChangeMgt.Command.MyChanges = My Changes
EnterpriseChangeMgt.Command.ChangeOrder = Change Order
EnterpriseChangeMgt.Command.ChangeRequest = Change Request
EnterpriseChangeMgt.Command.ChangeAction = Change Action
EnterpriseChangeMgt.Command.ChangeTemplates = Change Templates
EnterpriseChangeMgt.Command.ChangeLegacy = Change Legacy
EnterpriseChangeMgt.Command.Issues = Issues
EnterpriseChangeMgt.Command.Discussions = Discussions
EnterpriseChangeMgt.Command.Subscription = Subscription
EnterpriseChangeMgt.Command.Reminders = Reminders
EnterpriseChangeMgt.Command.CreateNew = Create New
EnterpriseChangeMgt.Command.CopySelected = Copy Selected
EnterpriseChangeMgt.Command.TransferOwnershipCoordinator = To Change Coordinator
#EnterpriseChangeMgt.Command.TransferOwnershipInitiator = To Change Initiator
EnterpriseChangeMgt.Command.TransferOwnershipInitiator = To Originator
EnterpriseChangeMgt.Command.TransferOwnershipTechAssignee = To Assignee
EnterpriseChangeMgt.Command.TransferOwnershipSrTechAssignee = To Approver
EnterpriseChangeMgt.Command.ActiveDeactivate = Activate/Deactivate
EnterpriseChangeMgt.Command.ApproveReject = Approve/Reject
EnterpriseChangeMgt.Command.Hold = Hold
EnterpriseChangeMgt.Command.Cancel = Cancel
EnterpriseChangeMgt.Command.Delete = Delete
EnterpriseChangeMgt.Command.CO = Change Order
EnterpriseChangeMgt.Command.Change Action = Change Action
EnterpriseChangeMgt.Command.CR = Change Request

EnterpriseChangeMgt.Command.ProposedChanges = Proposed Changes
EnterpriseChangeMgt.Command.ECMCOAIDefaultView = Reset View
EnterpriseChangeMgt.Command.AffectedChangeActions = Change Actions

EnterpriseChangeMgt.Command.ReviewProposedChanges = Review Proposed Changes
EnterpriseChangeMgt.Command.Assignees = Assignees
EnterpriseChangeMgt.Command.ImpactAnalysis = Impact Analysis
EnterpriseChangeMgt.Command.Attachments = Attachments
EnterpriseChangeMgt.Command.ChangeOrchestration = Change Orchestration
EnterpriseChangeMgt.Command.AffectedItems = Affected Items
EnterpriseChangeMgt.Command.Dependency = Dependency
EnterpriseChangeMgt.Command.RelatedDocuments = Related Documents
EnterpriseChangeMgt.Command.Referential = Referential
EnterpriseChangeMgt.Command.ResolvedItems = Resolved Items
EnterpriseChangeMgt.Command.AddExisting = Add Existing
EnterpriseChangeMgt.Command.Remove = Remove
EnterpriseChangeMgt.Command.Download = Download
EnterpriseChangeMgt.Command.CheckOut=Checkout
EnterpriseChangeMgt.Command.SupportingDocs=Supporting Documents
EnterpriseChangeMgt.Command.ReferenceDocuments = Referential
EnterpriseChangeMgt.Command.AddPrerequisite = Add Prerequisite
EnterpriseChangeMgt.Command.RemovePrerequisite = Remove Prerequisite
EnterpriseChangeMgt.Command.Resume=Resume
EnterpriseChangeMgt.Command.Existing=Existing 
EnterpriseChangeMgt.Command.New=New 
EnterpriseChangeMgt.Command.AwaitingApproval=Awaiting Approval
EnterpriseChangeMgt.Command.TransferBack = Transfer back
#EnterpriseChangeMgt.Command.TransferBackToInitiator = Transfer back to Initiator
EnterpriseChangeMgt.Command.TransferBackToInitiator = Transfer back to Originator
EnterpriseChangeMgt.Command.CreateTemplate = Create Change Template
EnterpriseChangeMgt.Command.AddAffectedItem = Add Proposed Change
EnterpriseChangeMgt.Command.RemoveAffectedItem = Remove Proposed Change 
EnterpriseChangeMgt.Command.Filter.Attribute = Attribute
EnterpriseChangeMgt.Command.Filter = Filter
EnterpriseChangeMgt.Command.ImplementedItems = Realized Changes
EnterpriseChangeMgt.Command.CAAssignees = Change Action Assignees
EnterpriseChangeMgt.Command.RelatedCAs = Related CAs
EnterpriseChangeMgt.Command.RelatedItems = Related Items
EnterpriseChangeMgt.Command.ExistingCA=Existing Change Action
EnterpriseChangeMgt.Command.NewCA=New Change Action
EnterpriseChangeMgt.Command.ExistingCO=Existing Change Order
EnterpriseChangeMgt.Command.NewCO=New Change Order
EnterpriseChangeMgt.Command.MergeCA=Merge Change Action
EnterpriseChangeMgt.Command.ExistingCR=Existing Change Request
EnterpriseChangeMgt.Command.NewCR=New Change Request
EnterpriseChangeMgt.Command.AttributeExtension = Attribute Extension
EnterpriseChangeMgt.Command.EditTemplate = Edit Template
EnterpriseChangeMgt.Command.Attributes = Attributes 
EnterpriseChangeMgt.Command.AttributeGroup = Attribute Group: $<name>($<revision>)
EnterpriseChangeMgt.Command.AddFollower=Add Informed User
EnterpriseChangeMgt.Command.AddContributor=Add Assignee
EnterpriseChangeMgt.Command.AddRouteTemplate=Add Route Template
EnterpriseChangeMgt.Command.AddPeople=Add People
EnterpriseChangeMgt.Command.ChangeOrders= Change Orders
EnterpriseChangeMgt.Command.UndispatchedCA= Undispatched Change Action
EnterpriseChangeMgt.Command.SetChangeControl= Set Change Required
EnterpriseChangeMgt.Command.UnsetChangeControl= Unset Change Required
EnterpriseChangeMgt.Command.ChangeAssessedObject = Change Assessed Object
EnterpriseChangeMgt.Command.EditChangeTemplate = Edit Change Template
EnterpriseChangeMgt.Command.Collaborate = Collaborate
EnterpriseChangeMgt.Command.Done = Done
EnterpriseChangeMgt.Command.Pending = Pending
EnterpriseChangeMgt.Command.CreateExternalChange = Create External Change
EnterpriseChangeMgt.Command.AddExistingExternalChange = Add Existing External Change
EnterpriseChangeMgt.Command.Native = Native
EnterpriseChangeMgt.Command.External = External
EnterpriseChangeMgt.Command.Clear = Clear


#-----------------------------Menu----------------------------------

EnterpriseChangeMgt.Menu.ECM = Change Management
EnterpriseChangeMgt.Menu.ManageCO = Manage Change Order
EnterpriseChangeMgt.Menu.ManageCA = Manage Change Action
EnterpriseChangeMgt.Menu.ManageCT = Manage Change Templates
EnterpriseChangeMgt.Menu.TransferOwnership = Transfer Ownership
EnterpriseChangeMgt.Menu.Actions = Actions
EnterpriseChangeMgt.Menu.ChangeManagement = Change
EnterpriseChangeMgt.Menu.AddToChange = Add To Change    
EnterpriseChangeMgt.Menu.Actions = Actions
EnterpriseChangeMgt.Menu.MoveToActions=Move To
EnterpriseChangeMgt.Menu.MoveToAssign=Assign To
EnterpriseChangeMgt.Menu.AddTo = Add To
EnterpriseChangeMgt.Menu.CO = Change Order
EnterpriseChangeMgt.Menu.ChangeActions=Change Action
EnterpriseChangeMgt.Menu.AddRemove = Add and Remove
EnterpriseChangeMgt.Menu.ReviewAffectedItems = Review Proposed Changes 
EnterpriseChangeMgt.Menu.ChangeType = Change Type
EnterpriseChangeMgt.Menu.ECMMassChange = Mass Change
EnterpriseChangeMgt.Menu.AddExisting = Add Existing 
EnterpriseChangeMgt.Menu.AttributeGroup = Attribute Group
EnterpriseChangeMgt.Menu.ChangeRequest = Change Request
EnterpriseChangeMgt.Heading.ChangeOrders = Change Orders
#-----------------------------Field Labels----------------------------------
EnterpriseChangeMgt.Label.Policy = Policy
EnterpriseChangeMgt.Label.Type = Type
EnterpriseChangeMgt.Label.Description = Description
EnterpriseChangeMgt.Label.ReviewersList = Reviewers List
#EnterpriseChangeMgt.Label.ApprovalList =  Approval List
EnterpriseChangeMgt.Label.ApprovalList =  Approvers
EnterpriseChangeMgt.Label.Assignees =  Assignees
#EnterpriseChangeMgt.Label.ResponsibleOrganisation = Responsible Organization
EnterpriseChangeMgt.Label.ResponsibleOrganisation = Organization
EnterpriseChangeMgt.Label.ChangeCoordinator = Change Coordinator
EnterpriseChangeMgt.FileDownload.Download=Download
EnterpriseChangeMgt.FileCheckout.CheckOut=Checkout
EnterpriseChangeMgt.SupportingDocs=$<name> rev $<revision>:Supporting Documents
EnterpriseChangeMgt.Label.NAME = Name
EnterpriseChangeMgt.Label.CURRENT = State
EnterpriseChangeMgt.Label.REVISION = Revision
EnterpriseChangeMgt.Label.REV = Rev
EnterpriseChangeMgt.Label.ORIGINATED = Originated
EnterpriseChangeMgt.Label.MODIFIED = Modified
EnterpriseChangeMgt.Label.OWNER = Owner
EnterpriseChangeMgt.Label.Owner = Owner
#EnterpriseChangeMgt.Label.ORIGINATOR = Change Initiator
EnterpriseChangeMgt.Label.ORIGINATOR = Originator
EnterpriseChangeMgt.Label.ChangeTemplate = Change Template
#EnterpriseChangeMgt.Label.ResponsibleOrganization = Responsible Organization
EnterpriseChangeMgt.Label.ResponsibleOrganization = Organization
EnterpriseChangeMgt.Label.ReportedAgainst = Reported Against
EnterpriseChangeMgt.Label.RelatedCO = Related CO
EnterpriseChangeMgt.Label.RelatedCR = Related CR
EnterpriseChangeMgt.Label.TechnicalAssignee = Assignee
EnterpriseChangeMgt.Label.COAffectedItemsAssignee = Assignee
EnterpriseChangeMgt.Label.SrTechnicalAssignee = Reviewer
EnterpriseChangeMgt.Label.COAffectedItemsSrAssignee = Reviewer
EnterpriseChangeMgt.Label.TechnicalReviewerList = Reviewer List
EnterpriseChangeMgt.Label.COAffectedItemsReviewerList= Reviewer List
EnterpriseChangeMgt.Label.EstPlannedDate = Estimated Completion 
EnterpriseChangeMgt.Label.ActStartDate = Start Date
EnterpriseChangeMgt.Label.ActEndDate = End Date
EnterpriseChangeMgt.Label.CompletionDate = Completion Date
EnterpriseChangeMgt.Label.ChangeDue = Change Due
EnterpriseChangeMgt.Label.RequestedChange = Requested Change
EnterpriseChangeMgt.Label.TypeOfChange = Change Comments
EnterpriseChangeMgt.Label.CAStatus = Change Action Status
EnterpriseChangeMgt.Label.QuickActions = Actions
EnterpriseChangeMgt.Label.ChangeReason = Reason For Change
EnterpriseChangeMgt.Label.Severity = Severity
EnterpriseChangeMgt.Label.Abstract = Title
EnterpriseChangeMgt.Label.Title = Title
EnterpriseChangeMgt.Label.COPolicy = CO Policy
EnterpriseChangeMgt.Label.COType = CO Type
EnterpriseChangeMgt.Label.File = File
EnterpriseChangeMgt.Label.Edit = Edit
EnterpriseChangeMgt.Label.ChangeDescription = Change Description
EnterpriseChangeMgt.Label.CAOwner = Change Action Owner
EnterpriseChangeMgt.Label.Availability = Availability
#EnterpriseChangeMgt.Label.ReviewerList = Reviewer List
EnterpriseChangeMgt.Label.ReviewerList = Approvers
#EnterpriseChangeMgt.Label.ApproversList= Approval List 
EnterpriseChangeMgt.Label.ApproversList= Approvers
EnterpriseChangeMgt.Label.Name = Name
EnterpriseChangeMgt.Label.State = State
EnterpriseChangeMgt.Label.Originator = Originator
EnterpriseChangeMgt.Label.Owner = Owner
EnterpriseChangeMgt.Label.Status = Status
#EnterpriseChangeMgt.Label.TechnicalOrganization =Responsible Org
EnterpriseChangeMgt.Label.TechnicalOrganization =Organization
EnterpriseChangeMgt.Label.OwningCO = Owning Change
EnterpriseChangeMgt.Label.OwningOrg = Owning Organization
EnterpriseChangeMgt.Label.ApprovalStatus = Approval Status
EnterpriseChangeMgt.Label.CreateCO =  Create Change Order
EnterpriseChangeMgt.Label.MyChangesPortal = My Changes Portal
EnterpriseChangeMgt.Label.TopChannel = Top Channel
EnterpriseChangeMgt.Label.LeftChannel = Left Channel
EnterpriseChangeMgt.Label.RightChannel = Right Channel
EnterpriseChangeMgt.Label.DistributionList = Distribution List
#EnterpriseChangeMgt.Label.FollowerList = Follower List
EnterpriseChangeMgt.Label.FollowerList = Informed Users

EnterpriseChangeMgt.Label.DueDate =Due Date
EnterpriseChangeMgt.Label.ProcessSteps = Process Steps
EnterpriseChangeMgt.Label.Messages = Messages
EnterpriseChangeMgt.Label.Warning  = Warning
EnterpriseChangeMgt.Label.Reason = Reason
EnterpriseChangeMgt.Label.CAConnections=Change Action Connections
EnterpriseChangeMgt.Label.holdWarning=Move all the associate CAs to On Hold State
EnterpriseChangeMgt.Label.NewOwner = New Owner
EnterpriseChangeMgt.Label.TransferReason = Transfer Reason
EnterpriseChangeMgt.Label.RelatedCA = Related Change Action 
EnterpriseChangeMgt.Label.PlannedEndDate = Planned End
EnterpriseChangeMgt.Label.Dependency = Dependency
EnterpriseChangeMgt.Label.TypeOfDependency = Type Of Dependency
EnterpriseChangeMgt.Label.Site = Site
EnterpriseChangeMgt.Label.CIA = CIA
EnterpriseChangeMgt.Label.PrerequisiteType = Prerequisite Type
EnterpriseChangeMgt.Label.Organization=Organization
EnterpriseChangeMgt.Label.WorkPhoneNumber = Work Phone Number
EnterpriseChangeMgt.Label.E-mail = Email
EnterpriseChangeMgt.Label.FullName=Full Name
EnterpriseChangeMgt.Label.Company=Company
EnterpriseChangeMgt.Label.Reason=Reason
EnterpriseChangeMgt.Label.AffectedItems=Proposed Changes
EnterpriseChangeMgt.Label.TaskAssigned=Tasks Assigned
EnterpriseChangeMgt.Label.ApprovalStatus=Approval Status
EnterpriseChangeMgt.Label.Date = Date
EnterpriseChangeMgt.Label.Person = Person
EnterpriseChangeMgt.Label.Action = Action
EnterpriseChangeMgt.Label.DefaultType = Change Type
EnterpriseChangeMgt.Label.DefaultPolicy = Change Policy
EnterpriseChangeMgt.Label.ProposedEffectivity=Proposed Effectivity/Applicability
EnterpriseChangeMgt.Label.ProposedEffectivityInCOAffectedItems =Change Action Effectivity 
EnterpriseChangeMgt.Label.ChangeIntent = Change Intent
EnterpriseChangeMgt.Label.ReasonForChange = Reason For Change
EnterpriseChangeMgt.Label.ProposalStatus = Proposal Status
EnterpriseChangeMgt.Label.SwitchToHigherRevision = Revision Cue
EnterpriseChangeMgt.Label.SwitchToHigherRevisionTooltip = Higher Revision Exists
EnterpriseChangeMgt.Label.ResolutionItem = Resolution Item
EnterpriseChangeMgt.Label.CANumber = Change Action #
EnterpriseChangeMgt.Label.PrimaryAffectedItem = Proposed Change Info
EnterpriseChangeMgt.Label.ChangeActionInformationandAssignment = Change Action Information and Assignment
EnterpriseChangeMgt.Label.TYPE = Type
EnterpriseChangeMgt.Label.POLICY = Policy
EnterpriseChangeMgt.Label.ReviewList = Reviewers List
#EnterpriseChangeMgt.Label.ApproveList = Approval List
EnterpriseChangeMgt.Label.ApproveList = Approvers
EnterpriseChangeMgt.Label.EstCompletionDate = Estimated Completion
EnterpriseChangeMgt.Label.ExtendedAttributes = Extended Attributes
EnterpriseChangeMgt.Label.TemplateAttribute = $<name>: Attribute Extension
EnterpriseChangeMgt.Label.ChnageActionDetails = Change Action Details
EnterpriseChangeMgt.Label.GoverningCO = Governing CO
EnterpriseChangeMgt.Label.GoverningCR = Governing CR
EnterpriseChangeMgt.Label.TechnicalApproversList = Approvers List
EnterpriseChangeMgt.Label.ApproverListMember= Approver List Member
EnterpriseChangeMgt.Label.ActualStartDate = Actual Start
EnterpriseChangeMgt.Label.ActualCompletionDate = Actual Completion
EnterpriseChangeMgt.Label.ActualEndDate = Actual End 
EnterpriseChangeMgt.Label.ImplementedItems = Realized Changes
EnterpriseChangeMgt.Label.RelatedCAs = Related CAs
EnterpriseChangeMgt.Command.MassRelease = Mass Release
EnterpriseChangeMgt.Command.MassObsolete =Mass Obsolete
EnterpriseChangeMgt.Label.CloneBased = Clone Based On
EnterpriseChangeMgt.Label.FastTrackProcess = Fast Track Process
EnterpriseChangeMgt.Label.EnterpriseChangeMgtPortalHeader =  $<name> : Change Management
EnterpriseChangeMgt.Label.ECMChangeCOsCAsLeagcySummaryPageHeading = $<type> $<name> $<revision>:  Change Management
EnterpriseChangeMgt.Label.EnterpriseChangeMgtPowerView = Change Management
EnterpriseChangeMgt.Label.EstimatedStartDate = Estimated Start
EnterpriseChangeMgt.Label.EstimatedEndDate = Estimated End
EnterpriseChangeMgt.Label.CreateSketch = Create Sketch
EnterpriseChangeMgt.Label.EnterpriseChangeMgtPropertiesHeader = $<type> $<name> $<revision> : Properties
EnterpriseChangeMgt.Label.Contributor=Assignees
EnterpriseChangeMgt.Label.Follower=Informed Users
EnterpriseChangeMgt.Label.Reviewers=Approvers
EnterpriseChangeMgt.Label.EditCO = Edit CO
EnterpriseChangeMgt.Label.EditCR = Edit CR
EnterpriseChangeMgt.Label.EditCA = Edit Change Action
EnterpriseChangeMgt.Label.SummaryReport = Summary Report
EnterpriseChangeMgt.Label.Actual = Actual
EnterpriseChangeMgt.Label.CAs= CAs
EnterpriseChangeMgt.Label.DropZone= Drop Zone
EnterpriseChangeMgt.Label.Title= Title
EnterpriseChangeMgt.Label.ChangeDecomposition = Change Decomposition
EnterpriseChangeMgt.Label.Drop = Drop
EnterpriseChangeMgt.Label.ChangeAction = Change Action
EnterpriseChangeMgt.Label.Impact_Analysis_Effort = Impact Analysis Effort
EnterpriseChangeMgt.Label.Estimated_Schedule_Impact = Estimated Schedule Impact
EnterpriseChangeMgt.Label.Implementation_Effort = Implementation Effort
EnterpriseChangeMgt.Label.Validation_Effort = Validation Effort
EnterpriseChangeMgt.Label.NewWindow = New Window
EnterpriseChangeMgt.Label.ChangeControl= Change Required
EnterpriseChangeMgt.Label.Disabled= Disabled
EnterpriseChangeMgt.Label.EnabledAnyChange= Enabled;Any Change
EnterpriseChangeMgt.Label.Applicability=Applicability
EnterpriseChangeMgt.Label.ApplicabilityPropagation=Applicability Propagation
#added for feature - ECM subscriptions
# ----------------------Subscription Manager Events--------------------
EnterpriseChangeMgt.Label.ChangeSubscription=Change Subscriptions
EnterpriseChangeMgt.Label.Subscription=Subscriptions
EnterpriseChangeMgt.Label.SubscriptionHeader=$<type> $<name> $<revision>: Subscriptions
EnterpriseChangeMgt.Label.Events = Events

EnterpriseChangeMgt.Event.Completed_Change_Order=Change Completed
EnterpriseChangeMgt.Event.Generated_New_Change_Action=Generated New Change Action
EnterpriseChangeMgt.Event.Modification_Of_Attributes=Attribute Modified (Change Co-Ordinator)
EnterpriseChangeMgt.Event.Change_Order_OnHold=Change Order On-Hold
EnterpriseChangeMgt.Event.Change_Order_Cancelled=Change Order Canceled
EnterpriseChangeMgt.Event.Change_Request_OnHold=Change Request On-Hold
EnterpriseChangeMgt.Event.Change_Request_Cancelled=Change Request Canceled
EnterpriseChangeMgt.Event.Completed_Change_Request = Change Request Completed

EnterpriseChangeMgt.Event.Affected_Item_Added=Proposed Changes Added
EnterpriseChangeMgt.Event.Proposed_Changes_Added=Proposed Changes Added
EnterpriseChangeMgt.Event.Affected_Item_Removed=Proposed Changes Removed
EnterpriseChangeMgt.Event.Proposed_Changes_Removed=Proposed Changes Removed
EnterpriseChangeMgt.Event.Change_Ownership=Change Owner


EnterpriseChangeMgt.Event.Change_Action_On_Hold=Change Action On-Hold
EnterpriseChangeMgt.Event.Cancel_Change_Action=Cancel Change Action
EnterpriseChangeMgt.Event.Complete_Change_Action=Complete Change Action

EnterpriseChangeMgt.Event.Owner_Changed =Owner Changed
EnterpriseChangeMgt.Event.Change_Order_Completed = Change Order Completed
EnterpriseChangeMgt.Event.Attribute_Modified = Attribute Modified
EnterpriseChangeMgt.Event.Change_Order_On_Hold = Change Order On Hold
EnterpriseChangeMgt.Event.Change_Request_On_Hold = Change Request On-Hold
EnterpriseChangeMgt.Event.Change_Request_Completed = Change Request Completed

EnterpriseChangeMgt.Message.Subject.AffectedItemAdded = An Proposed Change has been added to 
EnterpriseChangeMgt.Message.Body.AffectedItemAdded = has been added as an Proposed Change 

EnterpriseChangeMgt.Message.Subject.AffectedItemRemoved = An Proposed Change has been removed from 
EnterpriseChangeMgt.Message.Body.AffectedItemRemoved = has been removed

EnterpriseChangeMgt.Message.Subject.ChangeOrderCompleted = Change Order $<name> has been completed.
EnterpriseChangeMgt.Message.Body.ChangeOrderCompleted = $<type> $<name> $<revision> is in Completed state and the change process is completed.

EnterpriseChangeMgt.Message.Subject.ChangeRequestCompleted  = Change Request $<name> has been completed.
EnterpriseChangeMgt.Message.Body.ChangeRequestCompleted = $<type> $<name> $<revision> is in Completed state and the change process is completed.


EnterpriseChangeMgt.Message.Subject.ChangeActionCompleted = Change Action <name> has been completed.
EnterpriseChangeMgt.Message.Body.ChangeActionCompleted = <type> <name> <revision> has been Completed. Description: <description>, Title : <title>.

EnterpriseChangeMgt.Message.Subject.GenerateNewChangeAction = New Change Action has been created under 
EnterpriseChangeMgt.Message.Body.GenerateNewChangeAction = New Change Action 

EnterpriseChangeMgt.Message.Subject.ModifyCOAttribute = Change Coordinator has been changed under 
EnterpriseChangeMgt.Message.Body.ModifyCOAttribute =  is the new Change Coordinator for  

EnterpriseChangeMgt.Message.Subject.ChangeOrderCancelled = Change Order $<name> has been canceled
EnterpriseChangeMgt.Message.Body.ChangeOrderCancelled = $<type> $<name> $<revision> in Canceled state

EnterpriseChangeMgt.Message.Subject.ChangeRequestCancelled  = Change Request $<name> has been canceled
EnterpriseChangeMgt.Message.Body.ChangeRequestCancelled = $<type> $<name> $<revision> in Canceled state

EnterpriseChangeMgt.Message.Subject.ChangeOrderOnHold = Change Order $<name> is On Hold
EnterpriseChangeMgt.Message.Body.ChangeOrderOnHold = $<type> $<name> $<revision> is in On Hold state

EnterpriseChangeMgt.Message.Subject.ChangeRequestOnHold = Change Request $<name> is On Hold
EnterpriseChangeMgt.Message.Body.ChangeRequestOnHold = $<type> $<name> $<revision> is in On Hold state

EnterpriseChangeMgt.Message.Subject.ChangeActionCancelledNotification = Change Action $<name> has been canceled
EnterpriseChangeMgt.Message.Body.ChangeActionCancelledNotification = $<type> $<name> $<revision> is in Canceled state

#below two are newly added by modeler
EnterpriseChangeMgt.Message.Subject.ChangeActionCancelled = Change Action <name> has been Canceled.
EnterpriseChangeMgt.Message.Body.ChangeActionCancelled = <type> <name> <revision> has been Canceled. Description: <description>, Title : <title>

EnterpriseChangeMgt.Message.Subject.ChangeActionOnHoldNotification = Change Action $<name> is On Hold
EnterpriseChangeMgt.Message.Body.ChangeActionOnHoldNotification = $<type> $<name> $<revision> is in On Hold state

EnterpriseChangeMgt.Message.isAddedUnder = is added under 

EnterpriseChangeMgt.Message.Subject.ProposedChangesFlowdownAddedUnder = New Flowdown Proposed Change added to Change Action : <caName>
EnterpriseChangeMgt.Message.Body.ProposedChangesFlowdownAddedUnder = New Flowdown Proposed Change was added.\nChange Action : <caName>\nChange Order : <coName>\nChange Request : <crName>

EnterpriseChangeMgt.Message.Subject.ProposedChangesFlowdownRemovedFrom = Flowdown Proposed Change removed from Change Action : <caName>
EnterpriseChangeMgt.Message.Body.ProposedChangesFlowdownRemovedFrom = Flowdown Proposed Change was removed.\nChange Action : <caName>\nChange Order : <coName>\nChange Request : <crName>

EnterpriseChangeMgt.Message.Subject.ProposedChangesAddedUnder = New Proposed Change added to Change Action : <caName>
EnterpriseChangeMgt.Message.Body.ProposedChangesAddedUnder = Object <objectType> <objectName> <objectRevision> was added as Proposed Change to :\nChange Action : <caName>\nChange Order : <coName>\nChange Request : <crName>

EnterpriseChangeMgt.Message.Subject.ProposedChangesRemovedFrom = Proposed Change removed from Change Action : <caName>
EnterpriseChangeMgt.Message.Body.ProposedChangesRemovedFrom = Object <objectType> <objectName> <objectRevision> previously attached as Proposed Change was removed from :\nChange Action : <caName>\nChange Order : <coName>\nChange Request : <crName>

#-------------------------------Mail Notifications---------------------

EnterpriseChangeMgt.Message.Subject.ChangeAssigned = The new Change has been assigned.
EnterpriseChangeMgt.Message.Description.ChangeAssigned = The new $<type> $<name> $<revision> has been assigned to you.
EnterpriseChangeMgt.Message.Prerequisites.Cancel = cannot be canceled as it is a pre-requisite for the following COs:
EnterpriseChangeMgt.Message.Prerequisites.Hold = cannot be On Hold as it is a pre-requisite for the following COs:
EnterpriseChangeMgt.Message.Subject.ChangeCompleted = <type> Completed Notification
EnterpriseChangeMgt.Message.Description.ChangeCompleted = The <type> <name> <revision> has been completed.
EnterpriseChangeMgt.Message.Subject.ChangeImplemented =  $<type> Realized Notification.
EnterpriseChangeMgt.Message.Description.ChangeImplemented = The $<type> $<name> $<revision> has been Realized.
EnterpriseChangeMgt.Message.Subject.ChangeCancelled = $<type> Canceled Notification.
EnterpriseChangeMgt.Message.Description.ChangeCancelled = The $<type> $<name> $<revision> has been Canceled.
EnterpriseChangeMgt.Message.Subject.ChangeResumed = $<type> Resume Notification .
EnterpriseChangeMgt.Message.Description.ChangeResumed = The $<type> $<name> $<revision> has been Resumed.
EnterpriseChangeMgt.Message.Subject.ChangeHold = $<type> Hold Notification .
EnterpriseChangeMgt.Message.Description.ChangeHold = The $<type> $<name> $<revision> has been placed on Hold.

#EnterpriseChangeMgt.Message.TransferBackToInitiator = Transferred back to Initiator
EnterpriseChangeMgt.Message.TransferBackToInitiator = Transferred back to Originator
EnterpriseChangeMgt.Message.TransferOwnershipOfCA = Transfer Ownership of Change Action
EnterpriseChangeMgt.Message.ApprovalTasksOfCA= Approval Tasks of Change Action

UnifiedChangeMgt.Message.Subject.ChangeCompleted = <type> Completed Notification
UnifiedChangeMgt.Message.Description.ChangeCompleted = The <type> <name> <revision> has been completed.

UnifiedChangeMgt.Message.Subject.ChangeCancelled = <type> Canceled Notification.
UnifiedChangeMgt.Message.Description.ChangeCancelled = <type> <name> <revision> has been canceled. Description: <description>, Title: <title>.

#-------------------------------Headers---------------------

EnterpriseChangeMgt.ChangeTemplate.Personal = Personal
EnterpriseChangeMgt.AttributeType.All = All
EnterpriseChangeMgt.ChangeTemplate.Enterprise = Enterprise
EnterpriseChangeMgt.AttributeChooser.NameMatches = Name Matches
EnterpriseChangeMgt.AttributeChooser.SelectAttributeGroup = Select Attribute Group
EnterpriseChangeMgt.AttributeChooser.Unused = Unused
EnterpriseChangeMgt.AttributeChooser.SelectAttribute = Select Attribute
EnterpriseChangeMgt.Change.AffectedItemsSummaryPageHeading=$<type> $<name> $<revision> : Proposed Changes
EnterpriseChangeMgt.Change.ProposedChangesSummaryPageHeading=$<type> $<name> $<revision> : Proposed Changes
EnterpriseChangeMgt.Heading.ChangeAssignees = $<name> rev $<revision>: Assignees
EnterpriseChangeMgt.Common.ReferenceDocumentsPageHeading=$<type> $<name> $<revision> : Referential
EnterpriseChangeMgt.Heading.ChangeContent= $<type> $<name> $<revision>: Content
EnterpriseChangeMgt.Heading.ChangeCollaberation= $<type> $<name> $<revision>: Collaboration
EnterpriseChangeMgt.Heading.ChangeProperties=$<type> $<name> $<revision>: Properties
EnterpriseChangeMgt.Common.RelatedDocumentsPageHeading =$<type> $<name> $<revision> : Related Documents
EnterpriseChangeMgt.Common.ReferentialPageHeading =$<type> $<name> $<revision> : Referential
EnterpriseChangeMgt.Common.SupportingDocsPageHeading =$<type> $<name> $<revision> : Supporting Documents
EnterpriseChangeMgt.SectionHeader.Basic = Basic
EnterpriseChangeMgt.SectionHeader.ChangeInfo = Change Details and Related Information
EnterpriseChangeMgt.SectionHeader.ChangeTemplateInfo = Change Template Details and Related Information
EnterpriseChangeMgt.SectionHeader.ReviewersandApprovers = Approvers 
EnterpriseChangeMgt.SectionHeader.CAApprovers=Approvers
EnterpriseChangeMgt.SectionHeader.Team = Members 
EnterpriseChangeMgt.SectionHeader.ExtendedAttributes = Extended Attributes  
EnterpriseChangeMgt.SectionHeader.InformationandStatus = Information and Status
EnterpriseChangeMgt.Heading.ResolvedItems=$<type> $<name> $<revision> : Resolved Items
EnterpriseChangeMgt.Heading.SupportingDocs=$<type> $<name> $<revision> : Supporting Documents

EnterpriseChangeMgt.Heading.Dependency=$<type> $<name> $<revision> : Dependency
EnterpriseChangeMgt.Heading.HoldCO = Hold Change Order
EnterpriseChangeMgt.Heading.HoldCA = Hold Change Action
EnterpriseChangeMgt.Heading.HoldCR = Hold Change Request
EnterpriseChangeMgt.Heading.Copy = Copy Change Order
EnterpriseChangeMgt.Heading.CopyCR = Copy Change Request
EnterpriseChangeMgt.Heading.EditCO = Edit Change Order Details
EnterpriseChangeMgt.Heading.EditCR = Edit Change Request Details
EnterpriseChangeMgt.Heading.EditCA = Edit Change Action Details
EnterpriseChangeMgt.Heading.CancelCO = Cancel Change Order
EnterpriseChangeMgt.Heading.CancelCA = Cancel Change Action
EnterpriseChangeMgt.Heading.CancelCR = Cancel Change Request
EnterpriseChangeMgt.Heading.CreateChange =Create Change Order
EnterpriseChangeMgt.Heading.hold_and_resume_history=Hold and Resume History
EnterpriseChangeMgt.Heading.ownership_history=Ownership History
EnterpriseChangeMgt.Heading.cancel_history=Cancel History
EnterpriseChangeMgt.Change.ImplementedItemsSummaryPageHeading=$<type> $<name> $<revision> : Realized Changes
EnterpriseChangeMgt.Heading.RelatedCAs=$<type> $<name> $<revision> : Related CAs
EnterpriseChangeMgt.Heading.RelatedItems=$<type> $<name> $<revision> : Related Items
EnterpriseChangeMgt.Heading.Subscription =$<type> $<name> $<revision> : Subscription Options
EnterpriseChangeMgt.Heading.Attributes =  Attributes

EnterpriseChangeMgt.Heading.CATransferOwnership = Transfer Ownership
EnterpriseChangeMgt.Heading.TransferOwnership = Transfer Ownership

EnterpriseChangeMgt.Heading.UndispatchedCA = Undispatched Change Action
EnterpriseChangeMgt.Heading.DispatchEvaluatedCAsSubheading  =To dispatch Change Actions, drag and drop them to the Change Orders Drop Zone column.
EnterpriseChangeMgt.Heading.ChangeOrderSummary = Change Order Summary
EnterpriseChangeMgt.Heading.ChangeOrder =  $<type> $<name> $<revision>: Change Order
EnterpriseChangeMgt.SectionHeader.ChangeManagement= Change Management
EnterpriseChangeMgt.Heading.CandidateItems =  $<type> $<name> $<revision>: Candidate Items
#------------------------------Transfer Ownership-----------
EnterpriseChangeMgt.Message.Subject.ChangeOwner = The owner of the Change has been changed.
EnterpriseChangeMgt.Message.Body.ChangeOwner = You have been assigned ownership of the $<type> $<name> $<revision>.
EnterpriseChangeMgt.Message.TransferOwnershipRequired = Transfer Ownership Required.
EnterpriseChangeMgt.Message..TransferOwnershipMessage = Please transfer the Ownership to Change Coordinator before promoting to Evaluate state by clicking on 'Transfer Ownership' command from the toolbar menu.

#------------------------------Warnings/Alerts/Notices-----------
EnterpriseChangeMgt.ChangeTemplate.MsgConfirm=Are you sure you want to permanently delete the selected templates from the database? Click OK to delete the templates, or Cancel to keep the templates.
EnterpriseChangeMgt.RemoveAttributeDialog.Confirm = Removing the attribute will affect all the Change Orders instantiated from this Change Template.To continue with the removal, click OK. To cancel the removal, click Cancel.
EnterpriseChangeMgt.RemoveAttributeGropDialog.Confirm = Are you sure want to remove the Attribute Group from the Change Template.To continue with the removal, click OK. To cancel the removal, click Cancel.
EnterpriseChangeMgt.Alert.TemplatePromoteError = User does not have demote access on : 
EnterpriseChangeMgt.Alert.TemplateDeleteError = User does not have delete access on : 
EnterpriseChangeMgt.Alert.TemplateDeleteError1 = The following Change Templates
EnterpriseChangeMgt.Alert.TemplateDeleteError2 = cannot be deleted as it has an associated Change Object
EnterpriseChangeMgt.Alert.COActions = This operation is valid only for Change Order
EnterpriseChangeMgt.Alert.CODeleteError = User does not have delete access on: 
EnterpriseChangeMgt.Alert.CRActions = This operation is valid only for Change Request
EnterpriseChangeMgt.Alert.CAActions = This operation is valid only for Change Action
EnterpriseChangeMgt.Alert.TemplatePromote = The objects must be in the same state in order to be mass promoted
EnterpriseChangeMgt.Alert.Remove =You have chosen to remove the selected items from the list. Removing an item does not delete it from the database.To continue with the removal, click OK. To cancel the removal, click Cancel.
EnterpriseChangeMgt.Alert.NoObjectSelected = No Object Selected
EnterpriseChangeMgt.CancelCODialog.WarningMsg=This will halt the Change Order's lifecycle and end the change management process for its connected items.Enter a reason and click Done, or click Cancel for the Change Order to continue through its lifecycle.
EnterpriseChangeMgt.CancelCADialog.WarningMsg=This will halt the Change Action's lifecycle and end the change management process for its connected items.Enter a reason and click Done, or click Cancel for the Change Action to continue through its lifecycle.
EnterpriseChangeMgt.CancelCRDialog.WarningMsg=This will halt the Change Request's lifecycle and end the change management process for its connected items.Enter a reason and click Done, or click Cancel for the Change Request to continue through its lifecycle.
EnterpriseChangeMgt.HoldCODialog.WarningMsg=This will halt the Change Order's lifecycle and hold the change management process for its connected items.Enter a reason and click Done, or click Cancel for the Change Order to continue through its lifecycle.
EnterpriseChangeMgt.HoldCADialog.WarningMsg=This will halt the Change Action's lifecycle and hold the change management process for its connected items.Enter a reason and click Done, or click Cancel for the Change Action to continue through its lifecycle.
EnterpriseChangeMgt.HoldCRDialog.WarningMsg=This will halt the Change Request's lifecycle and hold the change management process for its connected items.Enter a reason and click Done, or click Cancel for the Change Request to continue through its lifecycle.
EnterpriseChangeMgt.HoldCO.ConfirmMsg=This will halt the Change Order's lifecycle and hold the change management process for its connected items.Click OK to accept, or click Cancel for the Change Order to continue through its lifecycle.
EnterpriseChangeMgt.HoldCA.ConfirmMsg=This will halt the Change Action's lifecycle and hold the change management process for its connected items.Click OK to accept, or click Cancel for the Change Action to continue through its lifecycle.
EnterpriseChangeMgt.HoldCR.ConfirmMsg=This will halt the Change Request's lifecycle and hold the change management process for its connected items.Click OK to accept, or click Cancel for the Change Request to continue through its lifecycle.
EnterpriseChangeMgt.CancelCODialog.CancelCOConfirm=Cancelling this Change Order will cancel ALL Change Actions/Child Change Orders connected to this Change Order.To continue with the 'Change Order Cancel', click OK.To cancel the operation, click Cancel.
EnterpriseChangeMgt.CancelCADialog.CancelCAConfirm=Are you sure want to cancel the Change Action.To continue with the 'Change Action Cancel', click OK.To cancel the operation, click Cancel.
EnterpriseChangeMgt.CancelCRDialog.CancelCRConfirm=Cancelling this Change Request will cancel ALL Change Actions connected to this Change request.To continue with the 'Change Request Cancel', click OK.To cancel the operation, click Cancel.
EnterpriseChangeMgt.Warning.TransferOwnership = Warning : This operation cannot be reversed except by the new owner.
EnterpriseChangeMgt.ReasonField.MaximumLengthAlertMsg=The Object reason exceeds the maximum length allowed. Please try again.
EnterpriseChangeMgt.Message.strAssigneeRemove=Cannot remove. Context user and one of the selected assignee is the same.
EnterpriseChangeMgt.Warning.AlreadyConnectedAffectedItemsWarning=The following Proposed Changes are already connected to the selected Change Order :
EnterpriseChangeMgt.Warning.ContextItemAlreadyConnectedWarning=: is already connected to Change
EnterpriseChangeMgt.Message.ApprovalRequired=APPROVAL REQUIRED:
EnterpriseChangeMgt.Message.ApprovalMessage=Please review the changes done on each change action and approve by clicking on the below links.
EnterpriseChangeMgt.Warning.ObsoleteItemAlertMessage = Obsolete items cannot be added to a Change
#EnterpriseChangeMgt.Warning.AffectedItemHavingSameROs = Please select proposed changes with the same Responsible Organization
EnterpriseChangeMgt.Warning.AffectedItemHavingSameROs = Please select proposed changes with the same Organization
EnterpriseChangeMgt.Warning.AdminXMLNotLoaded = Please load the ECM Admin XML 
EnterpriseChangeMgt.Warning.ChangeCoordinator=Change Coordinator is not assigned
EnterpriseChangeMgt.Warning.AssigneesNotAssigned=Please assign assignee for Change Actions before moving to next state. 

EnterpriseChangeMgt.Warning.ProposedChangesConnected=At least one Proposed Change/Child Change order must be connected before promoting to Evaluation Review state.

EnterpriseChangeMgt.Warning.ProposedChangesConnectedForFastTrack=At least one Proposed Change/Child Change order must be connected before promoting to In Work state.
EnterpriseChangeMgt.Warning.ReviewRouteTemplateNotAssigned = Approvers are not assigned
EnterpriseChangeMgt.Warning.RouteNotCompleted=State blocking route is not completed
EnterpriseChangeMgt.Warning.AffectedCAsNotComplete=Please approve all affected Change Actions
EnterpriseChangeMgt.Warning.ApprovalRouteTemplateNotAssigned= Approval route template is not assigned
EnterpriseChangeMgt.Message.Subject.ChangeAssigned = The new $<type> has been assigned.
EnterpriseChangeMgt.Message.Description.ChangeAssigned = The new $<type> $<name> $<revision> has been assigned to you.

EnterpriseChangeMgt.Warning.DependencyCheckBeforeComplete=Cannot release change before releasing all dependency
EnterpriseChangeMgt.Error.UnsupportedClient = Unsupported Client
EnterpriseChangeMgt.Warning.PrerequisiteCheckBeforeImplement = Cannot implement change before implementing all prerequisites
EnterpriseChangeMgt.Warning.DeleteWarningMsg=You have chosen to delete the selected items from the database.Deleted items can no longer be accessed from the system.To continue with the deletion, click OK. To cancel the deletion, click Cancel.

EnterpriseChangeMgt.Warning.InvalidUpdateForRequestedChange =Invalid options selected for one or more Proposed Changes.

EnterpriseChangeMgt.Warning.EditAllWithNewRevision = The proposed changes has a new revision on this Change Action.You cannot update the requested change value for the same.
EnterpriseChangeMgt.Warning.InvalidUpdateForReqChangeSameCO = is connected to Change Actions of the same Change Order.
EnterpriseChangeMgt.Warning.InvalidUpdateForReqChangeMultipleCA = is connected to multiple Change Actions.
EnterpriseChangeMgt.Warning.RemoveSubscriptions= All the subscriptions will be removed from the selected items.To continue with the removal, click OK. To cancel the removal, click Cancel.
EnterpriseChangeMgt.Notice.RemoveImplementedItems = Some of the selected items cannot be removed, since the Requested Change for this Realized Changes are For Release.
EnterpriseChangeMgt.Error.XMLDefinitionRequired = Invalid selection, missing definition for the selected objects type/policies in the Admin XML.
EnterpriseChangeMgt.Warning.TransferOwnershipMsg =  The selected object(s) are past Evaluation Review state so ownership cannot be transferred
EnterpriseChangeMgt.Warning.TransferOwnershipMsgForCO =  The selected object(s) cannot be transferred because of following reason(s): 1. The selected object(s) are In work state or beyond  2. Context user does not have access to perform this operation.
EnterpriseChangeMgt.Warning.TransferOwnershipMsgForCR =  The selected object(s) cannot be transferred because of following reason(s): 1. The selected object(s)  are past Create state  2. Context user does not have access to perform this operation.
EnterpriseChangeMgt.Warning.TransferOwnershipMsgForCA =  The selected object(s) cannot be transferred because of following reason(s): 1. The selected object(s)  are past In Work state  2. Context user does not have access to perform this operation.
EnterpriseChangeMgt.Warning.CancelMsg = The selected object(s) must be in same state and not in Canceled state
EnterpriseChangeMgt.Message.MergeCA = Please select Multiple Change Actions to merge

EnterpriseChangeMgt.Warning.ProposedChangeConnectedtoCR=At least one Proposed Change must be connected before promoting to Evaluation Review state.
EnterpriseChangeMgt.Warning.ConnectedCONotComplete=Change Request promotion failed. Connected Change Order is not in Completed state.
EnterpriseChangeMgt.Notice.CRIsNotConnectedToCO = Change Request promotion failed. At least one Change Order must be connected before promoting to Completed state.
EnterpriseChangeMgt.Warning.transferOwnertoChangeCoordinator = Change Request promotion failed. Please transfer ownership to Change Coordinator before promoting to Evaluate state.

EnterpriseChangeMgt.Warning.deleteConnectedObjects = All of the proposed changes cannot be deleted from the Change Action context, because they would cause the Change Action to be deleted.
EnterpriseChangeMgt.Message.COHoldErrormsg =  The above object(s) cannot be put On Hold because of following reason(s): 1. The selected object(s) should not be in In Work/In Approval/Completed/Implemented/On Hold/Canceled state  2. Context user does not have access to perform this operation.
EnterpriseChangeMgt.Message.CRHoldErrormsg = The above object(s) cannot be put On Hold because of following reason(s): 1. The selected object(s) should not be in In Process CO/Completed/On Hold/Canceled state 2. Context user does not have access to perform this operation.
EnterpriseChangeMgt.Message.COCancelErrormsg = The selected object(s) cannot be canceled because of following reason(s): 1. The selected object(s) should not be in In Work/In Approval/Completed/Implemented/On-Hold/Canceled state  2. Context user does not have access to perform this operation.
EnterpriseChangeMgt.Message.CRCancelErrormsg = The selected object(s) cannot be canceled because of following reason(s): 1. The selected object(s) should not be in In Process CO/Completed/On Hold/Canceled state  2. Context user does not have access to perform this operation.
EnterpriseChangeMgt.Message.IADeleteErrormsg   = The selected object(s) cannot be Deleted since it is in Completed State.
EnterpriseChangeMgt.Warning.ImpactAnalysisNotCompleted = Please complete the Impact Analysis for at least one connected Change Action before promoting it to next state.
EnterpriseChangeMgt.Alert.EstimatedStartDate = Invalid Date: Estimated Start Date should not be before Current Date. Please enter the valid Date.

EnterpriseChangeMgt.Alert.DueDate = Invalid Date: Due date should not be less than Estimated Start Date. Please enter a valid date.

EnterpriseChangeMgt.Alert.DueDateCheckStartDate = Estimated Start Date is empty: Please assign Estimated Start Date. Due Date should be greater than Estimated Start Date

EnterpriseChangeMgt.Alert.DueDateGreaterThanCurrent = Invalid Date: Due Date should be Greater than Current Date. Please enter the valid Date.

EnterpriseChangeMgt.Warning.deleteCO = The selected object(s) cannot be deleted because of following reason(s): 1. The selected CO object(s) have proposed changes  2. Context user does not have access to perform this operation.

EnterpriseChangeMgt.Warning.deleteCR =The selected object(s) cannot be deleted because of following reason(s): 1. The selected CR object(s) have proposed changes  2. Context user does not have access to perform this operation  3. The selected object is past Draft state.
EnterpriseChangeMgt.Alert.RTOErrorMsg = Selected Items are not mapped to same Responsible Technical Organization
EnterpriseChangeMgt.Alert.RTOAndAssigneeErrorMsg = Selected Items are not mapped to same Responsible Technical Organization (or) not assigned to same assignee

#EnterpriseChangeMgt.Alert.RTOErrorMsgForProposedChanges = Please select the Proposed Changes which are mapped to same Responsible Organization.
EnterpriseChangeMgt.Alert.RTOErrorMsgForProposedChanges = Please select the Proposed Changes which are mapped to same Organization.
EnterpriseChangeMgt.Alert.IntegerValueAlertForSB = Please enter integer value
EnterpriseChangeMgt.Alert.IntegerValueAlert = Please enter integer value for field
EnterpriseChangeMgt.Alert.AlphanumericValueAlert = Please enter alphanumeric characters for field

EnterpriseChangeMgt.Alert.RequestedChangeMajorReviseNotSupported = Requested change Revise not supported.
EnterpriseChangeMgt.Alert.RequestedChangeMinorReviseNotSupported = Requested change Minor Revise not supported.
EnterpriseChangeMgt.Alert.CAPrepareStateErrorMsg =  All of the selected Change Actions are not in the Draft state.
EnterpriseChangeMgt.Warning.InvalidUseOwnerChange = Context user does not have access to perform this operation.
EnterpriseChangeMgt.Warning.InvalidStateOwnerChangerMsg = The  object is past the Evaluation Review state.
EnterpriseChangeMgt.Warning.InvalidStateCCChangerMsg=The  object is past the Evaluate state.
EnterpriseChangeMgt.Warning.InvalidPolicyCChangerMsg = This operation cannot be saved because object does not use the Formal Change policy.
EnterpriseChangeMgt.Alert.InvalidObjectSelectInProjectMsg = All of the selected Object are not belong to same project..
EnterpriseChangeMgt.Warning.InvalidOperationMsgForProxyObj =  This operation is not supported on proxy object.
EnterpriseChangeMgt.Warning.TransferOwnershipAccessMsgForCA =  The selected object(s) cannot be transferred because context user does not have access to perform this operation.
EnterpriseChangeMgt.Alert.ProxyChange = This operation is valid only for Change Proxy
EnterpriseChangeMgt.Error.ApprovalRouteTemplateSupport = Only Approval Route Templates are supported
#EnterpriseChangeMgt.Alert.SameReviewerApprovalListRouteTemplateCO = Cannot use same Route Template for Reviewer List and Approval List for Change Order/Change Template.
EnterpriseChangeMgt.Notice.InaccessibleObjectFound = There are one or more proposed change(s) which are not accessible to user
EnterpriseChangeMgt.Alert.SameReviewerApprovalListRouteTemplateCO = Cannot use same Route Template for Reviewer List and Approvers for Change Order/Change Template.
EnterpriseChangeMgt.Alert.ResolutionItemCannotBeAddedForRequestedChange = Resolution Item can only be added to Proposed Changes having Requested Change as "Update" or "None".

UnifiedChangeMgt.Notice.ChangeActionResumeCROrCOOnHold = Connected Change Order or Change Request is on hold. Change Action cannot be resumed
#----------------------------Change Assessment----------------------------------

EnterpriseChangeMgt.Alert.AlreadyProposed = The selected items are already connected as Proposed Changes to the Change. Please select different Items or Change.

EnterpriseChangeMgt.Alert.AlreadyCandidate = The selected items are already connected as Candidate Items/Proposed Changes to the Change. Please select different Items or Change.
EnterpriseChangeMgt.Alert.CandidateItemAddedSuccessful = The selected items are successfully added as Candidate Items

EnterpriseChangeMgt.Alert.ProposedChangeAddedSuccessful = The selected items are successfully added as Proposed Changes
EnterpriseChangeMgt.Confirm.SomeCandidateItemsProposed = Some of the items are already connected as Candidate Items/Proposed Changes to the Change so those Items will be skipped. To continue, click OK. To cancel, click Cancel

EnterpriseChangeMgt.Confirm.SomeProposedChangesProposed = Some of the items are already connected as Proposed Changes to the Change so those items will be skipped. To continue, click OK. To cancel, click Cancel
EnterpriseChangeMgt.Alert.SelectOne = Please select only one item
EnterpriseChangeMgt.Command.CandidateItem = Candidate Items
EnterpriseChangeMgt.Command.AddExistingCandidate = Add Existing
EnterpriseChangeMgt.Command.RemoveCandidate = Remove

EnterpriseChangeMgt.Command.MoveAsProposedChanges = Move As Proposed Changes
EnterpriseChangeMgt.Command.MoveToChange = Move To Change
EnterpriseChangeMgt.Command.CopyToChange = Copy To Change
EnterpriseChangeMgt.Label.Actions = Actions
EnterpriseChangeMgt.Label.AttributeGroup = Attribute Group
EnterpriseChangeMgt.Command.AddRelatedItem = Add Related Item
EnterpriseChangeMgt.Command.AddChildAndRelated = Add Child and Related Item
EnterpriseChangeMgt.Command.AddParentAndRelated = Add Parent and Related Item

EnterpriseChangeMgt.Command.AddRelatedAsProposedChanges = Add Related As Proposed Changes
EnterpriseChangeMgt.Command.AddRelatedAsCandidate = Add As Candidate Item
EnterpriseChangeMgt.Command.ChangeAssessment = Change Assessment
EnterpriseChangeMgt.Command.ChangeContent = Content
EnterpriseChangeMgt.Command.CAContent = Content
EnterpriseChangeMgt.Command.ChangeCollaberation = Collaboration
EnterpriseChangeMgt.Message.InvalidRelatedItem = Object not allowed in Proposed Changes.

#---------------------------------History----------------------------------------------------
EnterpriseChangeMgt.History.ownership_history=ownership history
EnterpriseChangeMgt.History.hold_history=hold history
EnterpriseChangeMgt.History.resume_history=resume history
EnterpriseChangeMgt.History.cancel_history=cancel history
EnterpriseChangeMgt.History.clone_history=clone history
EnterpriseChangeMgt.History.comment=comment
EnterpriseChangeMgt.History.NewOwner=New Owner
EnterpriseChangeMgt.History.TransferComments=Transfer Comments

#-------------------------Change Action Triggers---------------------------------------------------

EnterpriseChangeMgt.Notice.DueDate=Please set the Due Date on Change Action
EnterpriseChangeMgt.Notice.IACompletion=The following Impact Analyses are not Completed
EnterpriseChangeMgt.Notice.TechAssignee=Please specify assignee on the Change Action
EnterpriseChangeMgt.Notice.HardDependency=Following prerequisite Change Actions which are hard dependencies needs to be in Approved or beyond state.  
EnterpriseChangeMgt.Notice.validateImplementedItems= Some of the Realized Changes are connected to the below Change Actions, which are in In Work state.    
EnterpriseChangeMgt.Notice.LatestRevisionAlreadyExisting= The object has Latest Revision in the system
EnterpriseChangeMgt.Message.Subject.ChangeActionAssigned = The new Change Acion has been assigned.
EnterpriseChangeMgt.Message.Description.ChangeActionAssigned = The new $<type> $<name> $<revision> has been assigned to you. 
EnterpriseChangeMgt.Message.Description.ChangeActionCancelled = The $<type> $<name> $<revision> has been Canceled. 
EnterpriseChangeMgt.Message.Subject.ChangeActionCancelled = The new Change Acion has been Canceled.
EnterpriseChangeMgt.Message.Description.ChangeActionOnHold = The $<type> $<name> $<revision> has been kept On Hold. 
EnterpriseChangeMgt.Message.Subject.ChangeActionOnHold = The new Change Acion has been kept On Hold.
EnterpriseChangeMgt.Message.Subject.ChangeResume = The new Change Acion has been Resumed.
EnterpriseChangeMgt.Message.Description.ChangeResume = The $<type> $<name> $<revision> has been Resumed.
EnterpriseChangeMgt.Notice.RouteTemplate = Please assign Reviewer or Approver List to Change Action
EnterpriseChangeMgt.Message.Subject.ChangeOrder = The Change Order has been promoted to In Approval state.
EnterpriseChangeMgt.Message.Subject.ChangerRequest = The Change Request has been promoted to Completed state.
EnterpriseChangeMgt.Message.Description.ChangeOrder = The <type> <name> <revision> <description> has been promoted to In Approval state.
EnterpriseChangeMgt.Message.Description.ChangerRequest = The $<type> $<name> $<revision> has been promoted to Completed state.

EnterpriseChangeMgt.Notice.ForRelease = <type> <name> <revision> cannot added as Proposed Change for Release. It is already connected to a Change object that is not Completed
EnterpriseChangeMgt.Notice.ForObsolescence = <type> <name> <revision> cannot added as Proposed Change for Obsolescence. It is already connected to a Change object that is not Completed
EnterpriseChangeMgt.Notice.PriorToReleasedState = should be in a state prior to Released state
EnterpriseChangeMgt.Notice.InReleasedState = should be in or beyond Released state
EnterpriseChangeMgt.Notice.NonGovernedTypes = are not change governed objects.
EnterpriseChangeMgt.Notice.NotConnectedAsChangeCoordinator = 'Context user cannot be connected as Change Coordinator.'
EnterpriseChangeMgt.Notice.EstDate=Please set the Estimated Start Date and Completion Date on Change Request
EnterpriseChangeMgt.Notice.EstStartDate=Please set the Estimated Start Date on Change Request
EnterpriseChangeMgt.Notice.EstEndDate=Please set the Estimated Completion Date on Change Request

EnterpriseChangeMgt.Notice.ConnectedCONotInInWorkState = Change Action promotion failed. Connected Change Order is not in In Work state.
EnterpriseChangeMgt.Notice.ConnectedCOInOnHoldState = Change Action promotion failed. Connected Change Order is in On Hold state.
EnterpriseChangeMgt.Notice.COIsNotConnectedToCA = Change Action promotion failed. Change Order is not connected to Change Action.
EnterpriseChangeMgt.Create.AttributeGroup = Create Attribute Group

#----------------------------------- Range Values ------------------------------------------
EnterpriseChangeMgt.Range.FastTrackProcess.Immediate = Immediate
EnterpriseChangeMgt.Range.FastTrackProcess.Deferred = Deferred
EnterpriseChangeMgt.Range.Requested_Change.Flowdown = Flowdown 

#-----------------------Reports------------------------------------
EnterpriseChangeMgt.Common.HTMLReport = Html Report
EnterpriseChangeMgt.Common.SummaryReportHeader = Summary Report
EnterpriseChangeMgt.SummaryReport.NoCheckIn.ErrorMessage=Problem while generating PDF Report
EnterpriseChangeMgt.Common.Generated=generated
EnterpriseChangeMgt.Common.Attributes=Attributes
EnterpriseChangeMgt.Common.Approvals=Approvals
EnterpriseChangeMgt.Common.Routes = Routes
EnterpriseChangeMgt.Common.Tasks=Tasks
EnterpriseChangeMgt.Common.Approval=Approval
EnterpriseChangeMgt.Common.Review = Review
EnterpriseChangeMgt.Common.Route = Route
EnterpriseChangeMgt.Common.Signer = Signer
EnterpriseChangeMgt.SummaryReport.NoSignOrRoutes=No Signatures or Routes In Approvals
EnterpriseChangeMgt.Routes.ScheduleCompDate=Due Date
EnterpriseChangeMgt.Common.NoObjectsFound=No Objects found.
EnterpriseChangeMgt.Summary.RouteName=RouteName
EnterpriseChangeMgt.Summary.TaskName=Task
EnterpriseChangeMgt.Summary.TaskAssignee=Assignee
EnterpriseChangeMgt.Summary.TaskAction=Instruction
EnterpriseChangeMgt.TaskSummary.NoTasksFound=No Tasks Found

EnterpriseChangeMgt.Change.NoProposedChangesConnected=No Proposed Changes Connected
EnterpriseChangeMgt.Change.NoCandidateItemsConnected=No Candidate Items Connected
EnterpriseChangeMgt.Change.NoReferenceDocsConnected=No Referential found
EnterpriseChangeMgt.Change.NoImplementedItemsConnected=No Realized Changes Connected
EnterpriseChangeMgt.Change.NoChangeOrderConnected= No Change Orders Connected
EnterpriseChangeMgt.SummaryReport.NoCheckOut.ErrorMessage=Summary Report PDF file might not be checked into the object.
EnterpriseChangeMgt.SummaryReport.NoCheckOut.RenderMessage=Generate the summary report by clicking Refresh Summary Report in the Actions menu.
EnterpriseChangeMgt.Common.SummaryReport.RefreshConfirmationMessage=This command will refresh the cached copy of the report. This may take several minutes.To view the PDF file, click Refresh Summary Report on the Actions menu.Click OK to continue, or Cancel to replace the current copy of the report.
EnterpriseChangeMgt.Common.SummaryReport.RefreshSummaryReport=Refresh Summary Report
EnterpriseChangeMgt.Common.PdfSummary=PDF Report
EnterpriseChangeMgt.Common.SummaryReportTitle = Change Summary Report
#3D Live Examine
EnterpriseChangeMgt.3DLiveExamine.Show3DLive=Show
EnterpriseChangeMgt.3DLiveExamine.Hide3DLive=Hide
EnterpriseChangeMgt.Command.ECM3DAffectedItems=Proposed Changes
EnterpriseChangeMgt.Command.ECM3DAffectedItemsCOCR=Change Proposed Changes
EnterpriseChangeMgt.Command.ECM3DliveLaunch=3D Live Examine
#ECM Widgets
EnterpriseChangeMgt.Widget.MyChanges = My Changes
emxEnterpriseChangeMgt.WidgetTitle.ECM_Experience_MyChangeRequestsAndChangeOrders = Changes
EnterpriseChangeMgt.Widget.Routes = Routes :
EnterpriseChangeMgt.Widget.Tasks=Tasks : 
EnterpriseChangeMgt.Widget.ReferenceDocuments = Referential :
emxEnterpriseChangeMgt.WidgetTitle.ECM_Experience_MyChangeActions = Change Actions
emxEnterpriseChangeMgt.WidgetTitle.ECM_Experience_MyLegacyChanges = ECRs/ECOs
emxEnterpriseChangeMgt.WidgetTitle.ECM_Experience_MyManufacturingChanges = Manufacturing Changes
EnterpriseChangeMgt.Widget.ChangeActionsLabel = Change Actions
EnterpriseChangeMgt.Widget.ChangeActionsMouseOverText = Please click here to view the Change Actions

EnterpriseChangeMgt.Widget.ProposedChangesMouseOverText = Please click here to view the Proposed Changes

EnterpriseChangeMgt.Widget.ProposedChanges = Proposed Changes
EnterpriseChangeMgt.Widget.InactiveProgress = Not Started
EnterpriseChangeMgt.Widget.InworkProgress = In Progress
EnterpriseChangeMgt.Widget.CompleteButLateProgress   = Completed but late
EnterpriseChangeMgt.Widget.LateProgress = Late
EnterpriseChangeMgt.Widget.CompleteProgress = Completed
EnterpriseChangeMgt.SummaryReport.NoCRAssigned = No Change Request Assigned
EnterpriseChangeMgt.SummaryReport.NoCRConnected = No Change Order connected
#Custom Attributes
EnterpriseChangeMgt.Label.CustomAttributes=Custom Attributes
EnterpriseChangeMgt.widget.EstPlannedDate = Est. Completion

#My Changes Summary tables
EnterpriseChangeMgt.ColumnHeader.Owner   = Owner
#EnterpriseChangeMgt.ColumnHeader.ChangeInitiator   = Initiator
EnterpriseChangeMgt.ColumnHeader.ChangeInitiator   = Originator
EnterpriseChangeMgt.ColumnHeader.ChangeCoordinator = Coordinator
#EnterpriseChangeMgt.ColumnHeader.Organization= Responsible Organization
EnterpriseChangeMgt.ColumnHeader.Organization= Organization
EnterpriseChangeMgt.Command.ECMCOAIDefaultView=Default View
EnterpriseChangeMgt.Common.OpenNewWindowToolTip = Open in new window
EnterpriseChangeMgt.Common.RMBDemote = Demote
EnterpriseChangeMgt.Common.RMBPromote = Promote
EnterpriseChangeMgt.Common.LifeCycle=Lifecycle
EnterpriseChangeMgt.Common.ECMReloadCache = Reload ECM Cache
EnterpriseChangeMgt.Alert.ReloadSuccessful = ECM Cache reloaded successfully

EnterpriseChangeMgt.Select.Effectivity = Selected Change object does not have Effectivity defined.
EnterpriseChangeMgt.Label.hold=Hold

#Entries for triggers coming from Modeler
UnifiedChangeMgt.Notice.CaIsNotConnectedToReviewersNorRouteTemplate  = Change Action needs either a 'Route Template' or Approver(s).
UnifiedChangeMgt.Notice.CaIsConnectedToNonCompleteCo  = Change Action is connected to <type> <name> which is not '<Complete>'.
UnifiedChangeMgt.Notice.CaIsConnectedToNonInWorkCo = Change Action is connected to <type> <name> which is not '<In Work>'.
UnifiedChangeMgt.Notice.CaStandaloneNotAllowed = Standalone Change Action is not allowed. Please connect it to a Change Order.
UnifiedChangeMgt.Notice.ProposedRealizedNotInFrozenState = At least a Realized Change or a Proposed Change which is required to be in Frozen state but is in another state
UnifiedChangeMgt.Notice.UnableToAutomatizeCa = Change automation was not possible because one or more Proposed Change generated an error upon its automation
UnifiedChangeMgt.Notice.CaOnHold = Operation cannot be processed as Change is on hold 
UnifiedChangeMgt.Notice.CaCrOnly=Change Action cannot be processed further because its not linked to any Change Order 
EnterpriseChangeMgt.Notice.ReleaseStateNotDefined =  <type> <name> <revision> does not have Release state defined in the configuration file
EnterpriseChangeMgt.Notice.ObsoleteStateNotDefined = <type> <name> <revision> does not have Obsolete state defined in the configuration file
UnifiedChangeMgt.Notice.GenericECMTransitionFailure = Maturity state change of object is not allowed because the associated Change Action is not in the appropriate maturity state. Object needs to be in its Frozen state for Change Action Approval. Change Action needs to be before its Approval state, for the associated objects to be modified or maturity change
UnifiedChangeMgt.Notice.ChangeDeleteAfterInWork = The Change Action is in '<In Work>' or beyond state so it cannot be deleted
UnifiedChangeMgt.Notice.ChangeDeleteRealized = The Change Action has realized changes associated with it so it cannot be deleted
UnifiedChangeMgt.Notice.ChangeDeleteGroup = The Change Action is part of a Group so it cannot be deleted
UnifiedChangeMgt.Notice.ChangeDeleteDependencies = This Change has dependencies so it cannot be deleted
UnifiedChangeMgt.Notice.ObjectNotAccesible = The operation failed because the object was deleted or cannot be accessed.
UnifiedChangeMgt.Notice.ReviewersInvalidForGroups = ECM group approver check raised an error. Please check that your approvers and owner are compliant with constraints defined in ECMConfig page.
UnifiedChangeMgt.Notice.UnableToRemoveChangeControlImpactFound = Change Required cannot be removed. <type> <name> <revision> was modified previously using a Change Action
UnifiedChangeMgt.Notice.UnableToRemoveChangeControlRelationshipImpactFound = Change Required cannot be removed. <type> was modified previously using a Change Action
UnifiedChangeMgt.Notice.UnableToSetChangeControlStrictModeAlreadyOn = Change Required is already set on strict mode for <type> <name> <revision> object.
UnifiedChangeMgt.Notice.UnableToSetChangeControlRelationshipStrictModeAlreadyOn = Change Required is already set on strict mode for this <type>.
UnifiedChangeMgt.Notice.ChangeControlGranularityIsNotEnabled = Change Required cannot be defined on this element. Change Required on Instance and Composee is not enabled.
UnifiedChangeMgt.Notice.ObjectImpactedByChangeDeleteNotGranted = Object <type> <name> <revision> is impacted by an opened Change Action and cannot be deleted.
UnifiedChangeMgt.Notice.ApproversNotCompliantWithDefinition = Approvers for this change do not comply with the approval rules defined by your administrator.
UnifiedChangeMgt.Notice.ApproversNotCompliantWithDefinitionAll = At least one approver or the change owner need to be Leader in the organization and Collaborative Space of this change action.
UnifiedChangeMgt.Notice.ApproversNotCompliantWithDefinitionOneLeader = At least one approver needs to be Leader on the organization and Collaborative Space of this change action.
UnifiedChangeMgt.Notice.ApproversNotCompliantWithDefinitionAllLeader = All approvers need to be Leader on the organization and Collaborative Space of this change action.
UnifiedChangeMgt.Notice.ApproversNotCompliantWithDefinitionBaseline = For at least one of the items impacted by this Change Action nobody among approvers and owner owns the appropriate credentials.
UnifiedChangeMgt.Notice.ApproversNotCompliantWithDefinitionCSE = Approvers roles do not comply with the defintion on groups.
UnifiedChangeMgt.Notice.ApproversNotCompliantWithDefinitionIgnoreOwner = Administration option excludes Change Action owner from evaluation.
UnifiedChangeMgt.Notice.ApproversNotCompliantWithDefinitionIgnoreCoordinator = Administration option excludes Change Coordinator from evaluation.
UnifiedChangeMgt.Notice.ApproversNotCompliantWithDefinitionIgnoreContributor = Administration option excludes Change Actions assignees from evaluation.

EnterpriseChangeMgt.Range.Requested_Change.For_Revise = For Minor Revise
EnterpriseChangeMgt.Range.Requested_Change.For_Major_Revise = For Revise
EnterpriseChangeMgt.Range.Requested_Change.For_Release = For Release
EnterpriseChangeMgt.Range.Requested_Change.For_Obsolescence = For Obsolescence
EnterpriseChangeMgt.Range.Requested_Change.None = None
EnterpriseChangeMgt.Range.Requested_Change.For_Update = For Update
EnterpriseChangeMgt.Range.Requested_Change.For_Evolution = New Branch
EnterpriseChangeMgt.Range.Requested_Change.Restore = For Release(Demote)

EnterpriseChangeMgt.Range.Proposal_Status.Not_Started = Not Started
EnterpriseChangeMgt.Range.Proposal_Status.Started = Started
EnterpriseChangeMgt.Range.Proposal_Status.Complete = Complete
EnterpriseChangeMgt.Range.Proposal_Status.Partial = Partial
EnterpriseChangeMgt.Range.Proposal_Status.Rejected = Rejected
EnterpriseChangeMgt.Range.Proposal_Status.Ignored = Ignored
EnterpriseChangeMgt.Range.Proposal_Status.Deprecated = Deprecated

EnterpriseChangeMgt.Notice.isConfigured = The object <type> <name> <revision> is configured, so it cannot be added or processed as a proposed change for revision,release,obsolescence
EnterpriseChangeMgt.Error.JPOProgramMethodDoesNotExist = The JPO Program or Method entry does not exist

#Change Decomposition
EnterpriseChangeMgt.Error.COCAConnection.NotSameOrg = The Change Action from the parent organization is not allowed to be connected to the Change Order at the child or sibling organization
EnterpriseChangeMgt.Error.CR.CANotGovernedByCO = The Change Request object has some Change Action object that are not governed by any Change Order

# Added For FTR Adoption of ECM
EnterpriseChangeMgt.Form.Label.ActiveEC = Active Change Exists
EnterpriseChangeMgt.ActiveChange.Yes = Yes
EnterpriseChangeMgt.ActiveChange.No = No
EnterpriseChangeMgt.Change.ToolTipActiveChangeExists = Active Change Exists
EnterpriseChangeMgt.Table.GroupHeader.Status = Status

#Added for applicability
EnterpriseChangeMgt.ApplicabilityAvailable.Yes = Yes
EnterpriseChangeMgt.ApplicabilityAvailable.No = No
EnterpriseChangeMgt.ApplicabilityPropagation.Yes = Yes
EnterpriseChangeMgt.ApplicabilityPropagation.No = No

#Generic
UnifiedChangeMgt.Notice.ChangeOnHold = Change Action is on hold
UnifiedChangeMgt.Notice.ChangeReadOnly = Change Action is read only

#Change Action CO related
UnifiedChangeMgt.Notice.ChangeOrderAlreadyAttached = Change Action is already attached to a Change Order
UnifiedChangeMgt.Notice.ChangeActionHigherThanApprovalChangeOrder = Change Action is already beyond '<In Approval>' state and cannot be attached to a Change Order
UnifiedChangeMgt.Notice.ChangeOrderHigherThanInWorkChangeAction = <type> <name> is already beyond  '<In Work>' state and cannot be attached to a Change Action
UnifiedChangeMgt.Notice.ChangeOrderNotAttached = There is no Change Order attached to this Change Action

#Context Referentials Applicability
UnifiedChangeMgt.Notice.ChangeActionAddRemoveContextBeforeApproval = Context items can only be added or removed before '<In Approval>'
UnifiedChangeMgt.Notice.ChangeActionAddRemoveContextPeople = Context items can only be added or removed by the owner, Change Coordinator and assignees
UnifiedChangeMgt.Notice.ChangeActionAddContextType = This object cannot be added as a context item because of its type
UnifiedChangeMgt.Notice.ChangeActionAddRemoveReferentialBeforeApproved = Referentials can only be added or removed before '<In Approval>'
UnifiedChangeMgt.Notice.ChangeActionAddRemoveReferentialPeople = Referentials can only be added or removed by the owner, Change Coordinator, approvers, and assignees
UnifiedChangeMgt.Notice.ChangeActionRemoveReferentialReviewerApproval = Referentials can only be removed by approvers in '<In Approval>'
UnifiedChangeMgt.Notice.ChangeActionAddReferentialType = This object cannot be added as a referential because of its type
UnifiedChangeMgt.Notice.ChangeActionSetApplicabilityBeforeApproved = Applicability can only be set before '<Approved>' state
UnifiedChangeMgt.Notice.ChangeActionSetApplicabilityPeople = Applicability can only be set by owner and Change Coordinator
UnifiedChangeMgt.Notice.ChangeActionSetApplicabilityLicenses = User does not have the requested licenses to update the applicability of the Change Action.

#People
UnifiedChangeMgt.Notice.ChangeActionAddRemoveContributorBeforeApproval = Assignees cannot be added or removed once the Change Action has reached '<In Approval>' state
UnifiedChangeMgt.Notice.ChangeActionAddRemoveContributorPeople = Assignees can only be added or removed by the owner or Change Coordinator
UnifiedChangeMgt.Notice.ChangeActionAddRemoveReviewersApproval = Approvers cannot be added or removed once the Change Action has reached '<In Approval>' state
UnifiedChangeMgt.Notice.ChangeActionAddRemoveReviewersPeople = Approvers can only be added or removed by the owner or Change Coordinator
UnifiedChangeMgt.Notice.ChangeActionAddRemoveFollowersApproved = Informed Users can be added or removed till the Change Action reaches '<Approved>' state
UnifiedChangeMgt.Notice.ChangeActionAddRemoveFollowersPeople = Informed Users can only be added or removed by the owner or Change Coordinator
UnifiedChangeMgt.Notice.RouteTemplateAlreadyConnected = Route Template has already added as Approver. You can not add more than one Route Template as Approver.
UnifiedChangeMgt.Notice.ChangeActionAddRemoveRouteTemplateApproval = Route Template as Approver can not be added or removed once the Change Action has reached the '<In Approval>' state.
UnifiedChangeMgt.Notice.RouteTemplateCancelled = Route Template cannot be removed or added to a canceled Change Action.
UnifiedChangeMgt.Notice.ChangeActionAddRemoveRouteTemplatePeople = Route Templates can only be added or removed by the owner or Change Coordinator
UnifiedChangeMgt.Notice.ChangeActionAddRemoveRouteTemplateNotTemplate = Requested element to be added as Route Template is not a Route Template
UnifiedChangeMgt.Notice.ChangeActionAddRemoveRouteTemplateNotActive = Only active Route Templates are allowed to be connected to Change Actions
UnifiedChangeMgt.Notice.ChangeActionAddRemoveRouteTemplateNotApproval = Only approval Route Templates are allowed to be connected to Change Actions
UnifiedChangeMgt.Notice.ChangeActionAddRemoveRouteTemplateNotConnected = Route Template is not connected to the Change Action

#Proposed
UnifiedChangeMgt.Notice.ChangeActionAddProposedBeforeApproval = Proposed Changes can only be added/removed before '<In Approval>'
UnifiedChangeMgt.Notice.ChangeActionAddRemoveProposedPeople = Proposed Changes can only be added or removed by the assignees or owner
UnifiedChangeMgt.Notice.ChangeActionAddProposedWithSameWhere = <type> <name> <revision> is already added as Proposed item to this Change with operation : <operation>
UnifiedChangeMgt.Notice.ChangeActionDeleteProposedSubActivities = You cannot delete a Proposed Change that has activities. You must delete the activities first.
UnifiedChangeMgt.Notice.ChangeActionProposedAlreadyDone = You cannot modify or delete this Change Action because some proposed changes have already been processed.
UnifiedChangeMgt.Notice.ChangeActionProposedCreateModify = You cannot add a Modify activity for Proposed Change along with a create operation.
UnifiedChangeMgt.Notice.ChangeActionAddProposedBeforeInWork = Revise or New Branch proposed changes cannot be added when the Change Action is '<In Work>'.
UnifiedChangeMgt.Notice.ChangeActionAddProposedChangeStatusNotNone = Change status activity cannot be added under a Revise or New Branch Proposed change.
UnifiedChangeMgt.Notice.GenericECMTransitionFailureWorkUnder = Promote to Released or Obsolete working under a Change Action is not allowed. This action should be performed attaching the object as Proposed Change


UnifiedChangeMgt.ProposedOperation.None = Modify
UnifiedChangeMgt.ProposedOperation.NewVersion = Revision
UnifiedChangeMgt.ProposedOperation.NewMinorVersion = Minor Revision
UnifiedChangeMgt.ProposedOperation.NewEvolution = New Branch
UnifiedChangeMgt.ProposedOperation.ChangeStatus = Change Status

#Change Action cancellation
UnifiedChangeMgt.Notice.ChangeActionCancelPeople = Change Actions can only be canceled by the owner or Change Coordinator
UnifiedChangeMgt.Notice.ChangeActionCancelApprovalPeople = Change Actions can only be canceled by the owner when '<In Approval>' state

#Change Action set on hold / resume / transfer
UnifiedChangeMgt.Notice.ChangeActionHoldPeople = Change Actions can only be set on Hold by the owner or Change Coordinator
UnifiedChangeMgt.Notice.ChangeActionResumePeople = Change Actions can only be resumed by the owner or Change Coordinator
UnifiedChangeMgt.Notice.ChangeActionTransferPeople = User does not have enough privileges to transfer the Change Action.

#Change Action attributes
UnifiedChangeMgt.Notice.ChangeActionAttributesBeforeApproval = Change Action's attributes can only be modified before the In Approval state
UnifiedChangeMgt.Notice.ChangeActionDescriptionBeforeApproval = Change Action's description can only be modified before the '<In Approval>' state

UnifiedChangeMgt.Notice.ChangeActionAddContextAlreadyAdded = Object already added as the context in the Change Action
UnifiedChangeMgt.Notice.CannotWorkUnderChange = The operations are not allowed for the user in the Change context when the change is in the current maturity state. 

EnterpriseChangeMgt.Route.Description = Approval route generated from approvers to validate Change Action : <name>, titled : <attribute[Synopsis]>
EnterpriseChangeMgt.Task.Title = Approval task to review changes done on Change Action : <name>, titled : <attribute[Synopsis]>
EnterpriseChangeMgt.Task.Instruction = Review changes done under Change Action : <name>, titled : <attribute[Synopsis]> 

#Change Action Exceptions functionality
EnterpriseChangeMgt.Error.CannotPromoteBecauseCAInOtherState = Cannot promote, all change actions need to be either in Completed or Canceled state

UnifiedChangeMgt.Notice.OnlyLeaderCanOwnCA = Only user having a Leader role can own a Change Action
UnifiedChangeMgt.Notice.PeopleCancelled= Users cannot be added or removed from a Canceled Change Action

UnifiedChangeMgt.Notice.CannotWorkUnderChange = Unable to work under change action. Verify that the Change is in appropriate state and/or that user is owner or assignee of this change
UnifiedChangeMgt.Notice.ChangeAlreadyInEffectivity = Change Action is already in the effectivity but is not the last one
UnifiedChangeMgt.Notice.ElementInOperandListNotChange = Element in the Operand list is not a Change Action
UnifiedChangeMgt.Notice.ChangeAlreadyInEffectivityNegative = Change Action is already in the effectivity and defined as negative
UnifiedChangeMgt.Notice.NotAChangeAction = Identifier passed in input  for work under is not a Change Action
UnifiedChangeMgt.Notice.WorkUnderIncorrectInputs = Identifier passed in input for work under is empty
UnifiedChangeMgt.Notice.OnlyAtLeastContributorCanOwnCA= Only user having at least a Contributor role can own a Change Action
EnterpriseChangeMgt.Notice.AutomationFailedObjectAlreadyCCDetailed = Change Action cannot be promoted. Object <type> <name> <revision> has another Change Action set as required change to modify it.
UnifiedChangeMgt.Notice.UnableToAutomatizeChangeStatus = Unable to automatize change status operation for object <type> <name> <revision>
UnifiedChangeMgt.Notice.ProposedRealizedNotInFrozenStateDetailed = Object <type> <name> <revision> is not FROZEN.

# Full text Search
#emxFramework.FullTextSearch.ECM_RESPONSIBLE_ORGANIZATION=Responsible Organization
emxFramework.FullTextSearch.ECM_RESPONSIBLE_ORGANIZATION=Organization
emxFramework.FullTextSearch.ECM_SEVERITY=Severity
emxFramework.FullTextSearch.ECM_REPORTED_AGAINST=Reported Against
emxFramework.FullTextSearch.ECM_CHANGE_COORDINATOR=Change Coordinator
emxFramework.FullTextSearch.ECM_REVIEWER_LIST=Change Review List
#emxFramework.FullTextSearch.ECM_APPROVER_LIST=Change Approval List
emxFramework.FullTextSearch.ECM_APPROVER_LIST=Change Approvers
emxFramework.FullTextSearch.ECM_DUE_DATE=Due Date
emxFramework.FullTextSearch.ESTIMATED_COMPLETION_DATE=Estimated Completion Date
emxFramework.FullTextSearch.ECM_CHANGE_TEMPLATE=Change Template
emxFramework.FullTextSearch.ECM_RELATED_CR=Change Request
emxFramework.FullTextSearch.ECM_CHANGE_ASSIGNEE=Change Assignee
emxFramework.FullTextSearch.ECM_CHANGE_REVIEWER=Change Reviewer
emxFramework.FullTextSearch.ECM_CHANGE_FOLLOWER=Change Follower
emxFramework.FullTextSearch.ECM_GOVERNING_CR=Change Request
emxFramework.FullTextSearch.ECM_GOVERNING_CO=Change Order
emxFramework.FullTextSearch.ECM_CHANGE_POLICY=Change Policy
emxFramework.FullTextSearch.ECM_Proposed_CA=Proposed Change Action
emxFramework.FullTextSearch.ECM_Realized_CA=Realized Change Action
emxFramework.FullTextSearch.ECM_Proposed_CR=Proposed Change Request
emxFramework.FullTextSearch.ECM_Realized_CR=Realized Change Request
emxFramework.FullTextSearch.ECM_Proposed_CO=Proposed Change Order
emxFramework.FullTextSearch.ECM_Realized_CO=Realized Change Order
emxFramework.FullTextSearch.ECM_Context_CA=Context Change Action
emxFramework.FullTextSearch.ECM_ChangeRequired=Change Required
emxFramework.FullTextSearch.ECM_CHANGE_ON_HOLD=Change On Hold




#BOM Synchronization
EnterpriseChangeMgt.Heading.CollaborateStatus = Collaborate Status
EnterpriseChangeMgt.Notify.Success.ObjProcessed = object(s) processed
EnterpriseChangeMgt.Notify.Success.ObjCreated = object(s) created
EnterpriseChangeMgt.Notify.Success.ObjUpdated = object(s) updated
EnterpriseChangeMgt.Notify.Success.ObjDeleted = object(s) Deleted
EnterpriseChangeMgt.Message.Success = Synchronization successful
EnterpriseChangeMgt.Message.Fail = Synchronization failed

AuthoringMgtUX.Label.Name = Name
AuthoringMgtUX.Label.Type = Type
AuthoringMgtUX.Label.State = State
#AuthoringMgtUX.Label.TechnicalOrganization = Responsible Org
AuthoringMgtUX.Label.TechnicalOrganization = Organization
AuthoringMgtUX.Label.OwningCO = Owning Change
AuthoringMgtUX.Label.DueDate =Due Date
AuthoringMgtUX.command.SelectWorkUnderChange = Work Under Change
AuthoringMgtUX.Label.WorkUnderChange = Work Under Change
AuthoringMgtUX.Button.Clear = Clear
AuthoringMgtUX.Label.Title = Title
AuthoringMgtUX.Label.Owner = Owner

##	Change Decomposition - Hierarchical CO
EnterpriseChangeMgt.Error.RowSelect.Single = Error: Please select only one item. 
EnterpriseChangeMgt.Error.ParentBeyondInWork = Parent Change Order must be in "In Work" or earlier state and not "On Hold".
EnterpriseChangeMgt.Alert.CannotPerform = Cannot perform this operation on the root node.
EnterpriseChangeMgt.Label.ParentCO = Parent CO

# ECM Enforce instance freeze position before moving CA "In Approval" error message
UnifiedChangeMgt.Notice.ProposedRealizedRelNotInFrozenStateDetailed = Instance <type> <name> is not fixed position. Owner <fromType> <fromName> <fromRevision>, instance of <toType> <toName> <toRevision>.

## CO Error
EnterpriseChangeMgt.Alert.CannotRemoveProposedChange = Error: Proposed Change can only be removed when Change Action is prior to 'In Approval' state
EnterpriseChangeMgt.Alert.CannotCancelInWorkChange = Error: Cannot cancel Change Order that is in 'In Work' state
EnterpriseChangeMgt.Alert.CannotCancelInApprovalhange = Error: Cannot cancel Change Order that is in 'In Approval' state

EnterpriseChangeMgt.Notice.TooManyRouteTemplate = Multiple Route Template found connected to this object, please edit and select only one.

#Change Dependency
UnifiedChangeMgt.Notice.Dependencies.LinkAlreadyExists = This dependency or codependency already exists
UnifiedChangeMgt.Notice.Dependencies.SimilarLinkAlreadyRegistered = A similar dependency or codependency already exists
UnifiedChangeMgt.Notice.Dependencies.NotLocalFromTo =  At least one of both sides is not available on the current site
UnifiedChangeMgt.Notice.Dependencies.InvalidDependencyAttachment = Both sides of a dependency or codependency should be Change Orders or standalone Change Actions
UnifiedChangeMgt.Notice.Dependencies.UserPrivileges = User doesn't have enough privileges
UnifiedChangeMgt.Notice.Dependencies.CancelFromTo = Dependency or codependency cannot be created if one of both sides is a canceled Change
UnifiedChangeMgt.Notice.Dependencies.CodependencyLifecycle = Codependency cannot be created between a complete and an incomplete Change
UnifiedChangeMgt.Notice.Dependencies.CodependencyCannotBeMoved = Attachment to Change Order failed. Codependency cannot be moved to Change Order level. Caused by:
UnifiedChangeMgt.Notice.Dependencies.CodependencyCannotBeMovedExistingPrereq = Attachment to Change Order failed. Codependency cannot be moved to Change Order level. Caused by: a dependency already exists
UnifiedChangeMgt.Notice.Dependencies.DependencyCannotBeMovedOppPrereq = Attachment to Change Order failed. Dependency cannot be moved to Change Order level. Caused by: an opposite dependency already exists
UnifiedChangeMgt.Notice.Dependencies.DependencyCannotBeMoved = Attachment to Change Order failed. Dependency cannot be moved to Change Order level. Caused by:
UnifiedChangeMgt.Notice.Dependencies.DependencyCannotBeMovedExistingCoreq = Attachment to Change Order failed. Dependency cannot be moved to Change Order level. Caused by: a codependency already exists
UnifiedChangeMgt.Notice.Dependencies.DependencyLifecycle = Dependency cannot be created from a complete Change to an incomplete Change
UnifiedChangeMgt.Notice.Dependencies.NotAuthorableFromTo = At least one of both sides is not authorable on the current site
UnifiedChangeMgt.Notice.Dependencies.NotLocalGraphElement = At least one element in the dependency is not available on the current site
UnifiedChangeMgt.Notice.Dependencies.NotAuthorableGraphElement = At least one element in the dependency is not authorable on the current site
UnifiedChangeMgt.Notice.Dependencies.CreationLoop = Creating this dependency or codependency would introduce a loop in the dependency
UnifiedChangeMgt.Notice.Dependencies.DeletionConsumed = This dependency or codependency is consumed and cannot be deleted
UnifiedChangeMgt.Notice.Dependencies.DeletionLoop = Deleting this dependency or codependency would introduce a loop in the dependency
EnterpriseChangeMgt.Message.Subject.prequiredElementDemoted = Dependency <type> <name> demoted from Approved state
EnterpriseChangeMgt.Message.Description.prequiredElementDemoted = One of the Change object you own has a dependency which was demoted from Approved state. Demoted Change: <type> <name> <synopsis> <revision>. Description: <description>.
EnterpriseChangeMgt.Message.Subject.corequiredElementDemoted= Co-dependency <type> <name> demoted from In Approval state
EnterpriseChangeMgt.Message.Description.corequiredElementDemoted = One of the change object you own has a co-dependency which was demoted from In Approval state. Demoted Change: <type> <name> <synopsis> <revision>. Description: <description>.
UnifiedChangeMgt.Notice.prerequiredElementCancelled = Change object cannot be promoted as it is dependent from <type> <name> which is canceled
UnifiedChangeMgt.Notice.prerequiredElementOnHold = Change object cannot be promoted as it is dependent from <type> <name> which is on hold
UnifiedChangeMgt.Notice.prerequiredElementLowerThanApproved = Change object cannot be promoted as it is dependent from <type> <name> which is not '<Approved>'
UnifiedChangeMgt.Notice.corequiredElementCancelled = Change object cannot be promoted as it is co-dependent with <type> <name> which is canceled
UnifiedChangeMgt.Notice.corequiredElementCOOnHold = Change object cannot be promoted as it is co-dependent with <type> <name> which is on hold
UnifiedChangeMgt.Notice.corequiredElementLowerThanInApproval = Change object cannot be promoted as it is co-dependent with <type> <name> which is not at least '<In Approval>'



UnifiedChangeMgt.Notice.ChgDecomposition.LinkAlreadyExists = This change decomposition is already registered
UnifiedChangeMgt.Notice.ChgDecomposition.NotLocalFromTo =  At least one of both sides is not available on the current site
UnifiedChangeMgt.Notice.ChgDecomposition.InvalidAttachment =  Governing object should be a Change Order. Governed Object should be a Change Order or a Change Action which is not already governed
UnifiedChangeMgt.Notice.ChgDecomposition.NotAuthorableFromTo =  At least one of both sides is not authorable on the current site
UnifiedChangeMgt.Notice.ChgDecomposition.AttachStackingDone =  Governed object was already used for stacking and thus cannot be attached to a new governing object
UnifiedChangeMgt.Notice.ChgDecomposition.UserPrivileges = User doesn't have enough privileges
UnifiedChangeMgt.Notice.ChgDecomposition.NotLocalGraphElement = At least one element in the dependency is not available on the current site
UnifiedChangeMgt.Notice.ChgDecomposition.NotAuthorableGraphElement = At least one element in the dependency is not authorable on the current site
UnifiedChangeMgt.Notice.ChgDecomposition.CreationLoop = Creating this change decomposition would introduce a loop in the dependency
UnifiedChangeMgt.Notice.ChgDecomposition.DetachStackingDone =  Governed object was already used for stacking and thus cannot be detached from the governing object
UnifiedChangeMgt.Notice.ChgDecomposition.DeletionLoop = Deleting this change decomposition would introduce a loop in the dependency

UnifiedChangeMgt.Notice.Stacking.NoAvailableTwin = There is no available dependency or codependency to allow this stacking
UnifiedChangeMgt.Notice.Stacking.InvalidStackingAttachment = Both sides of a stacking link should be Change Actions
UnifiedChangeMgt.Notice.Stacking.LinkAlreadyExists = This stacking already exists
UnifiedChangeMgt.Notice.Stacking.NotLocalFromTo = At least one of both sides is not available on the current site
UnifiedChangeMgt.Notice.Stacking.NotAuthorableFromTo = At least one of both sides is not authorable on the current site
UnifiedChangeMgt.Notice.Stacking.InvalidTwin = Dependency or codependency passed as input is not valid
UnifiedChangeMgt.Notice.Stacking.Deletion = Stacking links cannot be deleted

UnifiedChangeMgt.Notice.DependenciesCompletion.OriginNotComplete = Object is not completed
UnifiedChangeMgt.Notice.DependenciesCompletion.NotLocalGraphElement = At least one element in the dependency is not available on the current site
UnifiedChangeMgt.Notice.DependenciesCompletion.NotAuthorableGraphElement = At least one element in the dependency is not authorable on the current site
UnifiedChangeMgt.Notice.DependenciesCompletion.NotApprovedOrPostProcessElement = Promotion cannot be done. <type> <name> is a dependency and is not '<Approved>' or declared as post process
UnifiedChangeMgt.Notice.DependenciesCompletion.UncompletePrerequiredElement = Promotion cannot be done. <type> <name> which is a dependency is not '<Complete>'
UnifiedChangeMgt.Notice.DependenciesCompletion.UncompleteCorequiredElement = Promotion cannot be done. <type> <name> which is a Codependency is not '<Complete>'
UnifiedChangeMgt.Notice.DependenciesCompletion.UncompleteStackingElement = Promotion cannot be done. <type> <name> identified as stacked on is not '<Complete>'
UnifiedChangeMgt.Notice.DependenciesCompletion.TopLevelOnly = Child Change Order cannot be promoted before parent
UnifiedChangeMgt.Notice.DependenciesCompletion.GoverningUncomplete = Governing object is not completed

UnifiedChangeMgt.Notice.syncCAUserIssue = Synchronization failed on <type> <name> <revision>, only owner or contributor can synchronize a Change Action.
UnifiedChangeMgt.Notice.syncCALifecycleIssue = Synchronization failed on <type> <name> <revision>, synchronization is only allowed on '<In Work>' state for Change Action.
UnifiedChangeMgt.Notice.syncCAonHoldIssue = Synchronization failed on <type> <name> <revision>, ca is on hold.
UnifiedChangeMgt.Notice.syncRoleIssue = Synchronization failed only Leaders and Contributors can perform a synchronization.
UnifiedChangeMgt.Notice.Dependencies.FromAndToEqual = It's not possible to link a Change Object with itself.
UnifiedChangeMgt.Notice.ChangeActionCancelBeforeComplete = Change Actions can only be canceled before the '<Complete>' state.
UnifiedChangeMgt.Notice.Dependencies.onHoldFromTo = Codependency cannot be created or deleted when one of the Change in on Hold
UnifiedChangeMgt.Notice.Dependencies.onHoldFrom = Dependency cannot be created or deleted when the From side Change is on Hold
UnifiedChangeMgt.Notice.AtLeastOneProposedOrRealizedNeeded = Change Action needs to have at least one Proposed or Realized Change to be promoted to '<In Approval>'.
UnifiedChangeMgt.Notice.prerequiredElementCOOnHold = Change object cannot be promoted as it is dependent from another change order which is on hold.

# JLR
EnterpriseChangeMgt.Message.Subject.ChangeActionInWork = Change Action <name> was promoted to In Work state
EnterpriseChangeMgt.Message.Description.ChangeActionInWork = Change Action <name> <revision> was promoted to In Work state. Description: <description>, Title : <title>.
EnterpriseChangeMgt.Message.Subject.ChangeActionApproved = Change Action <name> was promoted to Approved state
EnterpriseChangeMgt.Message.Description.ChangeActionApproved = Change Action <name> <revision> was promoted to Approved state. Description: <description>, Title : <title>.
EnterpriseChangeMgt.Message.Subject.ChangeActionDemoteInWork = Change Action <name> was demoted from In Approval to In Work
EnterpriseChangeMgt.Message.Description.ChangeActionDemoteInWork = Change Action <name> <revision> was demoted from In Approval to In Work. Description: <description>, Title : <title>.

UnifiedChangeMgt.Notice.MirrorObjectNotAssociatedDetailed = Object <type> <name> <revision> is identified as a synchronized object not associated to the Change Action. Please add it as Proposed Change 'Release' before promoting the Change Action.

# Realized Transfer
UnifiedChangeMgt.Notice.RealizedTransfer.OriginChangeActionStatus = Origin Change Action should be '<Prepare>' or '<In Work>' to allow move of realized changes
UnifiedChangeMgt.Notice.RealizedTransfer.ReceivingChangeActionStatus = Receiving Change Action should be '<Prepare>' or '<In Work>' to allow move of realized changes
UnifiedChangeMgt.Notice.RealizedTransfer.OriginChangeActionPeople = User should be owner or change coordinator of the origin Change Action
UnifiedChangeMgt.Notice.RealizedTransfer.ReceivingChangeActionPeople = User should be owner or change coordinator of the receiving Change Action
UnifiedChangeMgt.Notice.RealizedTransfer.OriginChangeActionHold = Origin Change Action shouldn't be on hold
UnifiedChangeMgt.Notice.RealizedTransfer.ReceivingChangeActionHold = Receiving Change Action shouldn't be on hold
UnifiedChangeMgt.Notice.RealizedTransfer.Licenses = User doesn't have the appropriate licenses
UnifiedChangeMgt.Notice.RealizedTransfer.Synchronization = Origin Change Action contains synchronized data. It's not possible to apply a move on this Change Action
UnifiedChangeMgt.Notice.RealizedTransfer.SameCompletionScope = Origin Change Action and receiving Change Action are part of the same completion scope
UnifiedChangeMgt.Notice.RealizedTransfer.MissingInputElements = At least one realized element being used is already moved to another Change Action or ignored.
UnifiedChangeMgt.Notice.RealizedTransfer.NotExistingElements = At least one object or relationship cannot be found, Move cannot be done
UnifiedChangeMgt.Notice.RealizedTransfer.OnceInstantiableOwnerNotTransferred = Object <type> <name> <revision> is not shared and as a consequence needs to be transferred with its owner
UnifiedChangeMgt.Notice.RealizedTransfer.OnceInstantiableChildNotTransferred = Object <type> <name> <revision> owns non shared data and as consequence needs to be transfered with them
UnifiedChangeMgt.Notice.RealizedTransfer.ObjectAlsoAttachedAsChangeStatus = Object <type> <name> <revision> is also attached as Change Status. please remove it first from proposed changes.
UnifiedChangeMgt.Notice.RealizedTransfer.ObjectAlsoInstanceOf = Object <type> <name> <revision> is also identified as InstanceOf in a relationship part of the same Change Action. This is not compatible with late release process
UnifiedChangeMgt.Notice.RealizedTransfer.ConfiguredObject = Move of configured elements are not allowed
UnifiedChangeMgt.Notice.RealizedTransfer.ObjectAlsoOwnerOf = Object <type> <name> <revision> has dependent changes in this Change Action. Until there are other implementation dependency on an entity this operation cannot be performed

#Flowdown
UnifiedChangeMgt.Notice.Flowdown.ReceivingChangeActionStatus = Receiving Change Action should be Draft or In Work to allow flowdown
UnifiedChangeMgt.Notice.Flowdown.ReceivingChangeActionPeople = User should be owner, change coordinator or contributor of the receiving Change Action
UnifiedChangeMgt.Notice.Flowdown.ReceivingChangeActionHold = Receiving Change Action shouldn't be on hold
UnifiedChangeMgt.Notice.Flowdown.Licenses = User doesn't have the appropriate licenses
UnifiedChangeMgt.Notice.Flowdown.MissingInputElements = At least one realized element being used is already transferred to another Change Action
UnifiedChangeMgt.Notice.Flowdown.NotExistingElements = At least one object or relationship cannot be found, flowdown cannot be done
UnifiedChangeMgt.Notice.Flowdown.RelationshipUnconfiguredWhere = Object <type> <name> <revision> is not configured flowdown of relationship owned by this object is not allowed
UnifiedChangeMgt.Notice.Flowdown.DeletionConsumed = This flowdown is consumed and cannot be deleted.
UnifiedChangeMgt.Notice.Flowdown.NotAuthorableFrom = Downstream Change Action should be authorable on the current site
UnifiedChangeMgt.Notice.Flowdown.NotLocalFromTo = Both Upstream and Downstream Change Actions should exist on the current site
UnifiedChangeMgt.Notice.Flowdown.CreationLoop = Creating this flowdown would introduce a loop in the dependency graph
UnifiedChangeMgt.Notice.Flowdown.NotLocalGraphElement = At least one element in the dependency is not available on the current site
UnifiedChangeMgt.Notice.Flowdown.NotAuthorableGraphElement =  At least one element in the dependency is not authorable on the current site
UnifiedChangeMgt.Notice.Flowdown.InvalidFlowdownAttachment = Flowdown can only be performed between two Change Actions.

UnifiedChangeMgt.Notice.Flowdown.OriginChangeActionCancelled = Flow down cannot be done from a Canceled Change Action
UnifiedChangeMgt.Notice.Flowdown.OriginChangeActionGrouped = Flow down cannot be done from a Change Action part of a Group
UnifiedChangeMgt.Notice.Flowdown.ReceivingChangeActionStatus = Downstream Change Action must be in '<Prepare>' or '<In Work>' state
UnifiedChangeMgt.Notice.Flowdown.ReceivingChangeActionPeople = You must be 'Change Coordinator', 'Owner' or 'Assignee of the downstream Change Action
UnifiedChangeMgt.Notice.Flowdown.ReceivingChangeActionHold = Downstream Change Action cannot be on hold.
UnifiedChangeMgt.Notice.Flowdown.AmoNotFlowedDown = Element cannot be resolved as it was not previously flowed down.

UnifiedChangeMgt.Notice.Flowdown.LinkAlreadyDeclared = This Flow down already exists
UnifiedChangeMgt.Notice.Flowdown.FlowedDownElementIncomplete = At least one Flowed down element does not have flowdown status set to complete. Please ensure that all flowdown elements have status complete unless they are Ignored
UnifiedChangeMgt.Notice.Flowdown.FlowedDownElementNotSynchronized = Please revisit the Flowdown elements as some of the upstream Realized were modified after flowdown or Move to another Change Action
UnifiedChangeMgt.Notice.Flowdown.FlowedDownElementNotResolved = Please ensure that all Flowed down elements are accounted for in Proposed Changes
UnifiedChangeMgt.Notice.Flowdown.ElementsNotFlowedDown = At least one Flowed down element does is not Flowed down or Ignored. Please ensure that all flowdown elements have status complete unless they are Ignored
UnifiedChangeMgt.Notice.Flowdown.Deletion.ResolutionExists = Flow Down cannot be removed. One elements was flowed down and resolved in the downstream Change Action

UnifiedChangeMgt.Notice.UpstreamCAShouldBePromotedBeforeAndNotCancelled = Downstream Change Action cannot be promoted in an higher maturity state than its upstream Change Action(s).

UnifiedChangeMgt.Notice.AllReviewersFiltered = All the people who are supposed to review the Change Action or already reviewed were filtered before applying approvers check. Approvers definition does not complies with the specified rules. 

UnifiedChangeMgt.Notice.Dependencies.DeletionConsumedByTransfer = This dependency or codependency was consumed for move and cannot be deleted.
UnifiedChangeMgt.Notice.Stacking.NotLocalRelationship = A configured relationship which may have use this dependency or codependency to perform stacking is not available on the current site. The link cannot be deleted.
UnifiedChangeMgt.Notice.Stacking.NotAuthorableRelationship = A configured relationship which may have use this dependency or codependency to perform stacking is not authorable on the current site. The link cannot be deleted.
UnifiedChangeMgt.Notice.Stacking.StillStacked = This dependency or codependency was used to perform a stacking which is still active. The link cannot be deleted. 

###Change Action web services 
UnifiedChangeMgt.NoticeCAA.PolicyNotAllowed = Policy specified in input is not valid
UnifiedChangeMgt.NoticeCAA.TitleAndDescriptionManadatory = Title and Description are mandatory
UnifiedChangeMgt.NoticeCAA.SeverityNotAllowed = Severity specified in input is not valid
UnifiedChangeMgt.NoticeCAA.EstimatedStartPriorToCurrent = Estimated start date cannot be set before current date
UnifiedChangeMgt.NoticeCAA.EstimatedCompletionPriorToCurrent = Estimated completion date cannot be set before current date
UnifiedChangeMgt.NoticeCAA.EstimatedCompletionPriorToEstimatedStart = Estimated start date cannot be set before estimated completion date
UnifiedChangeMgt.NoticeCAA.InvalidCeStamp = cestamp specified in input is not valid
UnifiedChangeMgt.NoticeCAA.ProposedChangesLimit = Addition and update of Proposed Changes is limited to 150 elements per call
UnifiedChangeMgt.NoticeCAA.EmptyResolution = Empty resolution array cannot be specified as input
UnifiedChangeMgt.NoticeCAA.InputObjectNotFound = Object specified in input is not valid


 

# String Resources for enoECMProcessSteps
enoECMProcessSteps.ProcessSteps.Promote=Promote
enoECMProcessSteps.ProcessSteps.ChangeCoordinator=Change Co-ordinator
enoECMProcessSteps.ProcessSteps.Mandatory=Mandatory
enoECMProcessSteps.ProcessSteps.Optional=Optional
enoECMProcessSteps.ProcessSteps.Dependency=Dependency
enoECMProcessSteps.Label.Filter=Filter
enoECMProcessSteps.Label.Title=Title
enoECMProcessSteps.Label.Type=Type
enoECMProcessSteps.Label.Name=Name
enoECMProcessSteps.Label.State=State
enoECMProcessSteps.Label.Revision=Rev.
enoECMProcessSteps.Label.Actions=Actions
enoECMProcessSteps.Label.ChangeInformation=Change Information
enoECMProcessSteps.Label.ProposedChanges=Proposed Changes


# Process Steps CO Fasttrack
# Step 1
enoECMProcessSteps.ProcessSteps.IdentifyProposedChanges=Change Identification
enoECMProcessSteps.ProcessSteps.DefineScopeDescriptionofthechange=Define Scope & Description of the change
enoECMProcessSteps.ProcessSteps.Specifytheseverityofthechange=Specify the severity of the change
enoECMProcessSteps.ProcessSteps.AssociateItemsForChangeControl=Define Scope of Change
# Task 1
enoECMProcessSteps.ProcessSteps.IdentifyProposedChangeItems=Identify Proposed Item(s) for Implementing Change
enoECMProcessSteps.ProcessSteps.AssociateItems=Associate Items
# Task 2
enoECMProcessSteps.ProcessSteps.SpecifyChangeImplementationAssignee=Specify Change Implementation assignee
enoECMProcessSteps.ProcessSteps.EditChangeAction=Edit Change Action
# Task 3
enoECMProcessSteps.ProcessSteps.EvaluateWhichCandidateItemsRequireChange=Evaluate which Candidate Items require change
enoECMProcessSteps.ProcessSteps.EvaluateCandidateItems=Evaluate Candidate Items
# Task 4 
enoECMProcessSteps.ProcessSteps.PerformChangeImpactAssessment=Perform Change Impact Assessment
enoECMProcessSteps.ProcessSteps.ChangeAssessment=Change Assessment
enoECMProcessSteps.ProcessSteps.AnswerImpactQuestionnaire=Answer Impact Questionnaire
enoECMProcessSteps.ProcessSteps.ImpactQuestionnaire=Impact Questionnaire
enoECMProcessSteps.ProcessSteps.StartImplementationPlanning=Start Implementation Planning
#enoECMProcessSteps.ProcessSteps.AddApprovalList=Add Approval List
enoECMProcessSteps.ProcessSteps.AddApprovalList=Add Approvers

# Step 2
# Task 1
enoECMProcessSteps.ProcessSteps.SubmitChangeOrderQuestionnaire=Submit Change Order Questionnaire
enoECMProcessSteps.ProcessSteps.SubmitQuestionnaire=Submit Questionnaire
enoECMProcessSteps.ProcessSteps.ChangeOrderQuestionnaire=Change Order Questionnaire
# Task 2
enoECMProcessSteps.ProcessSteps.CheckRelatedCAState=Check related CA state
# Task 3
enoECMProcessSteps.ProcessSteps.InitiateDMRApprovalProcess=Initiate DMR Approval Process

# Step 3
enoECMProcessSteps.ProcessSteps.ApproveChangeOrder=Approve Change Order
enoECMProcessSteps.ProcessSteps.ChangeControlFinalApproval=Change Required Final Approval
# Task 1
enoECMProcessSteps.ProcessSteps.CompleteChangeAction=Complete Change Action
# Task 2
enoECMProcessSteps.ProcessSteps.CheckRouteIsComplete=Check Route Is Complete
# Task 3
enoECMProcessSteps.ProcessSteps.CompleteImpactQuestionnaire=Complete Impact Questionnaire
# Task 4
enoECMProcessSteps.ProcessSteps.PromoteChangeOrderToComplete=Promote Change Order to Complete

# Step 4
enoECMProcessSteps.ProcessSteps.CloseChangeOrder=Close Change Order
enoECMProcessSteps.ProcessSteps.ChangeClosedAndEffective=Change Closed and Effective
# Task 1
enoECMProcessSteps.ProcessSteps.ReleaseControlledDocument=Release Controlled Document
# Task 2
enoECMProcessSteps.ProcessSteps.CheckPrerequisites=Check Prerequisites
# Task 3
enoECMProcessSteps.ProcessSteps.PromoteChangeOrderToImplemented=Promote Change Order to Implemented

# Process Steps CO Formal
# Step 1
enoECMProcessSteps.ProcessSteps.AssignChangeOrder=Assign Change Order
enoECMProcessSteps.ProcessSteps.AssignChangeRepresentative=Assign Change Representative
# Task 1
enoECMProcessSteps.ProcessSteps.AssignChangeCoordinator=Assign Change Coordinator
# Task 2
enoECMProcessSteps.ProcessSteps.PromoteChangeOrderToPrepare=Promote Change Order to Evaluate

# Step 2
# Task 4
enoECMProcessSteps.ProcessSteps.AssignReviewersList=Assign Reviewers List
enoECMProcessSteps.ProcessSteps.AddReviewer=Add Reviewer
# Task 5
enoECMProcessSteps.ProcessSteps.PerformChangeAssessment=Perform Change Assessment
# Task 7
enoECMProcessSteps.ProcessSteps.PromoteChangeOrderToInReview=Promote Change Order to Evaluation Review

# Step 3
enoECMProcessSteps.ProcessSteps.ReviewChangeOrder=Review Change Order
# Task 1
enoECMProcessSteps.ProcessSteps.CompleteReviewTasks=Complete Review Tasks
enoECMProcessSteps.ProcessSteps.PromoteChangeOrderToInWork=Promote Change Order to In Work

# Process Steps CA
# Step 1
enoECMProcessSteps.ProcessSteps.ImplementationPlanning=Implementation Planning
enoECMProcessSteps.ProcessSteps.PlanTheImplementationOfTheChanges=Perform change implementation
# Task 1
enoECMProcessSteps.ProcessSteps.SpecifyImplementationDueDate=Provide a Due date for Change completion
# Task 2
enoECMProcessSteps.ProcessSteps.ConfigureDocumentEffectivitySettings=Configure Document Effectivity Settings
enoECMProcessSteps.ProcessSteps.DocumentEffectivity=Document Effectivity
# Task 3
enoECMProcessSteps.ProcessSteps.CompleteDependentChangeActions=Complete Dependent Change Actions
# Task 4
enoECMProcessSteps.ProcessSteps.AnswerAnyChangeActionQuestions=Answer any Change Action Questions
# Task 5
enoECMProcessSteps.ProcessSteps.ECMUnifiedOnHoldChecks=ECM Unified On Hold Checks
# Task 6

enoECMProcessSteps.ProcessSteps.StartChangeImplementation=Start Change Implementation

# Step 2
enoECMProcessSteps.ProcessSteps.ChangeImplementation=Change Implementation
enoECMProcessSteps.ProcessSteps.PerformTheChangesToTheItems=Perform the changes to the items
# Task 1
enoECMProcessSteps.ProcessSteps.UpdateElapsedPlannedEffectiveDate=Update Elapsed Planned Effective Date
# Task 2
enoECMProcessSteps.ProcessSteps.AssignChangeImplementationReviewers=Assign change In Approvalers
# Task 3
enoECMProcessSteps.ProcessSteps.AssignContentReviewerForControlledDocument=Assign Content Reviewer for Controlled Document
enoECMProcessSteps.ProcessSteps.ViewEditPeerReviewers=View or Edit peer reviewers
enoECMProcessSteps.ProcessSteps.ContentReviewers=Content Reviewers
# Task 4
enoECMProcessSteps.ProcessSteps.StartControlledDocumentPeerReview=Start Controlled Document Peer Review
enoECMProcessSteps.ProcessSteps.StartDocumentApproval=Start Document Approval

# Task 5
enoECMProcessSteps.ProcessSteps.ApproveMarkupsForParts=Approve Markups for Parts
# Task 6
enoECMProcessSteps.ProcessSteps.PromotePartToFrozenState=Promote Part to Frozen state
# Task 7
enoECMProcessSteps.ProcessSteps.PromoteChangeOrderToInWorkState=Promote Change Order to In Work state
enoECMProcessSteps.ProcessSteps.PromoteChangeOrder=Promote Change Order
# Task 8
# Task 9
enoECMProcessSteps.ProcessSteps.StartChangeActionApproval=Start Implementation Approval

# Step 3
enoECMProcessSteps.ProcessSteps.ImplementationApproval=Implementation Approval
enoECMProcessSteps.ProcessSteps.ApproveTheChangesDoneToTheItems=Approve the changes done to the items
# Task 1
enoECMProcessSteps.ProcessSteps.ApproveAffectedItems=Approve Affected Items
# Task 2
enoECMProcessSteps.ProcessSteps.CheckEffectivityTypeOption=Check Effectivity Type Option
# Task 3
enoECMProcessSteps.ProcessSteps.CompleteApprovalTasks=Complete Approval tasks
# Task 4
enoECMProcessSteps.ProcessSteps.CheckForByPassAndInactivePlants=Check For ByPass And Inactive Plants
# Task 5
enoECMProcessSteps.ProcessSteps.ECMUnifiedCheckAllRouteCompleted=ECM Unified Check All Route Completed
# Task 6
enoECMProcessSteps.ProcessSteps.CheckResponsibleManufacturingEngineer=Check Responsible Manufacturing Engineer
# Task 10
enoECMProcessSteps.ProcessSteps.PromoteChangeActionToApproved=Promote Change Action to Approved

# Process Steps CR
# Step 1
enoECMProcessSteps.ProcessSteps.PrepareChangeRequest=Draft Change Request
# Task 2
enoECMProcessSteps.ProcessSteps.AssociateChangeTemplate=Associate Change Template
enoECMProcessSteps.ProcessSteps.EditChangeRequest=Edit Change Request
# Task 2
enoECMProcessSteps.ProcessSteps.PromoteChangeRequestToEvaluate=Promote Change Request to Evaluate

# Step 2
enoECMProcessSteps.ProcessSteps.EvaluateChangeRequest=Evaluate Change Request
# Task 2
enoECMProcessSteps.ProcessSteps.CheckForAffectedItems=Check for Affected Items
enoECMProcessSteps.ProcessSteps.AddAssignees=Add Assignees
# Task 3
enoECMProcessSteps.ProcessSteps.CompleteImpactAnalysis=Complete Impact Analysis
enoECMProcessSteps.ProcessSteps.ImpactAnalysis=Impact Analysis
# Task 4
enoECMProcessSteps.ProcessSteps.AssignReviewRouteTemplate=Assign Review Route Template
# Task 5
enoECMProcessSteps.ProcessSteps.SubmitChangeRequestQuestionnaire=Submit Change Request Questionnaire
# Task 6
enoECMProcessSteps.ProcessSteps.CompleteImpactQuestionnaire=Complete Impact Questionnaire
# Task 7
enoECMProcessSteps.ProcessSteps.ProcessAnyAssociatedCandidateItems=Process any associated Candidate Items
# Task 8
enoECMProcessSteps.ProcessSteps.PromoteChangeRequestToInReview=Promote Change Request to Evaluation Review

# Step 3
enoECMProcessSteps.ProcessSteps.ReviewChangeRequest=Review Change Request
# Task 1
enoECMProcessSteps.ProcessSteps.PromoteChangeRequestToInProcess=Promote Change Request to In Process

# Step 4
enoECMProcessSteps.ProcessSteps.CompleteChangeRequest=Complete Change Request
# Task 1
enoECMProcessSteps.ProcessSteps.CompleteChangeOrder=Complete Change Order


enoECMProcessSteps.ProcessSteps.Message.CannotDeselectAllProposedChanges=Cannot filter out all proposed changes

UnifiedChangeMgt.Notice.RealizedTransfer.Intent = Move intent is not expressed
UnifiedChangeMgt.Notice.RealizedTransfer.ObjectAlreadyPartOfTheReceiving = Object <type> <name> <revision> is already defined in the Realized Changes of the receiving Change Action
UnifiedChangeMgt.Notice.RealizedTransfer.RelationshipUnconfiguredWhere = Object <type> <name> <revision> is not configured move of relationship owned by this object is not allowed
UnifiedChangeMgt.Notice.RealizedTransfer.RelationshipOfTheSameFamilyInReceivingMessage = A relationship belonging to the same family is already attached as Realized Change in the receiving Change Action.
UnifiedChangeMgt.Notice.InputIsNotaChangeAction = Object is not a Change Action

UnifiedChangeMgt.Notice.ChangeActionAddProposedWithSameCopyFrom = An object can be only used once as origin per Change Action.
UnifiedChangeMgt.Notice.ChangeActionAddProposedWithSameIntent = A versioning intent can be defined only once per object and per Change Action. 

EnterpriseChangeMgt.Command.MovetoExisting = Move to Existing
EnterpriseChangeMgt.Command.MovetoNew = Move to New
#EnterpriseChangeMgt.Heading.CRCOTransferOwnership = Transfer Ownership to Change Coordinator
EnterpriseChangeMgt.Heading.CRCOTransferOwnership = Transfer Ownership
#EnterpriseChangeMgt.Heading.ChangeManagement=Enterprise Change Management
EnterpriseChangeMgt.Heading.ChangeManagement=My Changes

#Notification that a Change Action was promoted to In Approval
EnterpriseChangeMgt.Message.Subject.ChangeActionInApproval = Change Action <name> was promoted to In Approval state
EnterpriseChangeMgt.Message.Body.ChangeActionInApproval = <type> <name> <revision> was promoted to In Approval state. Description: <description>, Title: <title>

UnifiedChangeMgt.Notice.Licenses = You don't have the appropriate license to execute this function

EnterpriseChangeMgt.Message.Subject.ChangeChangeOwner = The ownership of <type> <name> has been changed.
EnterpriseChangeMgt.Message.Body.ChangeChangeOwner = <type> <name> with description: <description> has been assigned to <owner>.Transfer Comments : <transferComments>
# TSK6292861
UnifiedChangeMgt.Notice.TypeNotAllowedAsProposed = Objects with type <type> are not allowed in Proposed Changes.
UnifiedChangeMgt.Notice.ReleaseStateNotDefined =  Release state is not defined for object <type> <name> <revision>.
UnifiedChangeMgt.Notice.OnceInstantiableAddedAsProposed = Object <type> <name> <revision> is defined as once instantiable and cannot be added as Proposed Change.
UnifiedChangeMgt.Notice.IsConfigured = The object <type> <name> <revision> is configured. It cannot be added in the Proposed Changes with a lifecycle operation (versioning or maturity).
UnifiedChangeMgt.Notice.VersioningNotAllowed = This versioning operation is not supported for object <type> <name> <revision>.
UnifiedChangeMgt.Notice.VersioningAlreadyDefined = This versioning operation is not allowed as the object <type> <name> <revision> is already attached as Proposed Change to a Change Action with the same operation.
UnifiedChangeMgt.Notice.ProposedRequiredStateNotReached = The object <type> <name> <revision> did not reached the required state to allow this operation.
UnifiedChangeMgt.Notice.MaturityAndImpact = Proposed Change cannot be added or modified as object <type> <name> <revision> is already connected to a Change Action that is not yet completed.
UnifiedChangeMgt.Notice.ObsoleteStateNotDefined =  Obsolete state is not defined for object <type> <name> <revision>.
UnifiedChangeMgt.Notice.AlreadyReleased = The object <type> <name> <revision> is already Released.
UnifiedChangeMgt.Notice.AlreadyObsolete = The object <type> <name> <revision> is already Obsolete.
UnifiedChangeMgt.Notice.NotReleased = The object <type> <name> <revision> should be in or beyond Released state.
UnifiedChangeMgt.Notice.BeyondFrozenState = Object <type> <name> <revision> is beyond its frozen state.
UnifiedChangeMgt.Notice.NoPathToReleased = There is no existing maturity transition path for object <type> <name> <revision> from current state to Released state.
UnifiedChangeMgt.Notice.NoPathToObsolete = There is no existing maturity transition path for object <type> <name> <revision> from current state to Obsolete state.
UnifiedChangeMgt.Notice.NoPathFoundFromTo = There is no existing maturity transition path for object <type> <name> <revision> from <fromState> to <toState>.
UnifiedChangeMgt.Notice.Maturity.InactiveGroup = A Change Action associated to the same Group of changes was cancelled. This Change Action should be cancelled.

# TSK6534893
UnifiedChangeMgt.Notice.ModifyProposedChangeNotAllowed = Cannot modify Proposed Change 'What' when Resolution is attached to Proposed Change
UnifiedChangeMgt.Notice.ResolutionProposedChangeStatusNotNone = Resolution cannot be added under a Revise or New Branch Proposed change.
UnifiedChangeMgt.Notice.ChangeActionAddProposedChangeStatusReleaseResolutionDefined = Resolution and Change Maturity To Release activity cannot be defined on the same Proposed Change

# TSK6534893
UnifiedChangeMgt.Notice.ChangeGroupNotActive = Function is not active
UnifiedChangeMgt.Notice.ChangeActionAddToGroupAlreadyDone = Change Action is already associated to a group
UnifiedChangeMgt.Notice.ChangeActionAddToGroupNotPrepare = A Change Action can be associated to a group only in '<Prepare>' state
UnifiedChangeMgt.Notice.ChangeActionAddToGroupPeople = A Change Action can be associated to a group only by its owner or coordinator
UnifiedChangeMgt.Notice.ChangeActionAddToGroupImpacts = A Change Action cannot be associated to a group when it impacts elements
UnifiedChangeMgt.Notice.ChangeActionAddToGroupPeopleInGroup = You are not owner or coordinator of other Change Actions in the group
UnifiedChangeMgt.Notice.ChangeActionRemoveFromGroupNotPrepare = A Change Action can be removed from a group only in draft or cancelled state
UnifiedChangeMgt.Notice.ChangeActionRemoveFromGroupImpacts = A Change Action cannot be removed from a group when it impacts elements
UnifiedChangeMgt.Notice.ChangeActionRemoveFromGroupPeople = A Change Action can be removed from a group only by its owner or coordinator
UnifiedChangeMgt.Notice.GroupLink.FromAndToEqual = Unexpected association
UnifiedChangeMgt.Notice.GroupLink.NotLocalFrom = Change Action is not available on the current site
UnifiedChangeMgt.Notice.GroupLink.NotAuthorableFrom = Change Action is not authorable on the current site
UnifiedChangeMgt.Notice.GroupLink.NotLocalGraphElement = At least one element in the dependencies is not available on the current site
UnifiedChangeMgt.Notice.GroupLink.NotAuthorableGraphElement = At least one element in the dependencies is not authorable on the current site
UnifiedChangeMgt.Notice.GroupLink.CreationLoop = Associating this Change Action to the group would introduce a loop in the dependency graph
UnifiedChangeMgt.Notice.GroupLink.IndependencyViolation = Associating this Change Action to the group would violate an independency constraint
UnifiedChangeMgt.Notice.GroupLink.DeletionLoop = Removing this Change Action from the group would introduce a loop in the dependency graph
UnifiedChangeMgt.Notice.DependenciesCompletion.UncompleteGroupElement = Change cannot be promoted as one or more elements part of a group are not completed
UnifiedChangeMgt.Notice.RealizedTransfer.OriginChangeActionGrouped = Move of realized changes cannot be done from a Change Action part of a Group
UnifiedChangeMgt.Notice.RealizedTransfer.ReceivingChangeActionGrouped = Move of realized changes cannot be done from a Change Action part of a Group

UnifiedChangeMgt.Notice.ChangeActionAddRemoveProposedStatusComplete = Proposed Activity cannot be added to a complete Proposed Change
UnifiedChangeMgt.Notice.ModifyProposedComplete = A complete Proposed Change or Activity cannot be modified
UnifiedChangeMgt.Notice.ModifyProposedOperationAutomated = Operation was already automated and cannot be changed
UnifiedChangeMgt.Notice.DeleteProposedAlreadyAutomated = Proposed Change was already automated and cannot be deleted
UnifiedChangeMgt.Notice.ProposedSetStatusMaturity = Status can be modified only before '<Approved>' state
UnifiedChangeMgt.Notice.ProposedSetStatusPeopleBeforeApproval = Status can only be set by Change Action coordinator, owner or assignee before '<In Approval>'
UnifiedChangeMgt.Notice.ProposedSetStatusIgnoredNotFlowdown = Ignored status cannot be set on a non placeholder
UnifiedChangeMgt.Notice.ProposedSetStatusWrongBeforeApproval = Before '<In Approval>' the only allowed statuses are 'Not Started', 'Started', 'Partial' and 'Complete'
UnifiedChangeMgt.Notice.ProposedSetStatusPeopleApproval = Status can only be set by Change Action approvers in '<In Approval>'
UnifiedChangeMgt.Notice.ProposedSetStatusWrongApproval = In '<In Approval>', allowed statuses are 'Rejected' and 'Complete'
UnifiedChangeMgt.Notice.AtLeastOneProposedNotCompleteIgnored = At least one Proposed Change is not 'Complete'

UnifiedChangeMgt.Notice.ModifyProposedOperationResolution = Proposed operation cannot be modified as Resolution for it is already defined
UnifiedChangeMgt.Notice.ModifyProposedResolutionNotNoneProposed = Resolution can only be added to 'Modify' Proposed Changes
UnifiedChangeMgt.Notice.ResolutionNotComplaintWithChecks = Cannot promote Change Action as resolution items is either not configured or not Release or not Change Controlled by current Change Action
UnifiedChangeMgt.Notice.ModifyProposedResolutionObjectNotFound = Resolution passed in input cannot be found

#Error message when trying to create Change Action by user not having access
UnifiedChangeMgt.Notice.ChangeActionCreateAccess = You cannot create this type of object: Change Action \nVerify that you are using the correct credentials.\nYou may not have the required access role in the target collaborative space to create this type of object.


UnifiedChangeMgt.Notice.UserNotAllowedToRemoveChangeControl = User does not have the necessary privileges. Minimum role required to remove the Change Required is <role> in the organization and collaborative space of this object.
UnifiedChangeMgt.Notice.UserNotAllowedToRemoveChangeControlAccessBased = User does not have the necessary privileges. Minimum role required to remove the Change Required is <role> in the organization and collaborative space of this object. If not the case you should have demote or modify access with your current credentials.

UnifiedChangeMgt.Notice.MergeChangeAction.Generic = Change Actions merge failed:\n
EnterpriseChangeMgt.Notice.NotAbleToMergeChangeAction = Unable to merge Change Actions as one or more Impact Analysis is Complete
UnifiedChangeCommon.Notice.IssueDemoteResolvingItemInWork = <type> <name> cannot be demoted, as at least one Resolving Change started.
UnifiedChangeCommon.Notice.IssuePromoteResolvingItemIncomplete = <type> <name> cannot be promoted, as at least one Resolving Change connected did not reached its final state.
UnifiedChangeCommon.Notice.IssuePromoteResolvingItemNotInWork = <type> <name> cannot be promoted, None of the Resolving Change started.

UnifiedChangeMgt.Notice.Delete.NoAccess = User does not have the necessary privileges to delete this Change Action.
UnifiedChangeMgt.NoticeCAA.ApproveReject.Maturity = Change Action can be approved or rejected only in '<In Approval>' state.
UnifiedChangeMgt.NoticeCAA.ApproveReject.NoTask = No task to approve or reject for this user.
UnifiedChangeMgt.NoticeCAA.RequestDataToLarge=Number of Impacted Items connected to Change Action is more then 30.

UnifiedChangeMgt.NoticeCAA.InvalidComment = Comment should be provided for approval or rejection

###EnterpriseChangeMgt app Connected Change (Change Util) web service....................START
EnterpriseChangeMgt.ConnectedChangeService.Error.InputParamteresNotCorrect = Error: Input Parameters are not correct.
###EnterpriseChangeMgt app Connected Change (Change Util) web service....................END

###EnterpriseChangeMgt app Change Order web service....................START
EnterpriseChangeMgt.ChangeOrderService.Error.ObjectTypeNotSupported = Error: Object type not supported.
EnterpriseChangeMgt.ChangeOrderService.Error.TitleParameterRequired = Error: Title parameter is required to create change order.
EnterpriseChangeMgt.ChangeOrderService.Error.ReasonRequired = Error: reason parameter required.
EnterpriseChangeMgt.ChangeOrderService.Error.InputParamteresNotCorrect = Error: Input Parameters are not correct.
EnterpriseChangeMgt.ChangeOrderService.Error.RoleInputParamtereRequired = Error: Role input parameter required.
EnterpriseChangeMgt.ChangeOrderService.Error.OnlyOneAppovalRouteTemplate = Error: Only one approval route template can be supported by change order.
EnterpriseChangeMgt.ChangeOrderService.Error.NotAllObjectConnectedToParent = Error: not all objects are connected to parent object.
EnterpriseChangeMgt.ChangeOrderService.Error.MultipleContextObjectsNotSupported = Error: Multiple Context objects are not supported.
###EnterpriseChangeMgt app Change Order web service....................END

###EnterpriseChangeMgt app Change Request web service....................START
EnterpriseChangeMgt.ChangeRequestService.Error.ObjectTypeNotSupported = Error: Object type not supported.
EnterpriseChangeMgt.ChangeRequestService.Error.MultipleContextObjectsNotSupported = Error: Multiple Context objects are not supported.
EnterpriseChangeMgt.ChangeRequestService.Error.RoleInputParamtereRequired = Error: Role input parameter required.
EnterpriseChangeMgt.ChangeRequestService.Error.ReasonRequired = Error: reason parameter required.
EnterpriseChangeMgt.ChangeRequestService.Error.InputParametersNotCorrect = Unknown or invalid input format, please provide correct input
###EnterpriseChangeMgt app Change Request web service....................END

###EnterpriseChangeMgt app Change Action web service....................START
EnterpriseChangeMgt.ChangeActionService.Error.MultipleContextObjectsNotSupported = Error: Multiple Context objects are not supported.
EnterpriseChangeMgt.ChangeActionService.Error.ReasonRequired = Error: reason parameter required.
EnterpriseChangeMgt.ChangeActionService.Error.InputParamtersNotCorrect = Error: Input Parameters are not correct.
###EnterpriseChangeMgt app Change Action web service....................END

###EnterpriseChangeMgt CO Formal change Reviewer List###
EnterpriseChangeMgt.Label.COFormalChangeReviewerList= Reviewer List
###EnterpriseChangeMgt CO Formal change Reviewer List###

UnifiedChangeMgt.Message.Subject.ChangeResumed = <type> Resume Notification .
UnifiedChangeMgt.Message.Description.ChangeResumed = The <type> <name> <revision> has been Resumed.
UnifiedChangeMgt.Message.Subject.ChangeHold = <type> Hold Notification .
UnifiedChangeMgt.Message.Description.ChangeHold = The <type> <name> <revision> has been placed on Hold.


#----------------------------Change Order----------------------------------
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.ChangeActionOrchestration = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeOrder.Notice.NotAChangeOrder = This object is not a Change Order
UnifiedChangeMgt.ChangeOrder.Notice.IncorrectType = This object type does not correspond to a Change Order
UnifiedChangeMgt.ChangeOrder.Notice.OnHold = The Change Order should not be on hold for this operation
UnifiedChangeMgt.ChangeOrder.Notice.Cancel = The Change Order should not be cancelled for this operation
UnifiedChangeMgt.ChangeOrder.Notice.InApproval = The Change Order should be before '<In Approval>' state for this operation
UnifiedChangeMgt.ChangeOrder.Notice.Approved = The Change Order should be before '<Approved>' state for this operation
UnifiedChangeMgt.ChangeOrder.Notice.Complete = The Change order should not be '<Complete>' for this operation
UnifiedChangeMgt.ChangeOrder.Notice.NoAccess = You don't have the necessary privileges to execute this operation
UnifiedChangeMgt.ChangeOrder.Notice.IsFollower = <name> is already part of the followers
UnifiedChangeMgt.ChangeOrder.Notice.IsNotFollower = <name> is not part of the followers
UnifiedChangeMgt.ChangeOrder.Notice.ChangeAlreadyGovernedByChangeOrder = Unable to perform the operation as <type> <name> is already governed by this Change Order
UnifiedChangeMgt.ChangeOrder.Notice.ChangeNotGovernedByChangeOrder = Unable to perform the operation as <type> <name> is not governed by this Change Order
UnifiedChangeMgt.ChangeOrder.Notice.ChangeAlreadyGovernedByAnotherChangeOrder = Unable to perform the operation as <type> <name> is already governed by another Change Order
UnifiedChangeMgt.ChangeOrder.Notice.GovernedChangeApproved = Unable to perform the operation as <type> <name> is already '<Approved>'
UnifiedChangeMgt.ChangeOrder.Notice.GovernedChangeOnHold = Unable to perform the operation as <type> <name> is on hold
UnifiedChangeMgt.ChangeOrder.Notice.GovernedChangeCancelled = Unable to perform the operation as <type> <name> is cancelled
UnifiedChangeMgt.ChangeOrder.Notice.TypeNotElligibleForReferentials = The object <type> <name> <revision> is not allowed to be added as referential to the Change Order
UnifiedChangeMgt.ChangeOrder.Notice.ExistingReportedAgainst = Another object is already attached as reported against to the Change Order
UnifiedChangeMgt.ChangeOrder.Notice.ExistingApprovalRouteTemplate = Another Route Template is already attached to the Change Order
UnifiedChangeMgt.ChangeOrder.Notice.NotRouteTemplate = <type> <name> <revision> object passed in input is not a Route Template
UnifiedChangeMgt.ChangeOrder.Notice.InactiveRouteTemplate = <type> <name> <revision> identified as a Route Template passed in input is not active
UnifiedChangeMgt.ChangeOrder.Notice.NotApprovalRouteTemplate = <type> <name> <revision> identified as a Route Template passed in input is not an approval Route Template
UnifiedChangeMgt.ChangeOrder.Route.Description = Approval route generated to validate Change Order : <name>, titled : <title>
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.CancelManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.OnHoldManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.ChangeCoordinatorManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.FollowerManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.GovernedChangeManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.ReferentialManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.ReportedAgainstManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.RouteTemplateManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.ApplicabilityExpressionManagement = Only owner or change coordinator can perform this operation

UnifiedChangeMgt.ChangeOrder.Notice.TooManyApprovalRouteTemplate = Only one approval Route Template should be connected to the Change Order.
UnifiedChangeMgt.ChangeOrder.Notice.NoRouteTemplate = A Route Template should be associated to the Change Order for promotion to '<In Approval>'.

UnifiedChangeMgt.ChangeOrderService.Notice.GovernedChangeBeforeApproved = <type> <name> <revision> is not '<Approved>'.
UnifiedChangeMgt.ChangeOrderService.Notice.NoGovernedChangeApprovedOrBeyond = None of the governed change are in '<Approved>' state or beyond.
UnifiedChangeMgt.ChangeOrderService.Notice.ChangeOrderRouteNotCompleted = Change Order is connected to a Route which is not 'Complete'.
UnifiedChangeMgt.ChangeOrderService.Notice.ChangeOrderNoRouteInstantiated = No approval Route connected to the Change Order.
UnifiedChangeMgt.ChangeOrderService.Notice.GoverningChangeAfterInWork = governing Change <type> <name> <revision> should be prior to '<In Approval>' for this operation. 

#----------------------------Change Request----------------------------------
UnifiedChangeMgt.ChangeRequest.Notice.OrchestrationAnalysisType = Orchestration cannot be realized when Change Request's Analysis Type is defined as Simple
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.ImpactAnalysisOrchestration = Only Owner, Change Coordinator or Assignee can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.SimpleAnalysisType.OnlyOneChangeAnalysis = Impact Analysis cannot be removed or added when Change Request's Analysis Type is defined as Simple
UnifiedChangeMgt.ChangeRequest.Notice.NotAChangeRequest = This object is not a Change Request
UnifiedChangeMgt.ChangeRequest.Notice.IncorrectType = This object type does not correspond to a Change Request
UnifiedChangeMgt.ChangeRequest.Notice.IncorrectPolicy = Legacy elements cannot be used in this context
UnifiedChangeMgt.ChangeRequest.Notice.OnHold = The Change Request should not be on hold for this operation
UnifiedChangeMgt.ChangeRequest.Notice.Cancel = The Change Request should not be cancelled for this operation
UnifiedChangeMgt.ChangeRequest.Notice.InApproval = The Change Request should be before '<In Approval>' state for this operation
UnifiedChangeMgt.ChangeRequest.Notice.Complete = The Change Request should not be '<Complete>' for this operation
UnifiedChangeMgt.ChangeRequest.Notice.NoAccess = You don't have the necessary privileges to execute this operation.
UnifiedChangeMgt.ChangeRequest.Notice.IsFollower = <name> is already part of the followers
UnifiedChangeMgt.ChangeRequest.Notice.IsNotFollower = <name> is not part of the followers
UnifiedChangeMgt.ChangeRequest.Notice.IsAssignee = <name> is already part of the assignees
UnifiedChangeMgt.ChangeRequest.Notice.IsNotAssignee = <name> is not part of the assignees
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.AssigneeManagement = Only Owner, Change Coordinator or Assignee can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.MissingObject = One of the objects specified in input cannot be found, operation cannot be performed
UnifiedChangeMgt.ChangeRequest.Notice.InContextItems = <type> <name> <revision> is already identified as Context Item in the Change Request
UnifiedChangeMgt.ChangeRequest.Notice.InAffectedItems = <type> <name> <revision> is already identified as Affected Item in the Change Request
UnifiedChangeMgt.ChangeRequest.Notice.AffectedItemInImpactBasis = <type> <name> <revision> identified as Affected Item cannot be removed as it is consumed by an Impact Analysis.
UnifiedChangeMgt.ChangeRequest.Notice.InImplementingChange = <type> <name> is already identified as an Implementing Change of the Change Request
UnifiedChangeMgt.ChangeRequest.Notice.IncorrectTypeImplementingChange = <type> <name> <revision> cannot be added as Implementing Change as it is not a Change Action or a Change Order
UnifiedChangeMgt.ChangeRequest.Notice.ExistingApprovalRouteTemplate = Another Route Template is already attached to the Change Request
UnifiedChangeMgt.ChangeRequest.Notice.NotARouteTemplate = <type> <name> <revision> object passed in input is not a Route Template
UnifiedChangeMgt.ChangeRequest.Notice.InactiveRouteTemplate = <type> <name> <revision> identified as a Route Template passed in input is not active
UnifiedChangeMgt.ChangeRequest.Notice.NotApprovalRouteTemplate = <type> <name> <revision> identified as a Route Template passed in input is not an approval Route Template
UnifiedChangeMgt.ChangeRequest.Notice.TooManyApprovalRouteTemplate = The Change Request contains too many Route Template. Only one is expected.
UnifiedChangeMgt.ChangeRequest.Notice.NoRouteTemplate = A Route Template should be associated to the Change Request for promotion to '<In Approval>'
UnifiedChangeMgt.ChangeRequest.Notice.IsReportedAgainst = <type> <name> is already defined as connected Reported Against object of the Change Request
UnifiedChangeMgt.ChangeRequest.Route.Description = Approval route generated to validate Change Request : <name>, titled : <title>
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.CancelManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.OnHoldManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.ChangeCoordinatorManagement = Only owner or change coordinator can perform this operation


UnifiedChangeMgt.ChangeRequest.Notice.UserRole.RouteTemplateManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.ContextManagement = Only Owner, Change Coordinator or Assignee can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.AffectedItemManagement = User should be owner, coordinator or assignees of this Change Request (and target Change Request in case of move) to perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.ChangeAnalysisManagement = Only Owner, Change Coordinator or Assignee can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.ReportedAgainstManagement = Only Owner, Change Coordinator or Assignee can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.ImplementingChangeManagement = Only Owner, Change Coordinator or Assignee can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.FollowerManagement = Only Owner, Change Coordinator or Assignee can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.ApplicabilityExpressionManagement = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.ChangeRequest.Notice.ImplementingChangeManagementBeyondInApproval = <type> <name> <revision> cannot be added as Implementing Change. It should be before '<In Approval>' to be added as Implementing Change.
UnifiedChangeMgt.ChangeRequest.Notice.OnlyLeadersCanOwn = Only a Leader can own a Change Request
UnifiedChangeMgt.ChangeRequest.Notice.ImplementingChangeManagementBeyondInWork = Only changes in initial state can be added as Implementing Change when the Change Request has not been '<Approved>'.
UnifiedChangeMgt.ChangeRequestService.Notice.ChangeRequestNoRouteInstantiated = No approval Route connected to the Change Request.
UnifiedChangeMgt.ChangeRequestService.Notice.PromotionToCompleteNotAllowedParentStateKO = <type> <name> <revision> promotion is not allowed, governing Change Request should be in state Approved.

#----------------------------Change Analysis----------------------------------
UnifiedChangeMgt.ChangeAnalysis.Notice.UserRole.ChangeActionOrchestration = Only owner or assignee of the Impact Analysis can perform this operation
UnifiedChangeMgt.ChangeAnalysis.Notice.SimpleAnalysisType.CancelChangeAnalysis = Impact Analysis cannot be cancelled when its Change Request's Analysis Type is defined as Simple
UnifiedChangeMgt.ChangeAnalysis.Notice.SimpleAnalysisType.RemoveImpactBasis = <type> <name> <revision> identified as Analysis Basis cannot be removed before its corresponding Affected Item when the Change Request's Analysis Type is defined as Simple
UnifiedChangeMgt.ChangeAnalysis.Notice.OnHold = The Impact Analysis should not be on hold for this operation
UnifiedChangeMgt.ChangeAnalysis.Notice.Cancel = The Impact Analysis should not be cancelled for this operation
UnifiedChangeMgt.ChangeAnalysis.Notice.InApproval = The Impact Analysis should be before '<In Approval>' state for this operation
UnifiedChangeMgt.ChangeAnalysis.Notice.NoAccess = You don't have the necessary privileges to execute this operation.
UnifiedChangeMgt.ChangeAnalysis.Notice.IsAssignee = <name> is already part of the assignees
UnifiedChangeMgt.ChangeAnalysis.Notice.IsNotAssignee = <name> is not part of the assignees
UnifiedChangeMgt.ChangeAnalysis.Notice.MissingObject = One of the objects specified in input cannot be found, operation cannot be performed
UnifiedChangeMgt.ChangeAnalysis.Notice.IsImpactBasis = <type> <name> <revision> is already defined as an Analysis Basis of the Impact Analysis
UnifiedChangeMgt.ChangeAnalysis.Notice.IsNotAffectedItem = <type> <name> <revision> is not identified as an Affected Item of the Change Request and cannot be added as an Analysis Basis of the Impact Analysis
UnifiedChangeMgt.ChangeAnalysis.Notice.IsImpactedItem = <type> <name> <revision> is already defined as an Impacted Item of the Impact Analysis
UnifiedChangeMgt.ChangeAnalysis.Notice.UserRole.ImpactBasisManagement = Only owner or assignee of the Impact Analysis or owner, coordinator or assignees of the Change Request can perform this operation
UnifiedChangeMgt.ChangeAnalysis.Notice.UserRole.ImpactedItemManagement = Only owner or assignee of the Impact Analysis or owner, coordinator or assignees of the Change Request can perform this operation
UnifiedChangeMgt.ChangeAnalysis.Notice.UserRole.AssigneeManagement = Only owner of the Impact Analysis or owner, coordinator or assignees of the Change Request can perform this operation
UnifiedChangeMgt.ChangeAnalysis.Notice.UserRole.OnHoldManagement = Only owner of the Impact Analysis or owner, coordinator or assignees of the Change Request can perform this operation
UnifiedChangeMgt.ChangeAnalysis.Notice.UserRole.CancelManagement = Only owner of the Impact Analysis or owner, coordinator or assignees of the Change Request can perform this operation

UnifiedChangeMgt.ChangeCommon.Notice.ChangeRequestAfterApproved = <type> <name>, titled : <title> should be '<Approved>' or beyond for this operation.

#----------------------------Change Request Services-------------------------
UnifiedChangeMgt.ChangeRequestService.Notice.AffectedItemNotConsumedByChangeAnalysis = <type> <name> <revision> identified as Affected Item is not consumed by any active Impact Analysis
UnifiedChangeMgt.ChangeRequestService.Notice.ChangeAnalysisNotFrozenOrCancelled = <type> <name> should be '<In Approval>'
UnifiedChangeMgt.ChangeRequestService.Notice.NoFrozenChangeAnalysis = At least one Impact Analysis should have been performed to promote to '<In Approval>'
UnifiedChangeMgt.ChangeRequestService.Notice.ChangeRequestRouteNotCompleted = The Change Request still contains active Routes.
UnifiedChangeMgt.ChangeRequestService.Notice.ImplementingChangeNotCompleteOrCancelled = <type> <name> should be either Completed or Cancelled

#-------------------Change Request Form Analysis Type Field-------------------
EnterpriseChangeMgt.Label.AnalysisType =Analysis Type

#-------------------Change Request Form Informed Users Field-------------------
EnterpriseChangeMgt.Command.AddMemberList=Add Member List
EnterpriseChangeMgt.Notice.TooManyMemberList = Multiple Member List found connected to this object, please edit and select only one.

#------------------Change Request Summary Report----------------------
EnterpriseChangeMgt.Change.NoAffectedItemsConnected=No Affected Items Connected
EnterpriseChangeMgt.Command.ChangeActions=Change Actions
EnterpriseChangeMgt.Change.NoChangeActionConnected=No Change Actions Connected

#Added for IR-875061-3DEXPERIENCER2022x
EnterpriseChangeMgt.Command.AddUserGroup = Add User Group

#----------------------------- config.xml NLS entries ---------------------------------
#Hidden Fields
emxFramework.FullTextSearch.ECM_ROUTE_APPROVERS = Change approvers on Route
emxFramework.FullTextSearch.ECM_ROUTE_APPROVERS_THROUGH_GROUP = Change approvers on Route part of a group
emxFramework.FullTextSearch.ECM_ROUTE_TEMPLATE_APPROVERS = Change approvers from Route Template
emxFramework.FullTextSearch.ECM_ROUTE_TEMPLATE_APPROVERS_THROUGH_GROUP = Change approvers from Route Template part of a group

emxFramework.FullTextSearch.ECM_CHG_RESOLVED_ISSUE_ID = Resolved Issues identifier

emxFramework.FullTextSearch.ECM_CR_RELATED_SCOPE_ID = Related Scopes identifier
emxFramework.FullTextSearch.ECM_CR_AFFECTED_ITEM_ID = Affected Items identifier
emxFramework.FullTextSearch.ECM_CR_ATTACHMENT_ID = Attachments identifier
emxFramework.FullTextSearch.ECM_CR_IMPLEMENTING_CA_ID = Implementing Change Actions identifier
emxFramework.FullTextSearch.ECM_CR_IMPLEMENTING_CO_ID = Implementing Change Orders identifier
emxFramework.FullTextSearch.ECM_CR_CHANGE_COORDINATOR_NAME = Change Coordinator
emxFramework.FullTextSearch.ECM_CR_FOLLOWERS = Followers
emxFramework.FullTextSearch.ECM_CR_FOLLOWERS_THROUGH_GROUP = Followers part of a group
emxFramework.FullTextSearch.ECM_CR_IA_OWNERS = Impact Analysis owners
emxFramework.FullTextSearch.ECM_CR_IA_ASSIGNEES = Impact Analysis assignees

emxFramework.FullTextSearch.ECM_IA_IMPACT_BASIS_ID = Analysis Basis identifier
emxFramework.FullTextSearch.ECM_IA_ATTACHMENT_ID = Attachements identifier
emxFramework.FullTextSearch.ECM_IA_IMPACTED_ITEM_ID = Impacted Items identifier
emxFramework.FullTextSearch.ECM_IA_CR_ID = Change Request identifier
emxFramework.FullTextSearch.ECM_IA_ASSIGNEES = Assignees

emxFramework.FullTextSearch.ECM_CO_RELATED_SCOPE_ID = Related Scopes identifier
emxFramework.FullTextSearch.ECM_CO_ATTACHMENT_ID = Attachments identifier
emxFramework.FullTextSearch.ECM_CO_IS_IMPLEMENTING_CR_ID = Implemented Change Request identifier
emxFramework.FullTextSearch.ECM_CO_GOVERNING_CO_ID = Governing Change Order identifier
emxFramework.FullTextSearch.ECM_CO_GOVERNED_CO_ID = Governed Change Orders identifier
emxFramework.FullTextSearch.ECM_CO_GOVERNED_CA_ID = Governed Change Actions identifier
emxFramework.FullTextSearch.ECM_CO_CHANGE_COORDINATOR_NAME = Change Coordinator
emxFramework.FullTextSearch.ECM_CO_FOLLOWERS = Followers
emxFramework.FullTextSearch.ECM_CO_FOLLOWERS_THROUGH_GROUP = Followers part of a group

emxFramework.FullTextSearch.ECM_CA_GOVERNING_CO_ID = Governing Change Order identifier
emxFramework.FullTextSearch.ECM_CA_IS_IMPLEMENTING_CR_ID = Implemented Change Request identifier
emxFramework.FullTextSearch.ECM_CA_ATTACHMENT_ID = Attachments identifier
emxFramework.FullTextSearch.ECM_CA_CONTEXT_ID = Contexts identifier
emxFramework.FullTextSearch.ECM_CA_FLOWDOWN_IGNORED_ID = Ignored flow down identifier
emxFramework.FullTextSearch.ECM_CA_FLOWDOWN_IGNORED_UPDATESTAMP = Ignored flow down updatestamp
emxFramework.FullTextSearch.ECM_CHANGE_ACTION_GROUP_PHYSICALID = Associated Group of Changes title
emxFramework.FullTextSearch.ECM_CA_ASSIGNEE = Assignees
emxFramework.FullTextSearch.ECM_CA_DIRECT_REVIEWER = Explicit Approvers
emxFramework.FullTextSearch.ECM_CA_FOLLOWERS = Followers
emxFramework.FullTextSearch.ECM_CA_FOLLOWERS_THROUGH_GROUP = Followers part of a Group

#Other Fields
emxFramework.FullTextSearch.ECM_CHG_SEVERITY = Severity
emxFramework.FullTextSearch.ECM_CHG_ESTIMATED_START_DATE = Estimated start date
emxFramework.FullTextSearch.ECM_CHG_ESTIMATED_COMPLETION_DATE = Estimated completion date
emxFramework.FullTextSearch.ECM_CHG_ACTUAL_START_DATE = Actual start date
emxFramework.FullTextSearch.ECM_CHG_ACTUAL_COMPLETION_DATE = Actual completion date
emxFramework.FullTextSearch.ECM_CHG_REASON_FOR_CANCEL = Cancellation reason
emxFramework.FullTextSearch.ECM_CHG_ON_HOLD = Change on hold
emxFramework.FullTextSearch.ECM_CHG_HAS_RESOLVED_ISSUE = Is resolving Issue
emxFramework.FullTextSearch.ECM_CHG_RESOLVED_ISSUE_NAME = Resolved Issues name
emxFramework.FullTextSearch.ECM_CHG_RESOLVED_ISSUE_LABEL = Resolved Issues title

emxFramework.FullTextSearch.ECM_CR_IMPACT_ANALYSIS_TYPE = Analysis type
emxFramework.FullTextSearch.ECM_CR_HAS_APPLICABILITY = Applicability defined
emxFramework.FullTextSearch.ECM_CR_HAS_RELATED_SCOPE = Related Scopes attached
emxFramework.FullTextSearch.ECM_CR_RELATED_SCOPE_LABEL = Related Scopes title
emxFramework.FullTextSearch.ECM_CR_HAS_AFFECTED_ITEM = Affected Items associated
emxFramework.FullTextSearch.ECM_CR_HAS_ATTACHMENT = With Attachments
emxFramework.FullTextSearch.ECM_CR_ATTACHMENT_LABEL = Attachments title
emxFramework.FullTextSearch.ECM_CR_HAS_IMPACTED_ITEM = Impacted Items defined
emxFramework.FullTextSearch.ECM_CR_HAS_IMPLEMENTING = Implemented by a Change
emxFramework.FullTextSearch.ECM_CR_IMPLEMENTING_CA_NAME = Implementing Change Actions name 
emxFramework.FullTextSearch.ECM_CR_IMPLEMENTING_CA_LABEL = Implementing Change Actions title
emxFramework.FullTextSearch.ECM_CR_IMPLEMENTING_CO_NAME = Implementing Change Orders name
emxFramework.FullTextSearch.ECM_CR_IMPLEMENTING_CO_LABEL = Implementing Change Orders title
emxFramework.FullTextSearch.ECM_CR_HAS_IMPACT_ANALYSIS = Impact Analysis associated
emxFramework.FullTextSearch.ECM_CR_HAS_ACTIVE_IMPACT_ANALYSIS = Active Impact Analysis associated
emxFramework.FullTextSearch.ECM_CR_CHANGE_COORDINATOR_FULL_NAME = Change Coordinator name
emxFramework.FullTextSearch.ECM_CR_FOLLOWERS_FULL_NAME = Followers name
emxFramework.FullTextSearch.ECM_CR_FOLLOWERS_THROUGH_GROUP_FULL_NAME = Followers part of a group name

emxFramework.FullTextSearch.ECM_IA_HAS_APPLICABILITY = Applicability defined
emxFramework.FullTextSearch.ECM_IA_HAS_IMPACT_BASIS = Analysis Basis associated
emxFramework.FullTextSearch.ECM_IA_HAS_ATTACHMENT = With attachments
emxFramework.FullTextSearch.ECM_IA_ATTACHMENT_LABEL = Attachments title
emxFramework.FullTextSearch.ECM_IA_HAS_IMPACTED_ITEM = Impact Items defined
emxFramework.FullTextSearch.ECM_IA_ASSIGNEES_FULL_NAME = Assignees name

emxFramework.FullTextSearch.ECM_CO_HAS_APPLICABILITY = Applicability defined
emxFramework.FullTextSearch.ECM_CO_HAS_RELATED_SCOPE = Related Scopes attached
emxFramework.FullTextSearch.ECM_CO_RELATED_SCOPE_LABEL =Related Scopes title
emxFramework.FullTextSearch.ECM_CO_HAS_ATTACHMENT = With Attachments
emxFramework.FullTextSearch.ECM_CO_ATTACHMENT_LABEL = Attachments title
emxFramework.FullTextSearch.ECM_CO_IS_IMPLEMENTING_CR = Implementing a Change Request
emxFramework.FullTextSearch.ECM_CO_IS_IMPLEMENTING_CR_NAME = Implemented Change Request name
emxFramework.FullTextSearch.ECM_CO_IS_IMPLEMENTING_CR_LABEL = Implemented Change Request title
emxFramework.FullTextSearch.ECM_CO_HAS_GOVERNING_CO = Is governed by Change Order
emxFramework.FullTextSearch.ECM_CO_GOVERNING_CO_NAME = Governing Change Order name
emxFramework.FullTextSearch.ECM_CO_GOVERNING_CO_LABEL = Governing Change Order title
emxFramework.FullTextSearch.ECM_CO_HAS_GOVERNED_CO = Is governing Change Orders
emxFramework.FullTextSearch.ECM_CO_GOVERNED_CO_NAME = Governed Change Orders name
emxFramework.FullTextSearch.ECM_CO_GOVERNED_CO_LABEL = Governed Change Orders title
emxFramework.FullTextSearch.ECM_CO_HAS_GOVERNED_CA = Is governing Change Actions
emxFramework.FullTextSearch.ECM_CO_GOVERNED_CA_NAME = Governed Change Actions name
emxFramework.FullTextSearch.ECM_CO_GOVERNED_CA_LABEL = Governed Change Actions title
emxFramework.FullTextSearch.ECM_CO_CHANGE_COORDINATOR_FULL_NAME = Change Coordinator name
emxFramework.FullTextSearch.ECM_CO_FOLLOWERS_FULL_NAME = Followers name
emxFramework.FullTextSearch.ECM_CO_FOLLOWERS_THROUGH_GROUP_FULL_NAME = Followers part of a group name

emxFramework.FullTextSearch.ECM_CA_HAS_APPLICABILITY = Applicability defined
emxFramework.FullTextSearch.ECM_CA_HAS_GOVERNING_CO = Is governed by Change Order
emxFramework.FullTextSearch.ECM_CA_GOVERNING_CO_NAME = Governing Change Order name
emxFramework.FullTextSearch.ECM_CA_GOVERNING_CO_LABEL = Governing Change Order title
emxFramework.FullTextSearch.ECM_CA_IS_IMPLEMENTING_CR = Implementing a Change Request
emxFramework.FullTextSearch.ECM_CA_IS_IMPLEMENTING_CR_NAME = Implemented Change Request name
emxFramework.FullTextSearch.ECM_CA_IS_IMPLEMENTING_CR_LABEL = Implemented Change Request title
emxFramework.FullTextSearch.ECM_CA_HAS_ATTACHMENT = With Attachments
emxFramework.FullTextSearch.ECM_CA_ATTACHMENT_LABEL = Attachments title
emxFramework.FullTextSearch.ECM_CA_HAS_CONTEXT = With Context
emxFramework.FullTextSearch.ECM_CA_HAS_PROPOSED = With Proposed Changes
emxFramework.FullTextSearch.ECM_CA_HAS_FLOW_DOWN = With Flow Down
emxFramework.FullTextSearch.ECM_CA_HAS_REALIZED = With Realized Changes
emxFramework.FullTextSearch.ECM_CHANGE_ACTION_IS_GROUPED = Associated to a Group of Changes
emxFramework.FullTextSearch.ECM_CHANGE_ACTION_GROUP_NAME = Associated Group of Changes name
emxFramework.FullTextSearch.ECM_CA_ASSIGNEE_FULL_NAME = Assignees name
emxFramework.FullTextSearch.ECM_CA_DIRECT_REVIEWER_FULL_NAME = Explicit Approvers name
emxFramework.FullTextSearch.ECM_CA_FOLLOWERS_FULL_NAME = Followers name
emxFramework.FullTextSearch.ECM_CA_FOLLOWERS_THROUGH_GROUP_FULL_NAME = Followers part of of a group name

UnifiedChangeMgt.Notice.MergeChangeAction.NotInDraft = Change Actions can only be merged in Draft state 
UnifiedChangeMgt.Notice.MergeChangeAction.RealizedChanges = Change Actions with Realized Changes cannot be merged
UnifiedChangeMgt.Notice.MergeChangeAction.FlowdownActivities = Change Actions with Flow down cannot be merged
UnifiedChangeMgt.Notice.MergeChangeAction.GoverningChangeIssue = Change Actions should be standalone or governed by the same Change Order to be merged
UnifiedChangeMgt.Notice.MergeChangeAction.ReasonForCancel = Change Action cancelled and merged into Change Action named : <name>, titled : <attribute[Synopsis]>

UnifiedChangeMgt.ChangeApprovalEKL.Notice.IncompatibleInitialization = Cannot instantiate an Approval Route Template and an Approval Schema at the same time.
UnifiedChangeMgt.ChangeApprovalEKL.Notice.RouteTemplateNotFound = The specified Route Template cannot be found.

UnifiedChangeMgt.ChangeObject.Notice.DueDateSetInThePast = The Due Date cannot be in the past
UnifiedChangeMgt.ChangeObject.Notice.StartDateSetInThePast = The Estimated Start Date cannot be in the past

UnifiedChangeMgt.ChangeRequest.Notice.CreateChangeOrderOwnerRole = Default Implementing Change Order cannot be created. Change Coordinator of the Change Request (or owner if not defined) should be Leader or Restricted Leader in the organization and collaborative space of the Change Request.
UnifiedChangeMgt.Notice.IncorrectProposedChangeStatus = A least one Proposed Change status is prenventing the promotion. Proposed Changes should not be 'Rejected'.

UnifiedChangeMgt.Notice.IntroducedInstanceNeverValid = At least one instance introduced in the context of this Change Action is never valid. You should either modify the applicability or cancel the Change Action.

UnifiedChangeMgt.Notice.ECMConfigCheckAddedAsProposed = Object <type> <name> <revision> cannot be added as Proposed Change with this operation due to an applicative check.

UnifiedChangeMgt.ChangeAnalysis.Notice.UserRole.ImplementingChangeManagement = Only owner of the Impact Analysis or owner, coordinator or assignees of the Change Request can perform this operation.
UnifiedChangeMgt.ChangeAnalysis.Notice.InImplementingChange = <type> <name> is already identified as an Implementing Change of the Impact Analysis.
UnifiedChangeMgt.ChangeAnalysis.Notice.IncorrectTypeImplementingChange = <type> <name> <revision> cannot be added as Implementing Change as it is not a Change Action or a Change Order.
UnifiedChangeMgt.ChangeAnalysis.Notice.ImplementingChangeManagementBeyondInApproval = <type> <name> <revision> cannot be added as Implementing Change. It should be before '<In Approval>' to be added as Implementing Change.
UnifiedChangeMgt.ChangeAnalysis.Notice.ImplementingChangeManagementBeyondInWork = Only changes in initial state can be added as Implementing Change when the Change Request has not been '<Approved>'.

UnifiedChangeMgt.ChangeAnalysis.Notice.IsNotAffectedItem = <type> <name> <revision> is not identified as an Affected Item of the targeted Change Request Impact Basis cannot be carried over.
UnifiedChangeMgt.ChangeRequest.Notice.EditProperties.AnalysisTypeChangeSimpleForbidden = Analysis type cannot be switched to 'Simple' if an Impact Analysis is associated to the Change Request.

UnifiedChangeMgt.Notice.ChangeConstructor.NotAccessible = The Object cannot be displayed. Some possible reasons are:\n - The Object does not exist in the database.\n - You do not have access to view this object.

UnifiedChangeMgt.Notice.ConfiguredOperationNotAuthorizedInLimitedTracking = Configured operation under change is not allowed if parent is not set as 'Change Required' (Limited tracking restriction).

UnifiedChangeMgt.Notice.InputPointer.NotExistingElements = At least one object or relationship cannot be found, item cannot be instantiated.
UnifiedChangeMgt.NoticeCAA.TypeNotAllowed = Type specified in input is not valid
UnifiedChangeMgt.NoticeCAA.MultiValuesAttributes = Multi values attributes should be passed as a Json Array
UnifiedChangeMgt.NoticeCAA.SingleValueAttributes = Single value attributes should be passed as a String
UnifiedChangeMgt.ChangeRequest.Notice.DueDateSetInThePast = Invalid Date: Due Date should be Greater than Current Date. Please enter the valid Date

EnterpriseChangeMgt.Notice.ChangeActionAddProposedChangeStatusAlreadyCC = Object <type> <name> <revision> is already controlled by another Change Action

UnifiedChangeMgt.ChangeAnalysis.Notice.InputIsNotAChangeAnalysis = Object <type> <name> <revision> is not an Impact Analysis
UnifiedChangeMgt.ChangeAnalysis.Notice.IsNotAffectedItemForCopyIA = Impact Basis <type> <name> <revision> of the Impact Analysis to clone are not defined as Affected Items of the target Change Request
UnifiedChangeMgt.ChangeAnalysis.Notice.UserRole.Applicability = Only owner of the Impact Analysis or owner, coordinator or assignees of the Change Request can perform this operation

UnifiedChangeMgt.ChangeOrder.Notice.UserRole.AssigneeManagement = Only owner, change coordinator or assignee can perform this operation

UnifiedChangeMgt.ChangeRequest.Notice.DueDateSetInThePast = The Due Date cannot be in the past
UnifiedChangeMgt.ChangeRequest.Notice.UserRole.AttributesManagement = Only owner or change coordinator can perform this operation

UnifiedChangeMgt.Notice.CannotWorkUnderChangeGroupInactive = Change Group must be active in order to work under it
UnifiedChangeMgt.Notice.ChangeActionChangeOrderPeople = Only owner or change coordinator can perform this operation
UnifiedChangeMgt.Notice.ChangeActionModifyAccess = No modify access for <type> <name> <revision>
UnifiedChangeMgt.Notice.ChangeAutomationNotInWork = <type> <name> <revision> must be '<In Work>' to perform this operation
UnifiedChangeMgt.Notice.ChangeAutomationPeople = Only owner, change coordinator or assignee can perform this operation

UnifiedChangeMgt.Notice.Flowdown.Resolution.ReceivingChangeActionApprovalResolutionChange = Downstream <type> <name> <revision> can only have change status or rejection Resolutions
UnifiedChangeMgt.Notice.Flowdown.Resolution.ReceivingChangeActionPeople = Only owner, change coordinator or assignee can perform this operation
UnifiedChangeMgt.Notice.Flowdown.Resolution.ReceivingChangeActionPeopleApproval = Only approver can perform this operation
UnifiedChangeMgt.Notice.Flowdown.Resolution.ReceivingChangeActionStatus = Downstream <type> <name> <revision> must be in '<In Approval>' or before to perform this operation

UnifiedChangeMgt.Notice.GroupAlreadyExisting = Group Change Action already exists

UnifiedChangeMgt.Notice.Proposed.IntentNull = Proposed Change's intent cannot be null

UnifiedChangeMgt.NoticeCAA.IdentifierMustBeDefined = Identifier must be defined
UnifiedChangeMgt.NoticeCAA.InvalidEntryMissingWhereOrInternalId = Requires 'where' or 'internalid' to be defined in order to create or replace a Proposed Change

UnifiedChangeMgt.Notice.Route.Task.Completion.Comment = Task completed following approval closure by the system.

UnifiedChangeMgt.ChangeOrderService.Notice.GoverningChangeBeforeInWork = Governing Change <type> <name> should at least be '<In Work>' to allow this operation.

# Realized Ignore
UnifiedChangeMgt.Notice.RealizedReject.MissingInputElements = At least one realized element to ignore is already transferred to another Change Action or ignored.
UnifiedChangeMgt.Notice.RealizedReject.ChangeActionStatus = Change Action should be '<Prepare>' or '<In Work>' to ignore realized changes
UnifiedChangeMgt.Notice.RealizedReject.ChangeActionPeople = User should be owner, change coordinator or assignee of the Change Action
UnifiedChangeMgt.Notice.RealizedReject.ChangeActionHold = Change Action shouldn't be on hold
UnifiedChangeMgt.Notice.RealizedReject.Synchronization = Change Action contains synchronized data. It's not possible to apply an ignore on this Change Action

#Decision propagation
UnifiedChangeMgt.Notice.DecisionReleaseCheckChangeCancelled = <type> <title> is cancelled. It should be removed to allow the promotion.
UnifiedChangeMgt.Notice.DecisionReleaseCheckChangeBeyondApproval = <type> <title> is beyond '<In Approval>'. It should be demoted or removed to allow the promotion.
UnifiedChangeMgt.Notice.DecisionReleaseCheckChangeBeyondApproved = <type> <title> is beyond '<Approved>'. It should be demoted or removed to allow the promotion.
UnifiedChangeMgt.Notice.DecisionReleaseCheckChangeOnHold = <type> <title> is on hold. It should be removed or resumed to allow the promotion.

#Change Request Decomposition
UnifiedChangeMgt.ChangeRequest.Notice.Approved = The Change Request should not be '<Approved>' for this operation.

UnifiedChangeMgt.ChangeRequest.Notice.Decomposition.AlreadyPartDecomposition = <type> <name> <revision> is already part of this decomposition.
UnifiedChangeMgt.ChangeRequest.Notice.Decomposition.NotChangeRequest = Object <type> <name> <revision> is not a Change Request.
UnifiedChangeMgt.ChangeRequest.Notice.Decomposition.AlreadyGoverned = <type> <name> <revision> to be added is already part of another decomposition.
UnifiedChangeMgt.ChangeRequest.Notice.Decomposition.OnHold = <type> <name> <revision> to be added is on hold.
UnifiedChangeMgt.ChangeRequest.Notice.Decomposition.Cancelled = <type> <name> <revision> to be added is cancelled.
UnifiedChangeMgt.ChangeRequest.Notice.Decomposition.BeyondInWork = <type> <name> <revision> to be added is beyond '<In Work>'.
UnifiedChangeMgt.ChangeRequest.Notice.DeletionOfCrWithGovernedCrsNotAllowed = <type> <name> <revision>  deletion is not allowed, the Change Request is a governing CR
UnifiedChangeMgt.ChangeRequest.Notice.DeletionOfCrOwningIANotAllowed = <type> <name> <revision>  deletion is not allowed, the Change Request owns Impact Analysis

UnifiedChangeMgt.ChangeRequest.Notice.NoParentDispatch = Only an Impact Analysis from a governing Change Request can be dispatched to this Change Request.
UnifiedChangeMgt.ChangeRequest.Notice.NoChildDispatch = An Impact Analysis can only be dispatched to one of the governed Change Requests.
UnifiedChangeMgt.ChangeRequest.Notice.NoParentUndispatch = Only an Impact Analysis originally dispatched from a governing Change Request can be undispatched from this Change Request.
UnifiedChangeMgt.ChangeRequest.Notice.NoChildUndispatch = An Impact Analysis can only be undispatched if it was dispatched to one of the governed Change Request.

UnifiedChangeMgt.ChangeRequest.Notice.Decomposition.NoCRDecomposition = <type> <name> <revision> cannot be decomposed as its Analysis Type is 'Simple'

UnifiedChangeMgt.ChangeRequest.Notice.NoChangeAnalysis = Change Request does not own <type> <name> <revision>.

UnifiedChangeMgt.ChangeAnalysis.Notice.ContextualChangeRequest.NotDefined = Operation is allowed only when an Impact Analysis is open in context of a Change Request.
UnifiedChangeMgt.ChangeAnalysis.Notice.ContextualChangeRequest.Delete = <type> <name> <revision> can only be removed from its governing Change Request.
UnifiedChangeMgt.ChangeAnalysis.Notice.ContextualChangeRequest.Cancel = <type> <name> <revision> can only be cancelled from its governing Change Request.
UnifiedChangeMgt.ChangeAnalysis.Notice.ContextualChangeRequest.Refine = <type> <name> <revision> can only be cancelled from its governing Change Request.

UnifiedChangeMgt.ChangeAnalysis.Notice.UserRole.Delete = Only owner can perform this operation.
UnifiedChangeMgt.ChangeAnalysis.Notice.UserRole.Refine = Only owner of the Impact Analysis or owner, coordinator or assignees of the Change Request can perform this operation.

UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.Delete = <type> <name> <revision> is dispatched, it cannot be removed.
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.Delete.Cancel = <type> <name> <revision> is cancelled, it cannot be removed.
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.Delete.MultipleCROwner = <type> <name> <revision> is owned by multiple Change Requests, it cannot be removed.
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.Cancel = <type> <name> <revision> is dispatched, it cannot be cancelled.
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.Cancel.MultipleCROwner = <type> <name> <revision> is owned by multiple Change Requests, it cannot be cancelled.
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.Implementation.MultipleCROwner = <type> <name> <revision> is owned by multiple Change Requests, definition cannot be changed.
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.Recursive = Impact Analysis cannot be dispatched on more than one level.
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.Revursive = Impact Analysis cannot be dispatched on more than one level.
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.ImplementingChange = <type> <name> <revision> cannot contains Implementing Changes and be dispatched.

UnifiedChangeMgt.ChangeAnalysis.Notice.Refine.CancelledCR = <type> <name> <revision> cannot be refined in a Cancelled Change Request.
UnifiedChangeMgt.ChangeAnalysis.Notice.Refine.InApprovalCR = <type> <name> <revision> cannot be refined in an In Approval Change Request.
UnifiedChangeMgt.ChangeAnalysis.Notice.Refine.CompleteCR = <type> <name> <revision> cannot be refined in a Complete Change Request.

UnifiedChangeMgt.ChangeRequestService.Notice.PromotionToCompleteNotAllowed = <type> <name> <revision>  promotion is not allowed, governed Change Requests should be in state '<Complete>'
UnifiedChangeMgt.ChangeRequestService.Notice.PromotionToInApprovalNotAllowed = <type> <name> <revision>  promotion is not allowed, governed Change Requests state should be greater than '<In Approval>'
UnifiedChangeMgt.ChangeRequestService.Notice.DemotionToInApprovalNotAllowed = <type> <name> <revision>  demotion is not allowed, governed Change Requests should not be in state '<In Approval>'
UnifiedChangeMgt.ChangeRequestService.Notice.ChangeAnalysisNotComplete = Change Request cannot be promoted, <type> <name> <revision> is not in state '<Complete>'
UnifiedChangeMgt.ChangeRequestService.Notice.GoverningChangeRequestNotInWork = <type> <name> <revision> cannot be promoted to state <In Work>, governing change request is in a state prior to '<In Work>'
UnifiedChangeMgt.ChangeRequestService.Notice.PromotionToApprovedNotAllowed = <type> <name> <revision> cannot be promoted to state '<Approved>', at least one of the governed Change Requests is under approval process
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.BeforeComplete = <type> <name> <revision> cannot be dispatched, it should be in state '<Complete>'
UnifiedChangeMgt.ChangeRequest.Notice.ResumeForbidden = <type> <name> <revision>  cannot be resumed with parent on hold.

UnifiedChangeMgt.ChangeAnalysis.Notice.Refine.ImplementingChange = <type> <name> <revision> cannot contains Implementing Changes and be refined.
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.DeleteCancel = <type> <name> <revision> is cancelled and cannot be deleted.
UnifiedChangeMgt.ChangeAnalysis.Notice.Dispatch.DeleteMultipleCROwner = <type> <name> <revision> is dispatched and owned by multiple Change Requests, it cannot be deleted.

UnifiedChangeMgt.Notice.CaIsNotConnectedToActiveApprovalRouteTemplate = <type> <name> <revision> needs a 'Route Template' for approval to comply with the approval rules defined by your administrator.

UnifiedChangeMgt.Notice.CaWithoutCrNotAllowedIW = <type> <name> <revision> should be associated to a Change Request to be promoted to '<In Approval>'.
UnifiedChangeMgt.Notice.CaWithoutCrNotAllowedApproved = <type> <name> <revision> should be associated to a Change Request to be promoted to '<Complete>'.
UnifiedChangeMgt.Notice.CaWithoutCoNotAllowedIW = <type> <name> <revision> should be governed by a Change Order to be promoted to '<In Approval>'.
UnifiedChangeMgt.Notice.CaWithoutCoNotAllowedApproved = <type> <name> <revision> should be governed by a Change Order to be promoted to '<Complete>'.

UnifiedChangeMgt.ChangeOrder.Notice.IsAssignee = <name> is already part of the assignees
UnifiedChangeMgt.ChangeOrder.Notice.IsNotAssignee = <name> is not part of the assignees
UnifiedChangeMgt.ChangeOrder.Notice.UserRole.AttributesManagement = Only owner or change coordinator can perform this operation.

UnifiedChangeMgt.ChangeDecision.Notice.NotADecision = Object is not a decision.
UnifiedChangeMgt.Notice.Flowdown.LinkAlreadyExists = This flowdown already exists
UnifiedChangeMgt.Notice.ModifyObjectNotAggregated = <type> <name> <revision> is not a composee of the object declared in Proposed Change.
UnifiedChangeMgt.Notice.ModifyRelationshipNotAggregated = Relationship does not belong to the object declared in Proposed Change.

UnifiedChangeMgt.Notice.Independencies.LinkAlreadyExists = This independency is already registered.
UnifiedChangeMgt.Notice.Independencies.FlowdownDependencyCoDependencyExists = This independency cannot be registered as a both elements are already linked by flowdown, dependency or codependency.
UnifiedChangeMgt.Notice.Independencies.NotLocalFromTo = At least one of both sides is not available on the current site.
UnifiedChangeMgt.Notice.Independencies.NotAuthorableGraphElement = At least one element in the dependency is not authorable on the current site
UnifiedChangeMgt.Notice.Independencies.InvalidIndependencyAttachment = Both sides of an independency should be Change Orders or standalone Change Actions.
UnifiedChangeMgt.Notice.Independencies.UserPrivileges = User does not have enough privileges.
UnifiedChangeMgt.Notice.Independencies.NotAuthorableFromTo = At least one of both sides is not authorable On the current site.
UnifiedChangeMgt.Notice.Independencies.NotLocalGraphElement = At least one element in the dependency graph is not available on the current site.
UnifiedChangeMgt.Notice.Independencies.IndependencyViolation = Creating this independency constraint is not valid based on the already existing dependencies. 
UnifiedChangeMgt.Notice.Flowdown.IndependencyExists = It is not possible to create this flowdown as both Change Actions are specified as independents.
UnifiedChangeMgt.Notice.Flowdown.IndependencyViolation = It is not possible to create this flowdown at least two changes defined as independents would become dependent.
UnifiedChangeMgt.Notice.Dependencies.IndependencyExists = It is not possible to create this dependency or codependency as both changes are defined as independent.
UnifiedChangeMgt.Notice.Dependencies.IndependencyViolation = It is not possible to create this dependency or codependency at least two changes defined as independents would become dependent.
UnifiedChangeMgt.Notice.ChgDecomposition.IndependencyViolation = It is not possible to create this change decomposition at least two changes defined as independents would become dependent.

################Parameterization console####################
# Object Identification
OOTBParameterization.ObjectIdentification.ObjectIdentifier.CANaming = Change Action

# LifecycleTopology
OOTBParameterization.LifecycleTopology.ChangeAction = Change Action
OOTBParameterization.LifecycleTopology.ChangeOrder = Change Order
OOTBParameterization.LifecycleTopology.ChangeRequest = Change Request
OOTBParameterization.LifecycleTopology.ImpactAnalysis = Impact Analysis

# Param table
OOTBParameterization.ChangeParameterization = Change Management
OOTBParameterization.ChangeParameterization.tooltip = Configure Change Management experience

# Change Action governance
OOTBParameterization.ChangeParameterization.StandaloneChange = Change Action governance requirements for approval
OOTBParameterization.ChangeParameterization.StandaloneChange.tooltip = Makes it mandatory to have Change Action be connected to a Change Order Or a Change Request before being promoted to In Approval or to Complete

OOTBParameterization.ChangeParameterization.StandaloneChange.DisableStandalone = Change Order required for Change Action approval and completion
OOTBParameterization.ChangeParameterization.StandaloneChange.DisableStandalone.tooltip = Makes it mandatory to have Change Action be connected to a Change Order for approval and completion
OOTBParameterization.ChangeParameterization.StandaloneChange.DisableStandalone.Argument = Change Order required for Change Action Approval and completion
OOTBParameterization.ChangeParameterization.StandaloneChange.DisableStandalone.Argument.tooltip = Makes it mandatory to have Change Action be connected to a Change Order for approval

OOTBParameterization.ChangeParameterization.StandaloneChange.MandateCR = Change Request required for Change Action approval and completion
OOTBParameterization.ChangeParameterization.StandaloneChange.MandateCR.tooltip = Makes it mandatory to have Change Action be connected to a Change Request for approval and completion
OOTBParameterization.ChangeParameterization.StandaloneChange.MandateCR.Argument = Change Request required for Change Action approval and completion
OOTBParameterization.ChangeParameterization.StandaloneChange.MandateCR.Argument.tooltip = Makes it mandatory to have Change Action be connected to a Change Request for approval and completion

# Change roles
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles = Change Roles
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.tooltip = Manage Baseline roles for Change roles

OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeOwnerBaseline = Change Action owner role
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeOwnerBaseline.tooltip = Define the Baseline role to own a Change Action. In any case, at least one user owning a Leader role (in the organization and collaborative space of the Change Action) will have to approve or own the Change Action for approval.
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeOwnerBaseline.Argument = Change Action owner role
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeOwnerBaseline.Argument.tooltip = Define the Baseline role to own a Change Action. In any case, at least one user owning a Leader role (in the organization and collaborative space of the Change Action) will have to approve or own the Change Action for approval.
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeOwnerBaseline.Argument.Leader= Leader
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeOwnerBaseline.Argument.Leader.tooltip = Only user having a Leader role will be able to own a Change Action
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeOwnerBaseline.Argument.All = At Least Contributor
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeOwnerBaseline.Argument.All.tooltip = Only user having at least a Contributor role will be able to own a Change Action

OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline = Change Action approver(s) roles
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.tooltip = Define the Baseline role to review a Change Action. In any case, at least one user owning a Leader role (in the organization and collaborative space of the Change Action) will have to approve or own the Change Action for approval.
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.Argument = Change Action approvers(s) roles
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.Argument.tooltip = Define the Baseline role to review a Change Action. In any case, at least one user owning a Leader role (in the organization and collaborative space of the Change Action) will have to approve or own the Change Action for approval.
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.Argument.AllLeader = Only Leaders
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.Argument.AllLeader.tooltip = Only Leaders can review a Change Action 
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.Argument.OneLeader = One Leader
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.Argument.OneLeader.tooltip = At least one approver must be a Leader to review a change
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.Argument.All = At least Reader
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.Argument.All.tooltip = At least Reader role can review a Change Action, but at least one Leader must exist as owner or approver.
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.Argument.Baseline = Data and Baseline Behavior driven
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerBaseline.Argument.Baseline.tooltip = Approval will be conditional to owner and approvers role in a Baseline Behavior environment.

OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreOwner = Do not allow change action owner to be the only approver
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreOwner.tooltip = If checked, the owner cannot be the only approver of the change action. If the owner is a approver a secondary approver will be required, but it cannot violate any of the parameters below.
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreOwner.Argument = Do not allow change action owner to be the only approver
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreOwner.Argument.tooltip = If checked, the owner cannot be the only approver of the change action. If the owner is a approver a secondary approver will be required, but it cannot violate any of the parameters below.

OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreContributors = Do not allow change action assignees to be the only approvers
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreContributors.tooltip = If checked, the assignee cannot be the only approver of change action. If an assignee is a approver a secondary approver will be required, but it cannot violate any of the parameters below. You can have multiple assignees as approvers.
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreContributors.Argument = Do not allow change action assignees to be the only approvers
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreContributors.Argument.tooltip = If checked, the assignee cannot be the only approver of change action. If an assignee is a approver a secondary approver will be required, but it cannot violate any of the parameters below. You can have multiple assignees as approvers.

OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreCoordinator = Do not allow change action governing change coordinator to be the only approvers
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreCoordinator.tooltip = If checked, the change coordinator from the parent change order cannot be the only approver of the change action.
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreCoordinator.Argument = Do not allow change action governing change coordinator to be the only approvers
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.ChangeReviewerIgnoreCoordinator.Argument.tooltip = If checked, the change coordinator from the parent change order cannot be the only approver of the change action.

OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.EnforceRouteTemplateOnCA = Mandate Route Template for Change Action approval
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.EnforceRouteTemplateOnCA.tooltip = If checked, the Change Action cannot be promoted to In Approval unless approval is based on a Route Template.
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.EnforceRouteTemplateOnCA.Argument = Mandate Route Template for Change Action approval
OOTBParameterization.ChangeParameterization.ChangeBaselineRoles.EnforceRouteTemplateOnCA.Argument.tooltip = If checked, the Change Action cannot be promoted to In Approval unless approval is based on a Route Template.

# Instance freeze
OOTBParameterization.ChangeParameterization.InstanceFreezeChange = Check Physical Product instance "fix position"
OOTBParameterization.ChangeParameterization.InstanceFreezeChange.tooltip = Check Physical Product instance "fix position" configuration
OOTBParameterization.ChangeParameterization.InstanceFreezeChange.EnableInstanceFreezeChange = Enable Physical Product instance fixed position check
OOTBParameterization.ChangeParameterization.InstanceFreezeChange.EnableInstanceFreezeChange.tooltip = When checked, instances created or modified by a Change Action must be fixed position to allow the Change Action promotion to In Approval
OOTBParameterization.ChangeParameterization.InstanceFreezeChange.EnableInstanceFreezeChange.Argument = Enable Physical Product instance fix position check
OOTBParameterization.ChangeParameterization.InstanceFreezeChange.EnableInstanceFreezeChange.Argument.tooltip = When checked, instances created or modified by a Change Action must be fixed position to allow the Change Action promotion to In Approval

# Change Required
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck = Change Required options
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.tooltip = Change Required options definition

OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableReviseChangeControlCheck = Enable Change Required check on revise
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableReviseChangeControlCheck.tooltip = When checked, it will not be possible to revise a Change Required object without working under a Change Action.
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableReviseChangeControlCheck.Argument = Enable Change Required check on revise
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableReviseChangeControlCheck.Argument.tooltip = When checked, it will not be possible to revise a Change Required object without working under a Change Action.

OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableChangeControlGranularity = Change Required on Instance and Composee in Configured Structure
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableChangeControlGranularity.tooltip = This would enables the strict Change Required behavior on more granular level under the Root node (Composer) of configured structure for its Composee elements like Instances(Relationships), Ports and Connections.
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableChangeControlGranularity.Argument = Change Required on Instance and Composee in Configured Structure
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableChangeControlGranularity.Argument.tooltip = This would enables the strict Change Required behavior on more granular level under the Root node (Composer) of configured structure for its Composee elements like Instances(Relationships), Ports and Connections.

OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel = Change Required removal minimum role
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.tooltip = Defines the minimum that a user needs to have to unset the Change Required.
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument = Change Required removal minimum role
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.tooltip = Defines the minimum that a user needs to have to unset the Change Required.
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.Admin = Administrator
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.Admin.tooltip = Only people granted as administrators are allowed to remove the Change Required on objects. Applicable to all the objects on the server.
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.Owner = Owner
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.Owner.tooltip = In addition to previous setting, Owners can remove the Change Required on objects which belong to the project in which they are Owner (Regardless of the organization)
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.RestrictedOwner = Restricted Owner
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.RestrictedOwner.tooltip = In addition to previous setting, Restricted Owner can remove the Change Required on objects which belong to the project and organization in which they are Restricted Owner.
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.Leader = Leader
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.Leader.tooltip = In addition to previous setting, Leaders can remove the Change Required on objects which belong to the project and organization in which they are Leader.
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.RestrictedLeader = Restricted Leader
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.RestrictedLeader.tooltip = In addition to previous setting, Restricted Leaders can remove the Change Required on objects which belong to the project and organization in which they are Restricted Leader.
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.Access = Access Based
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.ChangeControlRemovalLevel.Argument.RestrictedLeader.tooltip = In addition to previous setting, any user having the demote or modify access on the object with their current login can remove the Change Required.

OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableFullChangeControlRemoval = Enable Change Required automatic removal
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableFullChangeControlRemoval.tooltip = When checked, Change Required will be removed from objects at Change Action cancellation and a Proposed Activity 'Change Status' removal. Applicable only when user owns the appropriate privileges.
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableFullChangeControlRemoval.Argument = Enable Change Required automatic removal
OOTBParameterization.ChangeParameterization.reviseChangeControlCheck.EnableFullChangeControlRemoval.Argument.tooltip = When checked, Change Required will be removed from objects at Change Action cancellation and a Proposed Activity 'Change Status' removal. Applicable only when user owns the appropriate privileges.

# Proposed Changes
OOTBParameterization.ChangeParameterization.proposedChangeAttachment = Proposed Change Attachment
OOTBParameterization.ChangeParameterization.proposedChangeAttachment.tooltip = Proposed Change Attachment

OOTBParameterization.ChangeParameterization.proposedChangeAttachment.EnableProposedChangeDefaultAsModify = Always set 'Modify' as default operation for 'Proposed Changes'
OOTBParameterization.ChangeParameterization.proposedChangeAttachment.EnableProposedChangeDefaultAsModify.tooltip = When checked, default 'Proposed Change' association will be done as operation 'Modify' activity 'Modify'.
OOTBParameterization.ChangeParameterization.proposedChangeAttachment.EnableProposedChangeDefaultAsModify.Argument = Always set 'Modify' as default operation for 'Proposed Changes'
OOTBParameterization.ChangeParameterization.proposedChangeAttachment.EnableProposedChangeDefaultAsModify.Argument.tooltip = When checked, default 'Proposed Change' association will be done as operation 'Modify' activity 'Modify'.

# Change Action Group
OOTBParameterization.ChangeParameterization.ChangeActionGroup = Change Action Group
OOTBParameterization.ChangeParameterization.ChangeActionGroup.tooltip = Enablement of Change Action Group

OOTBParameterization.ChangeParameterization.ChangeActionGroup.EnableChangeActionGroup = Enable Change Action Group functionality
OOTBParameterization.ChangeParameterization.ChangeActionGroup.EnableChangeActionGroup.tooltip = When checked, Change Action Group functionality will be enabled. This option allows to create Groups of Change Actions.
OOTBParameterization.ChangeParameterization.ChangeActionGroup.EnableChangeActionGroup.Argument = Enable Change Action Group functionality
OOTBParameterization.ChangeParameterization.ChangeActionGroup.EnableChangeActionGroup.Argument.tooltip = When checked, Change Action Group functionality will be enabled. This option allows to create Group of Change Actions.

# Change Action automatic freeze
OOTBParameterization.ChangeParameterization.ChangeActionAutoFreeze = Change Action Auto Freeze
OOTBParameterization.ChangeParameterization.ChangeActionAutoFreeze.tooltip = Enablement of Change Action Auto Freeze

OOTBParameterization.ChangeParameterization.ChangeActionAutoFreeze.EnableChangeActionAutoFreeze = Enable Change Action Auto Freeze functionality
OOTBParameterization.ChangeParameterization.ChangeActionAutoFreeze.EnableChangeActionAutoFreeze.tooltip = When checked, Change Action Auto Freeze functionality will be enabled. This option allows to automatically freeze the impacted objects during the promotion of the Change Action from "In Work" to "In Approval" if it has one assignee or less.
OOTBParameterization.ChangeParameterization.ChangeActionAutoFreeze.EnableChangeActionAutoFreeze.Argument = Enable Change Action Auto Freeze functionality
OOTBParameterization.ChangeParameterization.ChangeActionAutoFreeze.EnableChangeActionAutoFreeze.Argument.tooltip = When checked, Change Action Auto Freeze functionality will be enabled. This option allows to automatically freeze the impacted objects during the promotion of the Change Action from "In Work" to "In Approval" if it has one assignee or less.

# Change demotion on rejection
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection = Change demotion on rejection
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection = Enablement of Change demotion on rejection functionalities

OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeActionDemoteOnRejection = Automatically demote Change Action when approval is rejected
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeActionDemoteOnRejection.tooltip = When checked, when a approval task on a Change Action is rejected the Change Action will automatically be demoted to 'In Work'
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeActionDemoteOnRejection.Argument = Automatically demote Change Action when approval is rejected
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeActionDemoteOnRejection.Argument.tooltip = When checked, when a approval task on a Change Action is rejected the Change Action will automatically be demoted to 'In Work'

OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeOrderDemoteOnRejection = Automatically demote Change Order when approval is rejected
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeOrderDemoteOnRejection.tooltip = When checked, when a approval task on a Change Order is rejected the Change Order will automatically be demoted to 'In Work'
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeOrderDemoteOnRejection.Argument = Automatically demote Change Order when approval is rejected
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeOrderDemoteOnRejection.Argument.tooltip = When checked, when a approval task on a Change Order is rejected the Change Order will automatically be demoted to 'In Work'

OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeRequestDemoteOnRejection = Automatically demote Change Request when approval is rejected
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeRequestDemoteOnRejection.tooltip = When checked, when a approval task on a Change Request is rejected the Change Request will automatically be demoted to 'In Work'
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeRequestDemoteOnRejection.Argument = Automatically demote Change Request when approval is rejected
OOTBParameterization.ChangeParameterization.ChangeDemoteOnRejection.ChangeRequestDemoteOnRejection.Argument.tooltip = When checked, when a approval task on a Change Request is rejected the Change Request will automatically be demoted to 'In Work'

# Change Action and configuration
OOTBParameterization.ChangeParameterization.ChangeActionCheckEffectivities = Change Action and configuration
OOTBParameterization.ChangeParameterization.ChangeActionCheckEffectivities.tooltip = Enable of Change Action and configuration options

OOTBParameterization.ChangeParameterization.ChangeActionCheckEffectivities.ChangeActionCheckFalseEffectivitiesAtApproval = Block Change Action promotion to In Approval when introducing never valid instances
OOTBParameterization.ChangeParameterization.ChangeActionCheckEffectivities.ChangeActionCheckFalseEffectivitiesAtApproval.tooltip = When checked, prevent Change Actions introducing new instances which are never valid to move to 'In Approval'
OOTBParameterization.ChangeParameterization.ChangeActionCheckEffectivities.ChangeActionCheckFalseEffectivitiesAtApproval.Argument = Block Change Action promotion to In Approval when introducing never valid instances
OOTBParameterization.ChangeParameterization.ChangeActionCheckEffectivities.ChangeActionCheckFalseEffectivitiesAtApproval.Argument.tooltip = When checked, prevent Change Actions introducing new instances which are never valid to move to 'In Approval'

OOTBParameterization.ChangeParameterization.ChangeActionCheckEffectivities.ChangeActionOfficializeMultiModelControl = Restrict propagated applicability in order to match the structures configuration context
OOTBParameterization.ChangeParameterization.ChangeActionCheckEffectivities.ChangeActionOfficializeMultiModelControl.tooltip = When checked, applicability propagation of the Change Action will be based on the configuration context of the impacted structures
OOTBParameterization.ChangeParameterization.ChangeActionCheckEffectivities.ChangeActionOfficializeMultiModelControl.Argument = Restrict propagated applicability in order to match the structures configuration context
OOTBParameterization.ChangeParameterization.ChangeActionCheckEffectivities.ChangeActionOfficializeMultiModelControl.Argument.tooltip = When checked, applicability propagation of the Change Action will be based on the configuration context of the impacted structures

# Impact Analysis attributes
OOTBParameterization.ChangeParameterization.ImpactAnalysisDefaultAttributes = Impact Analysis Attributes
OOTBParameterization.ChangeParameterization.ImpactAnalysisDefaultAttributes.tooltip = Impact Analysis Attributes management

OOTBParameterization.ChangeParameterization.ImpactAnalysisDefaultAttributes.ECMEnableDefaultChangeAnalysis = Enable default attributes for new Impact Analyses
OOTBParameterization.ChangeParameterization.ImpactAnalysisDefaultAttributes.ECMEnableDefaultChangeAnalysis.tooltip = When checked, default attributes will be present on new Impact Analyses
OOTBParameterization.ChangeParameterization.ImpactAnalysisDefaultAttributes.ECMEnableDefaultChangeAnalysis.Argument = Enable default attributes for new Impact Analyses
OOTBParameterization.ChangeParameterization.ImpactAnalysisDefaultAttributes.ECMEnableDefaultChangeAnalysis.Argument.tooltip = When checked, default attributes will be present on new Impact Analyses

# Change Order for Change Request orchestration
OOTBParameterization.ChangeParameterization.DefaultChangeOrderAtChangeRequestApproval =  Create Change Order for Change Request Orchestration 
OOTBParameterization.ChangeParameterization.DefaultChangeOrderAtChangeRequestApproval.tooltip = Create Change Order for Change Request Orchestration

OOTBParameterization.ChangeParameterization.DefaultChangeOrderAtChangeRequestApproval.ECM_DefaultImplementingChangeOrderRequested = Create orchestration Change Order after Change Request approval
OOTBParameterization.ChangeParameterization.DefaultChangeOrderAtChangeRequestApproval.ECM_DefaultImplementingChangeOrderRequested.tooltip = When checked, a Change Order will be created and connected as implementing change after Change Request approval
OOTBParameterization.ChangeParameterization.DefaultChangeOrderAtChangeRequestApproval.ECM_DefaultImplementingChangeOrderRequested.Argument = Create orchestration Change Order after Change Request approval
OOTBParameterization.ChangeParameterization.DefaultChangeOrderAtChangeRequestApproval.ECM_DefaultImplementingChangeOrderRequested.Argument.tooltip = When checked, a Change Order will be created and connected as implementing change after Change Request approval

