# emxFolderManagement.properties   -  Properties file.
#
# (c) Dassault Systemes, 1993-2020. All rights reserved.



# Javascript Define Bad Characters for use in description, note and other fields
enoFolderManagement.Javascript.BadChars =
# Javascript Define Bad Characters for use in Name fields
enoFolderManagement.Javascript.NameBadChars = \\\" # $ @ % * , ? \\\\ < > [ ] | :
# Javascript Define Bad Characters for use in FileName fields
enoFolderManagement.Javascript.FileNameBadChars = ' # $ @ %

enoFolderManagement.FolderWidget.BadNameChars=The following characters are Bad Name characters:  

# Default name of the personal workspace created by the person creation
emxComponents.Default.PersonalWorkspaceName = My Folder

# This is used to make sure folder getting connected should be in same Collaborative Space or not of the parent folder. 
# Possible value are 'Context' or 'Root'
# Root Means folder getting connected should be in the same Collaborative Space of the Parent Folder.
# Context means Folder getting connected doesn't need to be of the same collaborative space of the parent folder.
enoFolderManagement.FolderOwnership=Context

# This is used to make sure folder content getting connected should be in same Collaborative Space or not of the parent folder. 
# Possible value are 'Context' or 'Folder'
# "Folder" Means content getting connected should be in the same Collaborative Space of the Parent Folder.
# "Context" means content getting connected doesn't need to be of the same collaborative space of the parent folder.

# When this property is set to 'Folder'
# Then the property CommonDocument.CreateDocument.PrimaryOwnershipRule in emxComponents.proerties file should be set as 'Folder'
# Other wise creating a Document in Team Central would have issue when created under different collaborative space than folder. 
# As this property will not let the document created under collaborative space CS1 to be connected to the folder of different collaborative space.
enoFolderManagement.FolderContentOwnership=Context

# This is the property to detect recursion in filter children functionality probably caused by CAT Analysis and CAT Representation
# This is needed as by changing code to detect recursion causing the PCS regression on every save.
# The default value is set to 'False' as that means it will not expect the recursion to be part of the structure
# The other possible value is 'True' In this case the if the structure has recursion it will be ignored but introduces PCS regression.
enoFolderManagement.FilterChildren.DetectRecursion = False
