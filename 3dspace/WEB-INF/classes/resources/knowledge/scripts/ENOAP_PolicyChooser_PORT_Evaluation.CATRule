/* Rule ENONT_PolicyChooser (ThisObject: PLMEntity, Parameters: RuleContext)                                      */
/* NOT CONTRACTUAL and PROPERTY OF TE (TEAM ENVIRONMENT) DEFINITION, ANY CHANGE MAY HAPPEN WITHOUT NOTICE         */
/* Parameters contains many information such as name, user, security ... depending on Operation                   */
/* Notice this BL operates OpeningID INFRAAuthorizedPolicies                                                      */

/*
/*tempo code : the list of policies should be provided from server kernel dictionnary                             */
/*                    default policy                                                                              */
/*hard coded from the time being will be substituted by a more generic rule implying kernel policy dictionnary    */

/*below logic may imply testing role to provide evaluation rather than definition */

Let DefaultPolicyName(STRING) 
Let listOtherPolicies(List)

Let ModelingType(Type)
Let ModelingTypeName(String)

Let LoginRole(STRING) 

LoginRole=""
DefaultPolicyName=""

/********** PrimaryType is the custom type of a DS Modeling type ******/
ModelingTypeName=""
ModelingType = ThisObject.ModelerType
if (ModelingType<>NULL){
   ModelingTypeName=ModelingType.Name 
}

/*********** Applicability of the policy ********/
if (ThisObject->IsSupporting("PLMPort") == false) {
    Trace (1, "ENOAP_PLMPort_BLAutorizedPolicies: Invalid Object type " + ModelingTypeName )    
    Parameters.Message="wrong usage of rule ENOAP_PLMPort_BLAutorizedPolicies on type " + ModelingTypeName
    Parameters.Severity=3 
	Report("Error",Parameters.Message, Parameters.Message)     
}

/*********** Business Role ********/
if ( Parameters->HasAttribute("Role") == true ) {
   LoginRole=Parameters->GetAttributeString("Role")
}

/***********Default Policy **************/
DefaultPolicyName="VPLM_SMB_PORT_Evaluation"

Trace (1, "ENOAP_PolicyChooser: Allocating default policy "+DefaultPolicyName+" for type "+ModelingTypeName  )    
Parameters->SetAttributeString("PolicyName",DefaultPolicyName)

/***********Other Policy Applicable**************/
/*listOtherPolicies.Append("xxx")*/
Parameters->SetAttributeObject("OtherPolicies",listOtherPolicies)



