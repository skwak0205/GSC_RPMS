// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================

// WARNING : this modeler can not be customized, so this mask is used for both VPM and SMB env.
//For SMB this is the sub-class of attribute, they have to be always presented to user in that order
//a) ident
//b) description 
//c) state of dev
//d) ownership

MASK DEFAULT
// --------------------------------------------------
ENTITY PLMBusinessRule
// --------------------------------------------------
//a) ident
// For compatibility with non RACE (as our modeler is not customizable), V_Name is not required
ATTR V_Name;N;N;$
//to superseed two below attributes
ATTR revision;N;N;$   
//ATTR majorrevision;N;N;$
//ATTR minorrevision;N;N;$
ATTR PLM_ExternalID;Y;N;$

//b) description
ATTR E_versionComment;N;N;$
ATTR V_description;N;N;$
ATTR V_OpeningId;Y;N;$
ATTR V_ExecutionType;N;Y;$
VALUE BRValidation
VALUE BRComputation
VALUE BRExecution
ATTR originated;N;N;$
ATTR E_fromExternalId;N;N;$
ATTR V_Scope;N;Y;$
VALUE ClientOnly
VALUE ServerOnly
VALUE ClientAndServer
VALUE FromSpec
ATTR V_hasPrecedence;N;Y;No
VALUE No
VALUE Yes

//c) state of dev
ATTR policy;N;N;$
ATTR reservedby;N;N;$
ATTR modified;N;N;$
ATTR current;N;N;$
ATTR V_usage;N;N;$

//d) ownership
ATTR owner;Y;N;$
ATTR organization;Y;N;$
ATTR project;N;N;$

// -----------------------------------------------------------
FUNC Create
// -----------------------------------------------------------
FATTR V_Name;Y
FATTR PLM_ExternalID;Y
FATTR V_description;Y
FATTR policy;N
FATTR V_Scope;Y
FATTR V_hasPrecedence;Y

// -----------------------------------------------------------
FUNC EZQuery
// -----------------------------------------------------------
//a) ident
FATTR V_Name;Y
FATTR PLM_ExternalID;Y
FATTR revision;Y
FATTR V_Scope;Y
FATTR V_hasPrecedence;Y

//b) description
FATTR V_OpeningId;Y
FATTR V_ExecutionType;Y

//c) state of dev
FATTR modified;Y

//d) ownership
FATTR project;Y

// -----------------------------------------------------------
FUNC List
// -----------------------------------------------------------
//a) ident
FATTR V_Name;N
FATTR PLM_ExternalID;N
FATTR V_Scope;N
FATTR V_hasPrecedence;N

//b) description
FATTR V_OpeningId;N
FATTR V_description;N
FATTR V_ExecutionType;N
FATTR originated;N

//c) state of dev
FATTR reservedby;N
FATTR modified;N

//d) ownership
FATTR owner;N
FATTR organization;N
FATTR project;N

// -----------------------------------------------------------
FUNC Query
// -----------------------------------------------------------
//a) ident
FATTR V_Name;Y
FATTR PLM_ExternalID;Y
FATTR V_Scope;Y
FATTR V_hasPrecedence;Y
FATTR V_OpeningId;Y
FATTR V_ExecutionType;Y
FATTR revision;Y 

//b) description
FATTR E_versionComment;Y
FATTR V_description;Y
FATTR originated;Y
FATTR E_fromExternalId;Y

//c) state of dev
FATTR policy;Y
FATTR modified;Y
FATTR current;Y
FATTR reservedby;Y

//d) owner
FATTR owner;Y
FATTR organization;Y
FATTR project;Y

// -----------------------------------------------------------
FUNC Read
// -----------------------------------------------------------
//a) ident
FATTR V_Name;N
FATTR PLM_ExternalID;N
FATTR revision;N  
FATTR E_versionComment;N
FATTR V_description;N
//FATTR majorrevision;N
//FATTR minorrevision;N
FATTR V_Scope;N
FATTR V_hasPrecedence;N

//b) description
FATTR V_OpeningId;N
FATTR V_ExecutionType;N
FATTR originated;N
FATTR E_fromExternalId;N

//c) state of dev
FATTR policy;N
FATTR modified;N
FATTR current;N
FATTR reservedby;N

//d) owner
FATTR owner;N
FATTR organization;N
FATTR project;N

// -----------------------------------------------------------
FUNC Tree
// -----------------------------------------------------------
FATTR V_Name;N
FATTR revision;N
//FATTR majorrevision;N
FATTR PLM_ExternalID;N

// -----------------------------------------------------------
FUNC Write
// -----------------------------------------------------------
//a) ident
FATTR V_Name;Y
FATTR PLM_ExternalID;Y
FATTR revision;N  
FATTR E_versionComment;Y
FATTR V_description;Y
FATTR originated;N
FATTR E_fromExternalId;N
//FATTR majorrevision;N
//FATTR minorrevision;N
FATTR V_Scope;N
FATTR V_hasPrecedence;N

//b) description
FATTR V_OpeningId;N
FATTR V_ExecutionType;N

//c) state of dev
FATTR policy;N
FATTR modified;N
FATTR current;N

//d) owner
FATTR owner;N
FATTR organization;N
FATTR project;N
