// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
MASK DEFAULT
//
// --------------------------------------------------
ENTITY Chapter
// --------------------------------------------------
ATTR Originator;N;N;$
ATTR Title;Y;N;$
ATTR current;N;N;$
ATTR description;N;N;$
ATTR modified;N;N;$
ATTR name;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$
ATTR revision;N;N;$

// ---------
FUNC Tree
// ---------
FATTR Title;N
FATTR revision;N
// ---------
FUNC Create
// ---------
FATTR name;N
//FATTR revision;Y
FATTR Title;Y
//FATTR description;Y
// ---------
FUNC EZQuery
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR Originator;Y
FATTR Title;Y
// ---------
FUNC List
// ---------
FATTR name;N
FATTR revision;N
FATTR Title;N
FATTR current;N
FATTR organization;N
FATTR description;N
FATTR reserved;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
FATTR project;N
FATTR owner;N
FATTR Originator;N
// ---------
FUNC Query
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR Originator;Y
FATTR Title;Y
// ---------
FUNC Read
// ---------
FATTR Title;N
FATTR name;N
FATTR revision;N
FATTR current;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
// ---------
FUNC Write
// ---------
FATTR name;N
FATTR revision;N
FATTR Title;Y
FATTR current;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Comment
// --------------------------------------------------
ATTR Content Data;N;N;$
ATTR Content Text;N;N;$
ATTR Content Type;N;N;rtf.gz.b64
ATTR Originator;N;N;$
ATTR Title;Y;N;$
ATTR current;N;N;$
ATTR description;N;N;$
ATTR modified;N;N;$
ATTR name;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$
ATTR revision;N;N;$

// ---------
FUNC Tree
// ---------
FATTR Title;N
FATTR revision;N
// ---------
FUNC Create
// ---------
FATTR name;N
//FATTR revision;Y
FATTR Title;Y
//FATTR description;Y
// ---------
FUNC EZQuery
// ---------
FATTR name;Y
FATTR Title;N
FATTR revision;Y
FATTR current;Y
FATTR description;Y
FATTR organization;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR Originator;Y
FATTR Content Text;Y
// ---------
FUNC List
// ---------
FATTR revision;N
FATTR organization;N
FATTR description;N
FATTR name;N
FATTR Title;N
FATTR current;N
FATTR reserved;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
FATTR project;N
FATTR owner;N
FATTR Originator;N
FATTR Content Text;N
// ---------
FUNC Query
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR Title;N
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR Originator;Y
FATTR Content Text;Y
// ---------
FUNC Read
// ---------
FATTR name;N
FATTR Title;N
FATTR revision;N
FATTR Content Text;N
FATTR current;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
// ---------
FUNC Write
// ---------
FATTR name;N
FATTR Title;Y
FATTR revision;N
FATTR Content Text;N
FATTR current;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Customer Requirement   @Inherits
// --------------------------------------------------
//
//
// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Customer Requirement Specification   @Inherits
// --------------------------------------------------
//
//
// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// -----------------------------------------------------------
ENTITY Customer Response Requirement Specification   @Inherits
// -----------------------------------------------------------
//
//
// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Customer Specification   @Inherits
// --------------------------------------------------
//
//
// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Derived Requirement
// --------------------------------------------------
ATTR Link Status;N;N;Suspect
ATTR Sequence Order;N;N;0 
ATTR TreeOrder;N;N;0 
//ATTR Vault Access;N;N;Read
ATTR modified;N;N;$
//ATTR name;N;N;$ 
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$

// ---------
FUNC Tree
// ---------
//FATTR name;N
FATTR revision;N
// ---------
FUNC Create
// ---------
//FATTR Vault Access;Y
// ---------
FUNC EZQuery
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;Y 
//FATTR Vault Access;Y
//FATTR Sequence Order;Y 
//FATTR TreeOrder;Y 
FATTR Link Status;Y 
// ---------
FUNC List
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N 
//FATTR Vault Access;N
//FATTR Sequence Order;N 
//FATTR TreeOrder;N
FATTR Link Status;N
// ---------
FUNC Query
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;Y
//FATTR Vault Access;Y
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 
FATTR Link Status;Y
// ---------
FUNC Read
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR Sequence Order;N
//FATTR TreeOrder;N
FATTR Link Status;N
// ---------
FUNC Write
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y
FATTR Link Status;Y

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Feature Requirement Specification   @Inherits
// --------------------------------------------------
//
//
// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Product Requirement Specification   @Inherits
// --------------------------------------------------
//
//
// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Requirement
// --------------------------------------------------
ATTR Content Data;N;N;$
ATTR Content Text;N;N;$
ATTR Content Type;N;N;rtf.gz.b64
ATTR Designated User;N;N;Unassigned
ATTR Difficulty;N;Y;Low
VALUE High
VALUE Medium
VALUE Low
ATTR Estimated Cost;N;N;0.00
ATTR Notes;N;N;$
ATTR Originator;N;N;$
ATTR Priority;N;Y;Low
VALUE Pre-assigned
VALUE Medium
VALUE Low
VALUE High
VALUE Urgent
ATTR Requirement Category;N;N;$
ATTR Requirement Classification;N;Y;Functional
VALUE None
VALUE Functional
VALUE Non-Functional
VALUE Constraint
ATTR Sponsoring Customer;N;N;$
ATTR Synopsis;N;N;$
ATTR Title;Y;N;$
ATTR User Requirement Importance;N;Y;Least Important
VALUE Low
VALUE Mediocre
VALUE High
VALUE Very High
VALUE Least Important
ATTR current;N;Y;Private
VALUE Private
VALUE InWork
VALUE Frozen
VALUE Release
VALUE Obsolete
ATTR description;N;N;$
ATTR modified;N;N;$
ATTR name;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$
ATTR revision;N;N;$
//ATTR lattice;N;N;$

// ---------
FUNC Tree
// ---------
FATTR Title;N
FATTR revision;N
// ---------
FUNC Create
// ---------
FATTR name;N
//FATTR revision;Y
FATTR Title;Y
//FATTR description;Y
FATTR Requirement Classification;Y
FATTR User Requirement Importance;Y
FATTR Priority;Y
FATTR Difficulty;Y
FATTR Sponsoring Customer;Y
// ---------
FUNC EZQuery
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR Requirement Category;Y
FATTR Designated User;Y
FATTR Sponsoring Customer;N
FATTR Originator;Y
FATTR Title;Y
FATTR Priority;Y
FATTR User Requirement Importance;Y
FATTR Notes;Y
//FATTR Estimated Cost;Y
FATTR Difficulty;Y
FATTR Synopsis;Y
FATTR Requirement Classification;Y
FATTR Content Text;Y
// ---------
FUNC List
// ---------
FATTR name;N
FATTR revision;N
FATTR Title;N
FATTR current;N
FATTR organization;N
FATTR description;N
FATTR project;N
FATTR reserved;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
FATTR owner;N
FATTR Requirement Category;N
FATTR Designated User;N
FATTR Sponsoring Customer;N
FATTR Originator;N
FATTR Priority;N
FATTR User Requirement Importance;N
FATTR Notes;N
//FATTR Estimated Cost;N
FATTR Difficulty;N
FATTR Synopsis;N
FATTR Requirement Classification;N
FATTR Content Text;N
// ---------
FUNC Query
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR Requirement Category;Y
FATTR Designated User;Y
FATTR Sponsoring Customer;N
FATTR Originator;Y
FATTR Title;Y
FATTR Priority;Y
FATTR User Requirement Importance;Y
FATTR Notes;Y
//FATTR Estimated Cost;Y
FATTR Difficulty;Y
FATTR Synopsis;Y
FATTR Requirement Classification;Y
FATTR Content Text;Y
// ---------
FUNC Read
// ---------
FATTR Title;N
FATTR name;N
FATTR revision;N
FATTR current;N
FATTR Content Text;N
FATTR Requirement Classification;N
FATTR User Requirement Importance;N
FATTR Priority;N
FATTR Difficulty;N
FATTR Sponsoring Customer;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
// ---------
FUNC Write
// ---------
FATTR name;N
FATTR revision;N
FATTR Title;Y
FATTR current;N
FATTR Content Text;N
FATTR Requirement Classification;Y
FATTR User Requirement Importance;Y
FATTR Priority;Y
FATTR Difficulty;Y
FATTR Sponsoring Customer;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Requirement Group
// --------------------------------------------------
ATTR Notes;N;N;$
ATTR Originator;N;N;$
ATTR Title;Y;N;$
ATTR current;N;N;$
ATTR description;N;N;$
ATTR locked;N;N;false
ATTR locker;N;N;$
ATTR modified;N;N;$
ATTR name;N;N;$
ATTR revision;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$
ATTR revision;N;N;$

// ---------
FUNC Tree
// ---------
FATTR Title;N
FATTR revision;N
// ---------
FUNC Create
// ---------
FATTR name;N
//FATTR revision;Y
FATTR Title;Y
//FATTR description;Y
// ---------
FUNC EZQuery
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR locked;Y
FATTR locker;Y
FATTR Originator;Y
FATTR Notes;Y
FATTR Title;Y
// ---------
FUNC List
// ---------
FATTR name;N
FATTR revision;N
FATTR Title;N
FATTR organization;N
FATTR description;N
FATTR current;N
FATTR reserved;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
FATTR project;N
FATTR owner;N
FATTR locked;N
FATTR locker;N
FATTR Originator;N
FATTR Notes;N
// ---------
FUNC Query
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR locked;Y
FATTR locker;Y
FATTR Originator;Y
FATTR Notes;Y
FATTR Title;Y
// ---------
FUNC Read
// ---------
FATTR Title;N
FATTR name;N
FATTR revision;N
FATTR current;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
// ---------
FUNC Write
// ---------
FATTR name;N
FATTR revision;N
FATTR Title;Y
FATTR current;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N


// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Requirement Group Content
// --------------------------------------------------
ATTR Sequence Order;N;N;0
ATTR TreeOrder;N;N;0 
//ATTR Vault Access;N;N;Read
ATTR modified;N;N;$
//ATTR revision;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$

// ---------
FUNC Tree
// ---------
//FATTR name;N
//FATTR revision;N
// ---------
FUNC Create
// ---------
//FATTR Vault Access;Y
// ---------
FUNC EZQuery
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;Y
//FATTR Vault Access;Y
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 
// ---------
FUNC List
// ---------
//FATTR name;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR Vault Access;N
//FATTR Sequence Order;N
//FATTR TreeOrder;N
// ---------
FUNC Query
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;Y
//FATTR Vault Access;Y
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 
// ---------
FUNC Read
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR Sequence Order;N
//FATTR TreeOrder;N
// ---------
FUNC Write
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;Y 
//FATTR Vault Access;N
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Requirement Specification
// --------------------------------------------------
ATTR Access Type;N;N;Inherited
ATTR Checkin Reason;N;N;$
ATTR Designated User;N;N;Unassigned
ATTR File Version;N;N;$
ATTR Language;N;N;English
ATTR Notes;N;N;$
ATTR Objective;N;N;$
ATTR Originator;N;N;$
ATTR Synopsis;N;N;$
ATTR Title;Y;N;$
ATTR Version;N;N;$
ATTR Version Date;N;N;$
ATTR current;N;N;$
ATTR description;N;N;$
ATTR locked;N;N;false
ATTR locker;N;N;$
ATTR modified;N;N;$
ATTR name;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$
ATTR revision;N;N;$

// ---------
FUNC Tree
// ---------
FATTR Title;N
FATTR revision;N
// ---------
FUNC Create
// ---------
FATTR name;N
//FATTR revision;Y
FATTR Title;Y
//FATTR description;Y
// ---------
FUNC EZQuery
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR locked;Y
FATTR locker;Y
FATTR Access Type;Y
FATTR Designated User;Y
FATTR Checkin Reason;Y
FATTR Originator;Y
FATTR Title;Y
FATTR Language;Y
FATTR Version Date;Y
FATTR Version;Y
FATTR File Version;Y
FATTR Notes;Y
FATTR Synopsis;Y
FATTR Objective;Y
// ---------
FUNC List
// ---------
FATTR name;N
FATTR revision;N
FATTR Title;N
FATTR current;N
FATTR organization;N
FATTR description;N
FATTR reserved;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
FATTR project;N
FATTR owner;N
FATTR locked;N
FATTR locker;N
FATTR Access Type;N
FATTR Designated User;N
FATTR Checkin Reason;N
FATTR Originator;N
FATTR Language;N
FATTR Version Date;N
FATTR Version;N
FATTR File Version;N
FATTR Notes;N
FATTR Synopsis;N
FATTR Objective;N
// ---------
FUNC Query
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR locked;Y
FATTR locker;Y
FATTR Access Type;Y
FATTR Designated User;Y
FATTR Checkin Reason;Y
FATTR Originator;Y
FATTR Title;Y
FATTR Language;Y
FATTR Version Date;Y
FATTR Version;Y
FATTR File Version;Y
FATTR Notes;Y
FATTR Synopsis;Y
FATTR Objective;Y
// ---------
FUNC Read
// ---------
FATTR Title;N
FATTR name;N
FATTR revision;N
FATTR current;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
// ---------
FUNC Write
// ---------
FATTR name;N
FATTR revision;N
FATTR Title;Y
FATTR current;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Specification
// --------------------------------------------------
ATTR Access Type;N;N;Inherited
ATTR Checkin Reason;N;N;$
ATTR Designated User;N;N;Unassigned
ATTR File Version;N;N;$
ATTR Language;N;N;English
ATTR Notes;N;N;$
ATTR Objective;N;N;$
ATTR Originator;N;N;$
ATTR Synopsis;N;N;$
ATTR Title;Y;N;$
ATTR Version;N;N;$
ATTR Version Date;N;N;$
ATTR current;N;N;$
ATTR description;N;N;$
ATTR locked;N;N;false
ATTR locker;N;N;$
ATTR modified;N;N;$
ATTR name;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$
ATTR revision;N;N;$
// ---------
FUNC Tree
// ---------
FATTR Title;N
FATTR revision;N
// ---------
FUNC Create
// ---------
FATTR Access Type;Y
FATTR Designated User;Y
FATTR Checkin Reason;Y
FATTR Originator;Y
FATTR Title;Y
FATTR Language;Y
// ---------
FUNC EZQuery
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR locked;Y
FATTR locker;Y
FATTR Access Type;Y
FATTR Designated User;Y
FATTR Checkin Reason;Y
FATTR Originator;Y
FATTR Title;Y
FATTR Language;Y
FATTR Version Date;Y
FATTR Version;Y
FATTR File Version;Y
FATTR Notes;Y
FATTR Synopsis;Y
FATTR Objective;Y
// ---------
FUNC List
// ---------
FATTR revision;N
FATTR organization;N
FATTR description;N
FATTR name;N
FATTR current;N
FATTR reserved;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
FATTR project;N
FATTR owner;N
FATTR locked;N
FATTR locker;N
FATTR Access Type;N
FATTR Designated User;N
FATTR Checkin Reason;N
FATTR Originator;N
FATTR Title;N
FATTR Language;N
FATTR Version Date;N
FATTR Version;N
FATTR File Version;N
FATTR Notes;N
FATTR Synopsis;N
FATTR Objective;N
// ---------
FUNC Query
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR locked;Y
FATTR locker;Y
FATTR Access Type;Y
FATTR Designated User;Y
FATTR Checkin Reason;Y
FATTR Originator;Y
FATTR Title;Y
FATTR Language;Y
FATTR Version Date;Y
FATTR Version;Y
FATTR File Version;Y
FATTR Notes;Y
FATTR Synopsis;Y
FATTR Objective;Y
// ---------
FUNC Read
// ---------
FATTR revision;N
FATTR organization;N
FATTR description;N
FATTR name;N
FATTR current;N
FATTR reserved;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
FATTR project;N
FATTR owner;N
FATTR locked;N
FATTR locker;N
FATTR Access Type;N
FATTR Designated User;N
FATTR Checkin Reason;N
FATTR Originator;N
FATTR Title;N
FATTR Language;N
FATTR Version Date;N
FATTR Version;N
FATTR File Version;N
FATTR Notes;N
FATTR Synopsis;N
FATTR Objective;N
// ---------
FUNC Write
// ---------
FATTR revision;N
FATTR organization;N
FATTR description;N
FATTR name;N
FATTR current;N
FATTR reserved;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
FATTR project;N
FATTR owner;N
FATTR Originator;N
FATTR locked;N
FATTR locker;N
FATTR Access Type;Y
FATTR Designated User;N
FATTR Checkin Reason;Y
FATTR Title;Y
FATTR Language;Y
FATTR Version Date;N
FATTR Version;N
FATTR File Version;N
FATTR Notes;N
FATTR Synopsis;N
FATTR Objective;N

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Specification Structure
// --------------------------------------------------
ATTR Sequence Order;N;N;0
ATTR TreeOrder;N;N;0 
//ATTR Vault Access;N;N;Read
ATTR modified;N;N;$
//ATTR name;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$

// ---------
FUNC Tree
// ---------
//FATTR name;N
FATTR revision;N
// ---------
FUNC Create
// ---------
//FATTR Vault Access;Y
// ---------
FUNC EZQuery
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;Y
//FATTR Vault Access;Y
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 
// ---------
FUNC List
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR Sequence Order;N
//FATTR TreeOrder;N
// ---------
FUNC Query
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;
//FATTR Vault Access;Y
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 
// ---------
FUNC Read
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR Sequence Order;N
//FATTR TreeOrder;N
// ---------
FUNC Write
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;Y
//FATTR Vault Access;N
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Sub Requirement
// --------------------------------------------------
ATTR Link Status;N;N;Suspect
ATTR Sequence Order;N;N;0
ATTR TreeOrder;N;N;0 
//ATTR Vault Access;N;N;Read
ATTR modified;N;N;$
//ATTR name;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$

// ---------
FUNC Tree
// --------- 
//FATTR name;N
FATTR revision;N
// ---------
FUNC Create
// ---------
//FATTR Vault Access;Y
// ---------
FUNC EZQuery
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;Y
//FATTR Vault Access;Y
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 
FATTR Link Status;Y
// ---------
FUNC List
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR Sequence Order;N
//FATTR TreeOrder;N
FATTR Link Status;N
// ---------
FUNC Query
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;Y
//FATTR Vault Access;Y
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 
FATTR Link Status;Y
// ---------
FUNC Read
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR Sequence Order;N
//FATTR TreeOrder;N
FATTR Link Status;N
// ---------
FUNC Write
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;Y
//FATTR Vault Access;N
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 
FATTR Link Status;Y

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Sub Requirement Group
// --------------------------------------------------
ATTR Sequence Order;N;N;0
ATTR TreeOrder;N;N;0 
//ATTR Vault Access;N;N;Read
ATTR modified;N;N;$
//ATTR revision;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$

// ---------
FUNC Tree
// ---------
//FATTR name;N
//FATTR revision;N
// ---------
FUNC Create
// ---------
//FATTR Vault Access;Y
// ---------
FUNC EZQuery
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;Y
//FATTR Vault Access;Y
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 
// ---------
FUNC List
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR Sequence Order;N
//FATTR TreeOrder;N
// ---------
FUNC Query
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;Y
//FATTR Vault Access;Y
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 
// ---------
FUNC Read
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR Sequence Order;N
//FATTR TreeOrder;N
// ---------
FUNC Write
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;Y
//FATTR Vault Access;Y
//FATTR Sequence Order;Y
//FATTR TreeOrder;Y 

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// ----------------------------------------------------
ENTITY Sub System Requirement Specification   @Inherits
// ----------------------------------------------------
//

// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY Sub Use Case
// --------------------------------------------------
ATTR TreeOrder;N;N;0 
//ATTR Vault Access;N;N;Read
ATTR modified;N;N;$
//ATTR name;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$

// ---------
FUNC Tree
// ---------
//FATTR name;N
FATTR revision;N
// ---------
FUNC Create
// ---------
//FATTR Vault Access;Y
// ---------
FUNC EZQuery
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;Y
//FATTR Vault Access;Y
//FATTR TreeOrder;Y 
// ---------
FUNC List
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR TreeOrder;N
// ---------
FUNC Query
// ---------
FATTR owner;Y
FATTR project;Y
FATTR organization;Y
FATTR originated;Y
FATTR modified;Y
FATTR reserved;Y
FATTR reservedby;Y
//FATTR name;
//FATTR Vault Access;Y
//FATTR TreeOrder;Y 
// ---------
FUNC Read
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;N
//FATTR Vault Access;N
//FATTR TreeOrder;N
// ---------
FUNC Write
// ---------
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR originated;N
FATTR modified;N
FATTR reserved;N
FATTR reservedby;N
//FATTR name;Y
//FATTR Vault Access;N
//FATTR TreeOrder;Y
//
// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY System Requirement Specification   @Inherits
// --------------------------------------------------
//
//
// ==============================================================================
// Syntax: 
//   MASK DEFAULT
//   ENTITY <entity>
//   ATTR   <attr>;<required>;<are_values_authorized_values>;<def_val>
//   VALUE  <value>
//   FUNC   <method>
//   FATTR  <attr>;<modif>
// with: <entity>   = entity name
//       <attr>     = atribute name
//       <required> = required attr logical flag (Y or N)
//       <are_values_authorized_values>
//                  = authorized values logical flag (Y or N):
//                    N -> help values / Y -> authorized values
//       <def_val>  = default value
//       <value>    = a string value (can have blanks)
//                    When <are_values_authorized_values> equals:
//                    N -> an help value / Y -> an authorized value
//       <method>   = one of the following operations:
//                    Create         : attr appears in creation panels
//                    Read/List/Tree : attr appears in browse/query result panels
//                    Write          : attr appears in properties panels
//                    Query/EZQuery  : attr appears in query condition panels
//       <modif>    = writable field logical flag (Y or N):
//                    N -> NOT modifiable / Y -> modifiable
// ==============================================================================
//
// MASK DEFAULT
//
// --------------------------------------------------
ENTITY User Requirement   @Inherits
// --------------------------------------------------
//
//
// --------------------------------------------------
ENTITY Use Case
// --------------------------------------------------
ATTR Content Data;N;N;$
ATTR Content Text;N;N;$
ATTR Content Type;N;N;rtf.gz.b64
ATTR Designated User;N;N;Unassigned
ATTR Use Case Estimated Duration;N;N;0.00
ATTR Notes;N;N;$
ATTR Originator;N;N;$
ATTR Synopsis;N;N;$
ATTR Title;Y;N;$
ATTR current;N;Y;Propose
VALUE Propose
VALUE Approve
VALUE Validate
VALUE Review
VALUE Release
VALUE Obsolete
ATTR description;N;N;$
ATTR modified;N;N;$
ATTR name;N;N;$
ATTR organization;N;N;$
ATTR originated;N;N;$
ATTR owner;N;N;$
ATTR project;N;N;$
ATTR reserved;N;N;false
ATTR reservedby;N;N;$
ATTR revision;N;N;$
//ATTR lattice;N;N;$

// ---------
FUNC Tree
// ---------
FATTR Title;N
FATTR revision;N
// ---------
FUNC Create
// ---------
FATTR name;N
//FATTR revision;Y
FATTR Title;Y
//FATTR description;Y
// ---------
FUNC EZQuery
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR Designated User;Y
FATTR Originator;Y
FATTR Title;Y
FATTR Notes;Y
//FATTR Estimated Cost;Y
FATTR Synopsis;Y
FATTR Content Text;Y
// ---------
FUNC List
// ---------
FATTR name;N
FATTR revision;N
FATTR Title;N
FATTR current;N
FATTR organization;N
FATTR description;N
FATTR project;N
FATTR reserved;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
FATTR owner;N
FATTR Designated User;N
FATTR Originator;N
FATTR Notes;N
//FATTR Estimated Cost;N
FATTR Synopsis;N
FATTR Content Text;N
// ---------
FUNC Query
// ---------
FATTR revision;Y
FATTR organization;Y
FATTR description;Y
FATTR name;Y
FATTR current;Y
FATTR reserved;Y
FATTR reservedby;Y
FATTR modified;Y
FATTR originated;Y
FATTR project;Y
FATTR owner;Y
FATTR Designated User;Y
FATTR Originator;Y
FATTR Title;Y
FATTR Notes;Y
//FATTR Estimated Cost;Y
FATTR Synopsis;Y
FATTR Content Text;Y
// ---------
FUNC Read
// ---------
FATTR Title;N
FATTR name;N
FATTR revision;N
FATTR current;N
FATTR Content Text;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
// ---------
FUNC Write
// ---------
FATTR Title;Y
FATTR name;N
FATTR revision;N
FATTR current;N
FATTR Content Text;N
FATTR owner;N
FATTR project;N
FATTR organization;N
FATTR reservedby;N
FATTR modified;N
FATTR originated;N
