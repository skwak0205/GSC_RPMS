# ----------------------------------------------------------------------------
# help tags
# ----------------------------------------------------------------------------

MaskCompilerHelp=\
使用情况\: java VPLMPosMaskCompiler [-h]\\n\
\                                [-addpath <additional_input_directory>]\\n\
\                                [-d <output_directory>]\\n\
\                                [-log <log_file>]\\n\
\                                [-html <html_directory>]\\n\
\                                [-solution <solution>]\\n\
\                                [-m <mask_name>]\\n\
\\n\
编译位于类路径的 vplm/startup/mask/<mask_name> 子目录中的所有 .mask 文件。\\n\
编译的文件为\: <output_directory>/<mask_name>[@<solution>].SecurityMask\\n日志文件为     \: <output_directory>/result.log\\n\
\\n\
参数\:\\n\
\  -h\:       此帮助\\n\
\  -addpath\: 定义了在其中搜索掩码文件的其他输入目录（绝对路径）\\n\
\  -d\:       定义了日志和编译的掩码文件的输出目录\\n\
\  -html\:    定义了掩码 HTML 渲染文件的输出目录\\n\
\  -log\:     定义了输出日志文件 (default\: <output_directory>/result.log)\\n\
\  -solution\:定义了解决方案（空默认值代表普通解决方案）\\n\
\  -m\:       定义了掩码名称 (default\: DEFAULT)\\n\
\\n\
部署\:\\n\
\  必须在 ENOVIA Web 应用程序的 WEB-INF/classes/vplm/mask 目录中拷贝安全掩码文件。

MaskGeneratorHelp=\
使用情况\: java VPLMPosMaskGenerator [-h]\\n\
\                                 [-addpath <additional_input_directory>]\\n\
\                                 [-d <output_directory>]\\n\
\                                 [-log <log_file>]\\n\
\                                 [-solution <solution_name>]\\n\
\                                 [-m <mask_name>]\\n\
\                                 <modeler> [<modeler> ...]\\n\
\\n\
生成给定建模器关联的 .mask 文件。\\n\
生成的文件为\: <output_directory>/<modeler>.mask\\n\
\\n\
参数\:\\n\
\  -h\:       此帮助\\n\
\  -addpath\: 定义了在其中搜索掩码文件的其他输入目录（绝对路径）\\n\
\  -d\:       定义了生成的掩码文件的输出目录\
\  -log\:     定义了输出日志文件 (default\: <output_directory>/result.log)\\n\
\  -solution\:定义了解决方案（空默认值代表普通解决方案）\\n\
\  -m\:       定义了掩码名称 (default\: DEFAULT)\\n\
\\n\
注意：生成后（可能是修改），必须使用 VPLMPosMaskCompiler 工具编译\\n\
\      掩码文件。

# ----------------------------------------------------------------------------
# Information and trace messages
# ----------------------------------------------------------------------------

INFO_ParentModeler_Mask=父级建模器“{0}”的掩码文件为：{1}

INFO_Entity_init_from_parent=正在初始化实体“{0}”的属性掩码

INFO_Entity_inherited_attribute=拷贝属性“{0}”

INFO_Entity_inherited_func_attribute=拷贝属性“{0}”

INFO_Attribute_skip_internal=跳过内部属性“{0}”

INFO_Attribute_skip_aggregate=跳过聚集属性“{0}”

INFO_Attribute=添加属性“{0}”，必需项 ={1}，外部项 ={2}，可修改项 ={3}

INFO_IDSet=添加属性“{0}”

# ----------------------------------------------------------------------------
# generation warnings and errors tags
# ----------------------------------------------------------------------------

Modeler_does_not_exist=“{0}”建模器不存在

Modeler_has_no_entity=建模器“{0}”没有实体

File_cannot_be_opened=无法打开 {0} 文件“{1}”― 原因：{2}

File_cannot_be_created=无法创建 {0} 文件“{1}”― 原因：{2}

# ----------------------------------------------------------------------------
# compilation warnings and errors tags
# ----------------------------------------------------------------------------

Command_is_Unknown=未知命令 [{0}]

Command_is_Unknown.advice=验证命令语法

UnexpectedMaskName=掩码名称应为“{0}”，而非“{1}”

UnexpectedMaskName.advice=在 MASK 命令中修改掩码名称

Entity_is_Unknown=实体“{0}”不属于包“{1}”

Entity_is_Unknown.advice=这可能是因为拼写错误\: 请检查元数据中的语法是否正确

Attr_was_not_Previously_Defined=实体“{0}”：未通过 'ATTR' 命令预定义属性“{1}”

Attr_was_not_Previously_Defined.advice=任何属性都必须在用于 'FATTR' 之前在 'ATTR' 命令中进行声明

Attr_is_Unknown=实体“{0}”没有“{1}”属性

Attr_is_Unknown.advice=这可能是因为拼写错误\: \\n请检查元数据中的语法是否正确

Attr_should_be_Mandatory=实体“{0}”，属性“{1}”：如果强制性特性在元数据中为 'Y'，则将不能为 'N'

Attr_should_be_Mandatory.advice=元数据中强制性属性必须在掩码中保持强制性

Attr_should_have_AuthValues_instead_of_Help=实体“{0}”，属性“{1}”：如果已在元数据中定义“授权”值，则将无法使用“帮助”值

Attr_should_have_AuthValues_instead_of_Help.advice=将授权/帮助值标记设置为 'Y'（授权值）

AttrValue_does_not_belong_to_Authorized_values=实体“{0}”，属性“{1}”：无法将“{2}”值用作授权值

AttrValue_does_not_belong_to_Authorized_values.advice=在掩码中声明的授权值必须是元数据授权值的子集

AttrDefValue_must_be_set_when_Authorized_values=实体“{0}”，属性“{1}”：当授权值标记为 'Y' 时，默认值不能为 null

AttrDefValue_must_be_set_when_Authorized_values.advice=设置默认值，或将授权值标记转换为 'N'

Function_is_Unknown=意外“{0}”函数

Function_is_Unknown.advice=使用其中一个预期函数名称

Attr_External_cannot_be_used_with_function=实体“{0}”：不能在“{2}”函数中将外部类型“{1}”属性设置为可修改

Attr_External_cannot_be_used_with_function.advice=或者在 FATTR 命令中将其设置为不可修改 ('N')\\n或者从此函数中移除属性（移除 FATTR 命令）

Attr_Mandatory_cannot_be_set_as_NOT_modifiable=实体“{0}”：不能在 'CREATE' 函数中将强制性“{1}”属性设置为不可编辑

Attr_Mandatory_cannot_be_set_as_NOT_modifiable.advice=在 'CREATE' 函数中将强制性属性设置为可编辑 ('Y')

Attr_ReadOnly_cannot_be_modified_with_WRITE=实体“{0}”：不能在 'WRITE' 函数中修改保护为只读的属性“{1}”

Attr_ReadOnly_cannot_be_modified_with_WRITE.advice=在 'WRITE' 函数中将只读属性设置为不可编辑 ('N')

Attr_has_Invalid_Boolean_value=布尔值不应为“{0}”\: 应该为 'Y' 或 'N'

Attr_cannot_be_masked_due_to_InvalidProtection=实体“{0}”：无法在掩码中使用属性“{1}”，因为其保护标记 ({2}) 将其拒绝

Attr_cannot_be_masked_due_to_InvalidProtection.advice=移除专有/内部属性

Package_has_NO_Mask=此自定义包没有关联的掩码

Package_has_NO_Mask.advice=定义每个自定义包的 .mask 文件
